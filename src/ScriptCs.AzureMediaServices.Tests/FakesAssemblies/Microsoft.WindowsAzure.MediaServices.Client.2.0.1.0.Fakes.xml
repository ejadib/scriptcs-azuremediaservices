<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsAzure.MediaServices.Client.2.0.1.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.MicrosoftWindowsAzureMediaServicesClientDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Microsoft.WindowsAzure.MediaServices.Client</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.AccessPolicyBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.AccessPolicyBaseCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.ConstructorCloudMediaContext">
            <summary>Sets the shim of AccessPolicyBaseCollection.AccessPolicyBaseCollection(CloudMediaContext cloudMediaContext)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.CreateAsyncStringTimeSpanAccessPermissions">
            <summary>Sets the shim of AccessPolicyBaseCollection.CreateAsync(String name, TimeSpan duration, AccessPermissions permissions)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.CreateStringTimeSpanAccessPermissions">
            <summary>Sets the shim of AccessPolicyBaseCollection.Create(String name, TimeSpan duration, AccessPermissions permissions)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.VerifyAccessPolicyIAccessPolicy">
            <summary>Sets the shim of AccessPolicyBaseCollection.VerifyAccessPolicy(IAccessPolicy accessPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection._CreateAsyncb__1TaskOfDataServiceResponse">
            <summary>Sets the shim of AccessPolicyBaseCollection.&lt;CreateAsync&gt;b__1(Task`1&lt;DataServiceResponse&gt; t)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.AllInstances.CreateAsyncStringTimeSpanAccessPermissions">
            <summary>Sets the shim of AccessPolicyBaseCollection.CreateAsync(String name, TimeSpan duration, AccessPermissions permissions)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAccessPolicyBaseCollection.AllInstances.CreateStringTimeSpanAccessPermissions">
            <summary>Sets the shim of AccessPolicyBaseCollection.Create(String name, TimeSpan duration, AccessPermissions permissions)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.AssetBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.AssetBaseCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IAsset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IAsset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.Constructor">
            <summary>Sets the shim of AssetBaseCollection.AssetBaseCollection()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.VerifyAssetIAsset">
            <summary>Sets the shim of AssetBaseCollection.VerifyAsset(IAsset asset)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetBaseCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.AssetCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.AssetCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IAsset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IAsset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.ConstructorCloudMediaContext">
            <summary>Sets the shim of AssetCollection.AssetCollection(CloudMediaContext cloudMediaContext)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.CreateAsyncStringAssetCreationOptionsCancellationToken">
            <summary>Sets the shim of AssetCollection.CreateAsync(String assetName, AssetCreationOptions options, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.CreateStringAssetCreationOptions">
            <summary>Sets the shim of AssetCollection.Create(String assetName, AssetCreationOptions options)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.QueryableGet">
            <summary>Sets the shim of AssetCollection.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.QueryableSetIQueryableOfIAsset">
            <summary>Sets the shim of AssetCollection.set_Queryable(IQueryable`1&lt;IAsset&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection._ctorb__0">
            <summary>Sets the shim of AssetCollection.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.AllInstances.CreateAsyncStringAssetCreationOptionsCancellationToken">
            <summary>Sets the shim of AssetCollection.CreateAsync(String assetName, AssetCreationOptions options, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.AllInstances.CreateStringAssetCreationOptions">
            <summary>Sets the shim of AssetCollection.Create(String assetName, AssetCreationOptions options)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.AllInstances.QueryableGet">
            <summary>Sets the shim of AssetCollection.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.AllInstances.QueryableSetIQueryableOfIAsset">
            <summary>Sets the shim of AssetCollection.set_Queryable(IQueryable`1&lt;IAsset&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetCollection.AllInstances._ctorb__0">
            <summary>Sets the shim of AssetCollection.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.AssetFileBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.AssetFileBaseCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IAssetFile})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IAssetFile})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.Constructor">
            <summary>Sets the shim of AssetFileBaseCollection.AssetFileBaseCollection()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimAssetFileBaseCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.#ctor(Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.Constructor">
            <summary>Sets the shim of BaseCollection`1.BaseCollection`1()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.ElementTypeGet">
            <summary>Sets the shim of BaseCollection`1.get_ElementType()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.ExpressionGet">
            <summary>Sets the shim of BaseCollection`1.get_Expression()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.GetEnumerator">
            <summary>Sets the shim of BaseCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.ProviderGet">
            <summary>Sets the shim of BaseCollection`1.get_Provider()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of BaseCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.AllInstances.ElementTypeGet">
            <summary>Sets the shim of BaseCollection`1.get_ElementType()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.AllInstances.ExpressionGet">
            <summary>Sets the shim of BaseCollection`1.get_Expression()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of BaseCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.AllInstances.ProviderGet">
            <summary>Sets the shim of BaseCollection`1.get_Provider()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBaseCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of BaseCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.#ctor(Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.BlobGetRequestKeyValuePairOfInt64Int32CloudBlockBlob">
            <summary>Sets the shim of BlobTransferClient.BlobGetRequest(KeyValuePair`2&lt;Int64,Int32&gt; blockOffsetAndLength, CloudBlockBlob blob)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.Constructor">
            <summary>Sets the shim of BlobTransferClient.BlobTransferClient()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.DownloadBlobUriStringFileEncryptionUInt64CancellationTokenRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.DownloadBlob(Uri uri, String localFile, FileEncryption fileEncryption, UInt64 initializationVector, CancellationToken cancellationToken, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.DownloadBlobUriStringFileEncryptionUInt64CloudBlobClientCancellationTokenRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.DownloadBlob(Uri uri, String localFile, FileEncryption fileEncryption, UInt64 initializationVector, CloudBlobClient client, CancellationToken cancellationToken, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.DownloadFileFromBlobUriStringFileEncryptionUInt64CloudBlobClientCancellationTokenRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.DownloadFileFromBlob(Uri uri, String localFile, FileEncryption fileEncryption, UInt64 initializationVector, CloudBlobClient client, CancellationToken cancellationToken, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.GetBlockSizeInt64">
            <summary>Sets the shim of BlobTransferClient.GetBlockSize(Int64 fileSize)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.GetMd5HashFromStreamByteArray">
            <summary>Sets the shim of BlobTransferClient.GetMd5HashFromStream(Byte[] data)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.InitializeCloudBlockBlobUriCloudBlobClientRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.InitializeCloudBlockBlob(Uri uri, CloudBlobClient client, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.NumberOfConcurrentTransfersGet">
            <summary>Sets the shim of BlobTransferClient.get_NumberOfConcurrentTransfers()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.NumberOfConcurrentTransfersSetInt32">
            <summary>Sets the shim of BlobTransferClient.set_NumberOfConcurrentTransfers(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.OnTaskCompletedExceptionBooleanStringUriBlobTransferType">
            <summary>Sets the shim of BlobTransferClient.OnTaskCompleted(Exception ex, Boolean isCancelled, String localFile, Uri uri, BlobTransferType transferType)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.OnTaskProgressChangedBlobTransferProgressChangedEventArgs">
            <summary>Sets the shim of BlobTransferClient.OnTaskProgressChanged(BlobTransferProgressChangedEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.ParallelTransferThreadCountGet">
            <summary>Sets the shim of BlobTransferClient.get_ParallelTransferThreadCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.ParallelTransferThreadCountSetInt32">
            <summary>Sets the shim of BlobTransferClient.set_ParallelTransferThreadCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.PreapreUploadQueueInt32Int64Int32RefListOfStringOut">
            <summary>Sets the shim of BlobTransferClient.PreapreUploadQueue(Int32 maxBlockSize, Int64 fileSize, Int32&amp; numThreads, List`1&lt;String&gt;&amp; blockList)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.PrepareDownloadQueueInt64Int32Int32Ref">
            <summary>Sets the shim of BlobTransferClient.PrepareDownloadQueue(Int64 blobLength, Int32 bufferLength, Int32&amp; numThreads)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.ReadResponseStreamFileEncryptionUInt64FileStreamByteArrayHttpWebResponseKeyValuePairOfInt64Int32Int64Ref">
            <summary>Sets the shim of BlobTransferClient.ReadResponseStream(FileEncryption fileEncryption, UInt64 initializationVector, FileStream fs, Byte[] buffer, HttpWebResponse response, KeyValuePair`2&lt;Int64,Int32&gt; blockOffsetAndLength, Int64&amp; bytesDownloaded)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.SetMaxConnectionLimitUri">
            <summary>Sets the shim of BlobTransferClient.SetMaxConnectionLimit(Uri url)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.TransferCompletedAddEventHandlerOfBlobTransferCompleteEventArgs">
            <summary>Sets the shim of BlobTransferClient.add_TransferCompleted(EventHandler`1&lt;BlobTransferCompleteEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.TransferCompletedRemoveEventHandlerOfBlobTransferCompleteEventArgs">
            <summary>Sets the shim of BlobTransferClient.remove_TransferCompleted(EventHandler`1&lt;BlobTransferCompleteEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.TransferProgressChangedAddEventHandlerOfBlobTransferProgressChangedEventArgs">
            <summary>Sets the shim of BlobTransferClient.add_TransferProgressChanged(EventHandler`1&lt;BlobTransferProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.TransferProgressChangedRemoveEventHandlerOfBlobTransferProgressChangedEventArgs">
            <summary>Sets the shim of BlobTransferClient.remove_TransferProgressChanged(EventHandler`1&lt;BlobTransferProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.UploadBlobUriStringFileEncryptionCancellationTokenCloudBlobClientRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.UploadBlob(Uri url, String localFile, FileEncryption fileEncryption, CancellationToken cancellationToken, CloudBlobClient client, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.UploadBlobUriStringFileEncryptionCancellationTokenRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.UploadBlob(Uri url, String localFile, FileEncryption fileEncryption, CancellationToken cancellationToken, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.UploadFileToBlobCancellationTokenUriStringFileEncryptionCloudBlobClientRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.UploadFileToBlob(CancellationToken cancellationToken, Uri uri, String localFile, FileEncryption fileEncryption, CloudBlobClient client, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.DownloadBlobUriStringFileEncryptionUInt64CancellationTokenRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.DownloadBlob(Uri uri, String localFile, FileEncryption fileEncryption, UInt64 initializationVector, CancellationToken cancellationToken, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.DownloadBlobUriStringFileEncryptionUInt64CloudBlobClientCancellationTokenRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.DownloadBlob(Uri uri, String localFile, FileEncryption fileEncryption, UInt64 initializationVector, CloudBlobClient client, CancellationToken cancellationToken, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.DownloadFileFromBlobUriStringFileEncryptionUInt64CloudBlobClientCancellationTokenRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.DownloadFileFromBlob(Uri uri, String localFile, FileEncryption fileEncryption, UInt64 initializationVector, CloudBlobClient client, CancellationToken cancellationToken, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.NumberOfConcurrentTransfersGet">
            <summary>Sets the shim of BlobTransferClient.get_NumberOfConcurrentTransfers()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.NumberOfConcurrentTransfersSetInt32">
            <summary>Sets the shim of BlobTransferClient.set_NumberOfConcurrentTransfers(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.OnTaskCompletedExceptionBooleanStringUriBlobTransferType">
            <summary>Sets the shim of BlobTransferClient.OnTaskCompleted(Exception ex, Boolean isCancelled, String localFile, Uri uri, BlobTransferType transferType)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.OnTaskProgressChangedBlobTransferProgressChangedEventArgs">
            <summary>Sets the shim of BlobTransferClient.OnTaskProgressChanged(BlobTransferProgressChangedEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.ParallelTransferThreadCountGet">
            <summary>Sets the shim of BlobTransferClient.get_ParallelTransferThreadCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.ParallelTransferThreadCountSetInt32">
            <summary>Sets the shim of BlobTransferClient.set_ParallelTransferThreadCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.ReadResponseStreamFileEncryptionUInt64FileStreamByteArrayHttpWebResponseKeyValuePairOfInt64Int32Int64Ref">
            <summary>Sets the shim of BlobTransferClient.ReadResponseStream(FileEncryption fileEncryption, UInt64 initializationVector, FileStream fs, Byte[] buffer, HttpWebResponse response, KeyValuePair`2&lt;Int64,Int32&gt; blockOffsetAndLength, Int64&amp; bytesDownloaded)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.SetMaxConnectionLimitUri">
            <summary>Sets the shim of BlobTransferClient.SetMaxConnectionLimit(Uri url)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.TransferCompletedAddEventHandlerOfBlobTransferCompleteEventArgs">
            <summary>Sets the shim of BlobTransferClient.add_TransferCompleted(EventHandler`1&lt;BlobTransferCompleteEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.TransferCompletedRemoveEventHandlerOfBlobTransferCompleteEventArgs">
            <summary>Sets the shim of BlobTransferClient.remove_TransferCompleted(EventHandler`1&lt;BlobTransferCompleteEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.TransferProgressChangedAddEventHandlerOfBlobTransferProgressChangedEventArgs">
            <summary>Sets the shim of BlobTransferClient.add_TransferProgressChanged(EventHandler`1&lt;BlobTransferProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.TransferProgressChangedRemoveEventHandlerOfBlobTransferProgressChangedEventArgs">
            <summary>Sets the shim of BlobTransferClient.remove_TransferProgressChanged(EventHandler`1&lt;BlobTransferProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.UploadBlobUriStringFileEncryptionCancellationTokenCloudBlobClientRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.UploadBlob(Uri url, String localFile, FileEncryption fileEncryption, CancellationToken cancellationToken, CloudBlobClient client, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.UploadBlobUriStringFileEncryptionCancellationTokenRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.UploadBlob(Uri url, String localFile, FileEncryption fileEncryption, CancellationToken cancellationToken, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferClient.AllInstances.UploadFileToBlobCancellationTokenUriStringFileEncryptionCloudBlobClientRetryPolicy">
            <summary>Sets the shim of BlobTransferClient.UploadFileToBlob(CancellationToken cancellationToken, Uri uri, String localFile, FileEncryption fileEncryption, CloudBlobClient client, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.#ctor(Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.ConstructorExceptionBooleanObjectStringUriBlobTransferType">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.BlobTransferCompleteEventArgs(Exception error, Boolean isCanceled, Object userState, String localFileName, Uri url, BlobTransferType transferType)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.LocalFileNameGet">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.get_LocalFileName()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.LocalFileNameSetString">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.set_LocalFileName(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.TransferTypeGet">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.get_TransferType()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.TransferTypeSetBlobTransferType">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.set_TransferType(BlobTransferType value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.UrlGet">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.get_Url()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.UrlSetUri">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.set_Url(Uri value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.AllInstances.LocalFileNameGet">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.get_LocalFileName()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.AllInstances.LocalFileNameSetString">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.set_LocalFileName(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.AllInstances.TransferTypeGet">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.get_TransferType()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.AllInstances.TransferTypeSetBlobTransferType">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.set_TransferType(BlobTransferType value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.AllInstances.UrlGet">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.get_Url()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferCompleteEventArgs.AllInstances.UrlSetUri">
            <summary>Sets the shim of BlobTransferCompleteEventArgs.set_Url(Uri value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.#ctor(Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.BytesTransferredGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_BytesTransferred()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.BytesTransferredSetInt64">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_BytesTransferred(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.ConstructorInt64Int64Int64Int32DoubleUriStringObject">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.BlobTransferProgressChangedEventArgs(Int64 bytesTransferred, Int64 lastBlockBytesTransferred, Int64 totalBytesToTransfer, Int32 progressPercentage, Double speed, Uri uri, String localfile, Object userState)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.LastBlockBytesTransferredGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_LastBlockBytesTransferred()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.LastBlockBytesTransferredSetInt64">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_LastBlockBytesTransferred(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.LocalFileGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_LocalFile()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.LocalFileSetString">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_LocalFile(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.TimeRemainingGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_TimeRemaining()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.TotalBytesToTransferGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_TotalBytesToTransfer()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.TotalBytesToTransferSetInt64">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_TotalBytesToTransfer(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.TransferRateBytesPerSecondGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_TransferRateBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.TransferRateBytesPerSecondSetDouble">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_TransferRateBytesPerSecond(Double value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.UriGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_Uri()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.UriSetUri">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_Uri(Uri value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.BytesTransferredGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_BytesTransferred()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.BytesTransferredSetInt64">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_BytesTransferred(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.LastBlockBytesTransferredGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_LastBlockBytesTransferred()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.LastBlockBytesTransferredSetInt64">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_LastBlockBytesTransferred(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.LocalFileGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_LocalFile()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.LocalFileSetString">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_LocalFile(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.TimeRemainingGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_TimeRemaining()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.TotalBytesToTransferGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_TotalBytesToTransfer()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.TotalBytesToTransferSetInt64">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_TotalBytesToTransfer(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.TransferRateBytesPerSecondGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_TransferRateBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.TransferRateBytesPerSecondSetDouble">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_TransferRateBytesPerSecond(Double value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.UriGet">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.get_Uri()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimBlobTransferProgressChangedEventArgs.AllInstances.UriSetUri">
            <summary>Sets the shim of BlobTransferProgressChangedEventArgs.set_Uri(Uri value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.#ctor(Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.Constructor">
            <summary>Sets the shim of CloudBaseCollection`1.CloudBaseCollection`1()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.QueryableGet">
            <summary>Sets the shim of CloudBaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.QueryableSetIQueryableOfT0">
            <summary>Sets the shim of CloudBaseCollection`1.set_Queryable(IQueryable`1&lt;!0&gt; value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.AllInstances.QueryableGet">
            <summary>Sets the shim of CloudBaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudBaseCollection`1.AllInstances.QueryableSetIQueryableOfT0">
            <summary>Sets the shim of CloudBaseCollection`1.set_Queryable(IQueryable`1&lt;!0&gt; value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.CloudMediaContext</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.#ctor(Microsoft.WindowsAzure.MediaServices.Client.CloudMediaContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AccessPoliciesGet">
            <summary>Sets the shim of CloudMediaContext.get_AccessPolicies()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AssetsGet">
            <summary>Sets the shim of CloudMediaContext.get_Assets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.ConstructorStringString">
            <summary>Sets the shim of CloudMediaContext.CloudMediaContext(String accountName, String accountKey)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.ConstructorUriStringString">
            <summary>Sets the shim of CloudMediaContext.CloudMediaContext(Uri apiServer, String accountName, String accountKey)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.ConstructorUriStringStringStringString">
            <summary>Sets the shim of CloudMediaContext.CloudMediaContext(Uri apiServer, String accountName, String accountKey, String scope, String acsBaseAddress)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.ContentKeysGet">
            <summary>Sets the shim of CloudMediaContext.get_ContentKeys()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.FilesGet">
            <summary>Sets the shim of CloudMediaContext.get_Files()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.IngestManifestAssetsGet">
            <summary>Sets the shim of CloudMediaContext.get_IngestManifestAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.IngestManifestFilesGet">
            <summary>Sets the shim of CloudMediaContext.get_IngestManifestFiles()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.IngestManifestsGet">
            <summary>Sets the shim of CloudMediaContext.get_IngestManifests()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.JobTemplatesGet">
            <summary>Sets the shim of CloudMediaContext.get_JobTemplates()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.JobsGet">
            <summary>Sets the shim of CloudMediaContext.get_Jobs()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.LocatorsGet">
            <summary>Sets the shim of CloudMediaContext.get_Locators()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.MediaProcessorsGet">
            <summary>Sets the shim of CloudMediaContext.get_MediaProcessors()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.NumberOfConcurrentTransfersGet">
            <summary>Sets the shim of CloudMediaContext.get_NumberOfConcurrentTransfers()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.NumberOfConcurrentTransfersSetInt32">
            <summary>Sets the shim of CloudMediaContext.set_NumberOfConcurrentTransfers(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.ParallelTransferThreadCountGet">
            <summary>Sets the shim of CloudMediaContext.get_ParallelTransferThreadCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.ParallelTransferThreadCountSetInt32">
            <summary>Sets the shim of CloudMediaContext.set_ParallelTransferThreadCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.StaticConstructor">
            <summary>Sets the shim of CloudMediaContext.CloudMediaContext()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.AccessPoliciesGet">
            <summary>Sets the shim of CloudMediaContext.get_AccessPolicies()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.AssetsGet">
            <summary>Sets the shim of CloudMediaContext.get_Assets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.ContentKeysGet">
            <summary>Sets the shim of CloudMediaContext.get_ContentKeys()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.FilesGet">
            <summary>Sets the shim of CloudMediaContext.get_Files()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.IngestManifestAssetsGet">
            <summary>Sets the shim of CloudMediaContext.get_IngestManifestAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.IngestManifestFilesGet">
            <summary>Sets the shim of CloudMediaContext.get_IngestManifestFiles()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.IngestManifestsGet">
            <summary>Sets the shim of CloudMediaContext.get_IngestManifests()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.JobTemplatesGet">
            <summary>Sets the shim of CloudMediaContext.get_JobTemplates()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.JobsGet">
            <summary>Sets the shim of CloudMediaContext.get_Jobs()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.LocatorsGet">
            <summary>Sets the shim of CloudMediaContext.get_Locators()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.MediaProcessorsGet">
            <summary>Sets the shim of CloudMediaContext.get_MediaProcessors()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.NumberOfConcurrentTransfersGet">
            <summary>Sets the shim of CloudMediaContext.get_NumberOfConcurrentTransfers()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.NumberOfConcurrentTransfersSetInt32">
            <summary>Sets the shim of CloudMediaContext.set_NumberOfConcurrentTransfers(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.ParallelTransferThreadCountGet">
            <summary>Sets the shim of CloudMediaContext.get_ParallelTransferThreadCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCloudMediaContext.AllInstances.ParallelTransferThreadCountSetInt32">
            <summary>Sets the shim of CloudMediaContext.set_ParallelTransferThreadCount(Int32 value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCommonEncryption">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.CommonEncryption</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCommonEncryption.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCommonEncryption.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCommonEncryption.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCommonEncryption.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCommonEncryption.EncryptContentKeyToCertificateX509Certificate2ByteArray">
            <summary>Sets the shim of CommonEncryption.EncryptContentKeyToCertificate(X509Certificate2 cert, Byte[] contentKey)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCommonEncryption.GeneratePlayReadyContentKeyByteArrayGuid">
            <summary>Sets the shim of CommonEncryption.GeneratePlayReadyContentKey(Byte[] keySeed, Guid keyId)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimCommonEncryption.StaticConstructor">
            <summary>Sets the shim of CommonEncryption.CommonEncryption()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.ConfigurationEncryption</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.#ctor(Microsoft.WindowsAzure.MediaServices.Client.ConfigurationEncryption)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.Constructor">
            <summary>Sets the shim of ConfigurationEncryption.ConfigurationEncryption()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.ConstructorGuidByteArrayByteArray">
            <summary>Sets the shim of ConfigurationEncryption.ConfigurationEncryption(Guid keyIdentifier, Byte[] contentKey, Byte[] initializationVector)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.DecryptString">
            <summary>Sets the shim of ConfigurationEncryption.Decrypt(String encryptedValue)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.Dispose">
            <summary>Sets the shim of ConfigurationEncryption.Dispose()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.DisposeBoolean">
            <summary>Sets the shim of ConfigurationEncryption.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.EncryptContentKeyToCertificateX509Certificate2">
            <summary>Sets the shim of ConfigurationEncryption.EncryptContentKeyToCertificate(X509Certificate2 certToUse)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.EncryptString">
            <summary>Sets the shim of ConfigurationEncryption.Encrypt(String original)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.GetChecksum">
            <summary>Sets the shim of ConfigurationEncryption.GetChecksum()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.GetContentKey">
            <summary>Sets the shim of ConfigurationEncryption.GetContentKey()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.GetInitializationVector">
            <summary>Sets the shim of ConfigurationEncryption.GetInitializationVector()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.GetInitializationVectorAsString">
            <summary>Sets the shim of ConfigurationEncryption.GetInitializationVectorAsString()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.GetInitializationVectorFromStringString">
            <summary>Sets the shim of ConfigurationEncryption.GetInitializationVectorFromString(String initializationVector)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.GetKeyIdentifierAsString">
            <summary>Sets the shim of ConfigurationEncryption.GetKeyIdentifierAsString()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.InternalInitGuidByteArrayByteArray">
            <summary>Sets the shim of ConfigurationEncryption.InternalInit(Guid keyIdentifier, Byte[] contentKey, Byte[] initializationVector)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.KeyIdentifierGet">
            <summary>Sets the shim of ConfigurationEncryption.get_KeyIdentifier()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.KeyIdentifierSetGuid">
            <summary>Sets the shim of ConfigurationEncryption.set_KeyIdentifier(Guid value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.DecryptString">
            <summary>Sets the shim of ConfigurationEncryption.Decrypt(String encryptedValue)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.Dispose">
            <summary>Sets the shim of ConfigurationEncryption.Dispose()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ConfigurationEncryption.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.EncryptContentKeyToCertificateX509Certificate2">
            <summary>Sets the shim of ConfigurationEncryption.EncryptContentKeyToCertificate(X509Certificate2 certToUse)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.EncryptString">
            <summary>Sets the shim of ConfigurationEncryption.Encrypt(String original)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.GetChecksum">
            <summary>Sets the shim of ConfigurationEncryption.GetChecksum()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.GetContentKey">
            <summary>Sets the shim of ConfigurationEncryption.GetContentKey()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.GetInitializationVector">
            <summary>Sets the shim of ConfigurationEncryption.GetInitializationVector()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.GetInitializationVectorAsString">
            <summary>Sets the shim of ConfigurationEncryption.GetInitializationVectorAsString()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.GetKeyIdentifierAsString">
            <summary>Sets the shim of ConfigurationEncryption.GetKeyIdentifierAsString()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.InternalInitGuidByteArrayByteArray">
            <summary>Sets the shim of ConfigurationEncryption.InternalInit(Guid keyIdentifier, Byte[] contentKey, Byte[] initializationVector)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.KeyIdentifierGet">
            <summary>Sets the shim of ConfigurationEncryption.get_KeyIdentifier()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimConfigurationEncryption.AllInstances.KeyIdentifierSetGuid">
            <summary>Sets the shim of ConfigurationEncryption.set_KeyIdentifier(Guid value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.ContentKeyBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.ContentKeyBaseCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IContentKey})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IContentKey})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.Constructor">
            <summary>Sets the shim of ContentKeyBaseCollection.ContentKeyBaseCollection()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.ContentKeyQueryableGet">
            <summary>Sets the shim of ContentKeyBaseCollection.get_ContentKeyQueryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.ContentKeyQueryableSetIQueryableOfIContentKey">
            <summary>Sets the shim of ContentKeyBaseCollection.set_ContentKeyQueryable(IQueryable`1&lt;IContentKey&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.CreateAsyncGuidByteArray">
            <summary>Sets the shim of ContentKeyBaseCollection.CreateAsync(Guid keyId, Byte[] contentKey)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.CreateGuidByteArray">
            <summary>Sets the shim of ContentKeyBaseCollection.Create(Guid keyId, Byte[] contentKey)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.GetCertificateForProtectionKeyIdDataServiceContextString">
            <summary>Sets the shim of ContentKeyBaseCollection.GetCertificateForProtectionKeyId(DataServiceContext dataContext, String protectionKeyId)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.GetCertificateToEncryptContentKeyDataServiceContextContentKeyType">
            <summary>Sets the shim of ContentKeyBaseCollection.GetCertificateToEncryptContentKey(DataServiceContext dataContext, ContentKeyType contentKeyType)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.GetProtectionKeyIdForContentKeyDataServiceContextContentKeyType">
            <summary>Sets the shim of ContentKeyBaseCollection.GetProtectionKeyIdForContentKey(DataServiceContext dataContext, ContentKeyType contentKeyType)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.VerifyContentKeyIContentKey">
            <summary>Sets the shim of ContentKeyBaseCollection.VerifyContentKey(IContentKey contentKey)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.AllInstances.ContentKeyQueryableGet">
            <summary>Sets the shim of ContentKeyBaseCollection.get_ContentKeyQueryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.AllInstances.ContentKeyQueryableSetIQueryableOfIContentKey">
            <summary>Sets the shim of ContentKeyBaseCollection.set_ContentKeyQueryable(IQueryable`1&lt;IContentKey&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.AllInstances.CreateAsyncGuidByteArray">
            <summary>Sets the shim of ContentKeyBaseCollection.CreateAsync(Guid keyId, Byte[] contentKey)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyBaseCollection.AllInstances.CreateGuidByteArray">
            <summary>Sets the shim of ContentKeyBaseCollection.Create(Guid keyId, Byte[] contentKey)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.ContentKeyCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.ContentKeyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IContentKey})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IContentKey})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.ConstructorCloudMediaContext">
            <summary>Sets the shim of ContentKeyCollection.ContentKeyCollection(CloudMediaContext cloudMediaContext)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.CreateAsyncGuidByteArrayString">
            <summary>Sets the shim of ContentKeyCollection.CreateAsync(Guid keyId, Byte[] contentKey, String name)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.CreateGuidByteArrayString">
            <summary>Sets the shim of ContentKeyCollection.Create(Guid keyId, Byte[] contentKey, String name)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.QueryableGet">
            <summary>Sets the shim of ContentKeyCollection.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.QueryableSetIQueryableOfIContentKey">
            <summary>Sets the shim of ContentKeyCollection.set_Queryable(IQueryable`1&lt;IContentKey&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection._CreateAsyncb__0TaskOfDataServiceResponse">
            <summary>Sets the shim of ContentKeyCollection.&lt;CreateAsync&gt;b__0(Task`1&lt;DataServiceResponse&gt; t)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.AllInstances.CreateAsyncGuidByteArrayString">
            <summary>Sets the shim of ContentKeyCollection.CreateAsync(Guid keyId, Byte[] contentKey, String name)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.AllInstances.CreateGuidByteArrayString">
            <summary>Sets the shim of ContentKeyCollection.Create(Guid keyId, Byte[] contentKey, String name)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.AllInstances.QueryableGet">
            <summary>Sets the shim of ContentKeyCollection.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimContentKeyCollection.AllInstances.QueryableSetIQueryableOfIContentKey">
            <summary>Sets the shim of ContentKeyCollection.set_Queryable(IQueryable`1&lt;IContentKey&gt; value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.#ctor(Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.BytesDownloadedGet">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.get_BytesDownloaded()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.BytesDownloadedSetInt64">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.set_BytesDownloaded(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.ConstructorInt64Int64">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.DownloadProgressChangedEventArgs(Int64 bytesDownloaded, Int64 totalBytes)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.ProgressGet">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.get_Progress()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.TotalBytesGet">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.get_TotalBytes()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.TotalBytesSetInt64">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.set_TotalBytes(Int64 value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.AllInstances.BytesDownloadedGet">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.get_BytesDownloaded()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.AllInstances.BytesDownloadedSetInt64">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.set_BytesDownloaded(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.AllInstances.ProgressGet">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.get_Progress()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.AllInstances.TotalBytesGet">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.get_TotalBytes()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimDownloadProgressChangedEventArgs.AllInstances.TotalBytesSetInt64">
            <summary>Sets the shim of DownloadProgressChangedEventArgs.set_TotalBytes(Int64 value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.EncryptionUtils</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.CalculateChecksumByteArrayGuid">
            <summary>Sets the shim of EncryptionUtils.CalculateChecksum(Byte[] contentKey, Guid keyId)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.DecryptSymmetricKeyX509Certificate2ByteArray">
            <summary>Sets the shim of EncryptionUtils.DecryptSymmetricKey(X509Certificate2 cert, Byte[] encryptedData)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.EncryptSymmetricKeyDataX509Certificate2ByteArray">
            <summary>Sets the shim of EncryptionUtils.EncryptSymmetricKeyData(X509Certificate2 cert, Byte[] keyData)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.EncryptSymmetricKeyX509Certificate2SymmetricAlgorithm">
            <summary>Sets the shim of EncryptionUtils.EncryptSymmetricKey(X509Certificate2 cert, SymmetricAlgorithm aes)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.GetCertificateFromStoreString">
            <summary>Sets the shim of EncryptionUtils.GetCertificateFromStore(String certificateThumbprint)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.GetCertificateFromStoreStringStoreLocation">
            <summary>Sets the shim of EncryptionUtils.GetCertificateFromStore(String certificateThumbprint, StoreLocation location)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.GetKeyIdAsGuidString">
            <summary>Sets the shim of EncryptionUtils.GetKeyIdAsGuid(String keyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.GetKeyIdentifierAsStringGuid">
            <summary>Sets the shim of EncryptionUtils.GetKeyIdentifierAsString(Guid keyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEncryptionUtils.SaveCertificateToStoreX509Certificate2">
            <summary>Sets the shim of EncryptionUtils.SaveCertificateToStore(X509Certificate2 certToStore)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEnvelopeEncryption">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.EnvelopeEncryption</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEnvelopeEncryption.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEnvelopeEncryption.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEnvelopeEncryption.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEnvelopeEncryption.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimEnvelopeEncryption.StaticConstructor">
            <summary>Sets the shim of EnvelopeEncryption.EnvelopeEncryption()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.#ctor(Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.CodeGet">
            <summary>Sets the shim of ErrorDetail.get_Code()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.CodeSetString">
            <summary>Sets the shim of ErrorDetail.set_Code(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.Constructor">
            <summary>Sets the shim of ErrorDetail.ErrorDetail()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.MessageGet">
            <summary>Sets the shim of ErrorDetail.get_Message()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.MessageSetString">
            <summary>Sets the shim of ErrorDetail.set_Message(String value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.AllInstances.CodeGet">
            <summary>Sets the shim of ErrorDetail.get_Code()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.AllInstances.CodeSetString">
            <summary>Sets the shim of ErrorDetail.set_Code(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.AllInstances.MessageGet">
            <summary>Sets the shim of ErrorDetail.get_Message()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimErrorDetail.AllInstances.MessageSetString">
            <summary>Sets the shim of ErrorDetail.set_Message(String value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.FileEncryption</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.#ctor(Microsoft.WindowsAzure.MediaServices.Client.FileEncryption)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.Constructor">
            <summary>Sets the shim of FileEncryption.FileEncryption()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.ConstructorByteArrayGuid">
            <summary>Sets the shim of FileEncryption.FileEncryption(Byte[] contentKey, Guid keyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.CreateInitializationVectorForFileString">
            <summary>Sets the shim of FileEncryption.CreateInitializationVectorForFile(String fileName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.Dispose">
            <summary>Sets the shim of FileEncryption.Dispose()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.DisposeBoolean">
            <summary>Sets the shim of FileEncryption.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.EncryptContentKeyToCertificateX509Certificate2">
            <summary>Sets the shim of FileEncryption.EncryptContentKeyToCertificate(X509Certificate2 certToUse)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.GetChecksum">
            <summary>Sets the shim of FileEncryption.GetChecksum()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.GetContentKey">
            <summary>Sets the shim of FileEncryption.GetContentKey()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.GetInitializationVectorForFileString">
            <summary>Sets the shim of FileEncryption.GetInitializationVectorForFile(String fileName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.GetKeyIdentifierAsString">
            <summary>Sets the shim of FileEncryption.GetKeyIdentifierAsString()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.GetTransformString">
            <summary>Sets the shim of FileEncryption.GetTransform(String fileName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.GetTransformStringInt64">
            <summary>Sets the shim of FileEncryption.GetTransform(String fileName, Int64 fileOffset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.GetTransformUInt64">
            <summary>Sets the shim of FileEncryption.GetTransform(UInt64 initializationVector)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.GetTransformUInt64Int64">
            <summary>Sets the shim of FileEncryption.GetTransform(UInt64 initializationVector, Int64 fileOffset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.InternalInitByteArrayGuid">
            <summary>Sets the shim of FileEncryption.InternalInit(Byte[] contentKey, Guid keyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.IsInitializationVectorPresentString">
            <summary>Sets the shim of FileEncryption.IsInitializationVectorPresent(String fileName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.KeyIdentifierGet">
            <summary>Sets the shim of FileEncryption.get_KeyIdentifier()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.KeyIdentifierSetGuid">
            <summary>Sets the shim of FileEncryption.set_KeyIdentifier(Guid value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.SetInitializationVectorForFileStringUInt64">
            <summary>Sets the shim of FileEncryption.SetInitializationVectorForFile(String fileName, UInt64 initializationVectorToSet)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.StaticConstructor">
            <summary>Sets the shim of FileEncryption.FileEncryption()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.CreateInitializationVectorForFileString">
            <summary>Sets the shim of FileEncryption.CreateInitializationVectorForFile(String fileName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.Dispose">
            <summary>Sets the shim of FileEncryption.Dispose()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.DisposeBoolean">
            <summary>Sets the shim of FileEncryption.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.EncryptContentKeyToCertificateX509Certificate2">
            <summary>Sets the shim of FileEncryption.EncryptContentKeyToCertificate(X509Certificate2 certToUse)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.GetChecksum">
            <summary>Sets the shim of FileEncryption.GetChecksum()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.GetContentKey">
            <summary>Sets the shim of FileEncryption.GetContentKey()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.GetInitializationVectorForFileString">
            <summary>Sets the shim of FileEncryption.GetInitializationVectorForFile(String fileName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.GetKeyIdentifierAsString">
            <summary>Sets the shim of FileEncryption.GetKeyIdentifierAsString()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.GetTransformString">
            <summary>Sets the shim of FileEncryption.GetTransform(String fileName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.GetTransformStringInt64">
            <summary>Sets the shim of FileEncryption.GetTransform(String fileName, Int64 fileOffset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.GetTransformUInt64">
            <summary>Sets the shim of FileEncryption.GetTransform(UInt64 initializationVector)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.GetTransformUInt64Int64">
            <summary>Sets the shim of FileEncryption.GetTransform(UInt64 initializationVector, Int64 fileOffset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.InternalInitByteArrayGuid">
            <summary>Sets the shim of FileEncryption.InternalInit(Byte[] contentKey, Guid keyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.IsInitializationVectorPresentString">
            <summary>Sets the shim of FileEncryption.IsInitializationVectorPresent(String fileName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.KeyIdentifierGet">
            <summary>Sets the shim of FileEncryption.get_KeyIdentifier()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.KeyIdentifierSetGuid">
            <summary>Sets the shim of FileEncryption.set_KeyIdentifier(Guid value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryption.AllInstances.SetInitializationVectorForFileStringUInt64">
            <summary>Sets the shim of FileEncryption.SetInitializationVectorForFile(String fileName, UInt64 initializationVectorToSet)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.FileEncryptionTransform</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.#ctor(Microsoft.WindowsAzure.MediaServices.Client.FileEncryptionTransform)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AesCtrByteArrayInt32Int32Int64">
            <summary>Sets the shim of FileEncryptionTransform.AesCtr(Byte[] data, Int32 offset, Int32 length, Int64 fileOffset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.CanReuseTransformGet">
            <summary>Sets the shim of FileEncryptionTransform.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of FileEncryptionTransform.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.ConstructorICryptoTransformUInt64Int64">
            <summary>Sets the shim of FileEncryptionTransform.FileEncryptionTransform(ICryptoTransform transform, UInt64 iv, Int64 fileOffset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.ConvertToBigEndianBytesUInt64ByteArrayInt32">
            <summary>Sets the shim of FileEncryptionTransform.ConvertToBigEndianBytes(UInt64 original, Byte[] outputBuffer, Int32 indexToWriteTo)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.Dispose">
            <summary>Sets the shim of FileEncryptionTransform.Dispose()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.DisposeBoolean">
            <summary>Sets the shim of FileEncryptionTransform.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.FileOffsetGet">
            <summary>Sets the shim of FileEncryptionTransform.get_FileOffset()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.FileOffsetSetInt64">
            <summary>Sets the shim of FileEncryptionTransform.set_FileOffset(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.InputBlockSizeGet">
            <summary>Sets the shim of FileEncryptionTransform.get_InputBlockSize()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.OutputBlockSizeGet">
            <summary>Sets the shim of FileEncryptionTransform.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.TransformBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of FileEncryptionTransform.TransformBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.TransformFinalBlockByteArrayInt32Int32">
            <summary>Sets the shim of FileEncryptionTransform.TransformFinalBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.AesCtrByteArrayInt32Int32Int64">
            <summary>Sets the shim of FileEncryptionTransform.AesCtr(Byte[] data, Int32 offset, Int32 length, Int64 fileOffset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.CanReuseTransformGet">
            <summary>Sets the shim of FileEncryptionTransform.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of FileEncryptionTransform.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.Dispose">
            <summary>Sets the shim of FileEncryptionTransform.Dispose()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.DisposeBoolean">
            <summary>Sets the shim of FileEncryptionTransform.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.FileOffsetGet">
            <summary>Sets the shim of FileEncryptionTransform.get_FileOffset()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.FileOffsetSetInt64">
            <summary>Sets the shim of FileEncryptionTransform.set_FileOffset(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.InputBlockSizeGet">
            <summary>Sets the shim of FileEncryptionTransform.get_InputBlockSize()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.OutputBlockSizeGet">
            <summary>Sets the shim of FileEncryptionTransform.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.TransformBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of FileEncryptionTransform.TransformBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimFileEncryptionTransform.AllInstances.TransformFinalBlockByteArrayInt32Int32">
            <summary>Sets the shim of FileEncryptionTransform.TransformFinalBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.IngestIngestManifestStatistics</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.#ctor(Microsoft.WindowsAzure.MediaServices.Client.IngestIngestManifestStatistics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.Bind(Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestStatistics)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.Constructor">
            <summary>Sets the shim of IngestIngestManifestStatistics.IngestIngestManifestStatistics()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.ErrorFilesCountGet">
            <summary>Sets the shim of IngestIngestManifestStatistics.get_ErrorFilesCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.ErrorFilesCountSetInt32">
            <summary>Sets the shim of IngestIngestManifestStatistics.set_ErrorFilesCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.ErrorFilesDetailsGet">
            <summary>Sets the shim of IngestIngestManifestStatistics.get_ErrorFilesDetails()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.ErrorFilesDetailsSetString">
            <summary>Sets the shim of IngestIngestManifestStatistics.set_ErrorFilesDetails(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.FinishedFilesCountGet">
            <summary>Sets the shim of IngestIngestManifestStatistics.get_FinishedFilesCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.FinishedFilesCountSetInt32">
            <summary>Sets the shim of IngestIngestManifestStatistics.set_FinishedFilesCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.PendingFilesCountGet">
            <summary>Sets the shim of IngestIngestManifestStatistics.get_PendingFilesCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.PendingFilesCountSetInt32">
            <summary>Sets the shim of IngestIngestManifestStatistics.set_PendingFilesCount(Int32 value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.AllInstances.ErrorFilesCountGet">
            <summary>Sets the shim of IngestIngestManifestStatistics.get_ErrorFilesCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.AllInstances.ErrorFilesCountSetInt32">
            <summary>Sets the shim of IngestIngestManifestStatistics.set_ErrorFilesCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.AllInstances.ErrorFilesDetailsGet">
            <summary>Sets the shim of IngestIngestManifestStatistics.get_ErrorFilesDetails()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.AllInstances.ErrorFilesDetailsSetString">
            <summary>Sets the shim of IngestIngestManifestStatistics.set_ErrorFilesDetails(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.AllInstances.FinishedFilesCountGet">
            <summary>Sets the shim of IngestIngestManifestStatistics.get_FinishedFilesCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.AllInstances.FinishedFilesCountSetInt32">
            <summary>Sets the shim of IngestIngestManifestStatistics.set_FinishedFilesCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.AllInstances.PendingFilesCountGet">
            <summary>Sets the shim of IngestIngestManifestStatistics.get_PendingFilesCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestIngestManifestStatistics.AllInstances.PendingFilesCountSetInt32">
            <summary>Sets the shim of IngestIngestManifestStatistics.set_PendingFilesCount(Int32 value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.IngestManifestAssetCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.IngestManifestAssetCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestAsset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestAsset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.ConstructorCloudMediaContextIIngestManifest">
            <summary>Sets the shim of IngestManifestAssetCollection.IngestManifestAssetCollection(CloudMediaContext cloudMediaContext, IIngestManifest parentIngestManifest)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.CreateAsyncIAssetCancellationToken">
            <summary>Sets the shim of IngestManifestAssetCollection.CreateAsync(IAsset asset, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.CreateAsyncIAssetStringArrayCancellationToken">
            <summary>Sets the shim of IngestManifestAssetCollection.CreateAsync(IAsset asset, String[] files, CancellationToken token)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.CreateAsyncIIngestManifestIAssetStringArrayCancellationToken">
            <summary>Sets the shim of IngestManifestAssetCollection.CreateAsync(IIngestManifest ingestManifest, IAsset asset, String[] files, CancellationToken token)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.CreateIAssetStringArray">
            <summary>Sets the shim of IngestManifestAssetCollection.Create(IAsset asset, String[] files)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.QueryableGet">
            <summary>Sets the shim of IngestManifestAssetCollection.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.QueryableSetIQueryableOfIIngestManifestAsset">
            <summary>Sets the shim of IngestManifestAssetCollection.set_Queryable(IQueryable`1&lt;IIngestManifestAsset&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.VerifyManifestAssetIIngestManifestAsset">
            <summary>Sets the shim of IngestManifestAssetCollection.VerifyManifestAsset(IIngestManifestAsset ingestManifestAsset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection._ctorb__0">
            <summary>Sets the shim of IngestManifestAssetCollection.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.AllInstances.CreateAsyncIAssetCancellationToken">
            <summary>Sets the shim of IngestManifestAssetCollection.CreateAsync(IAsset asset, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.AllInstances.CreateAsyncIAssetStringArrayCancellationToken">
            <summary>Sets the shim of IngestManifestAssetCollection.CreateAsync(IAsset asset, String[] files, CancellationToken token)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.AllInstances.CreateAsyncIIngestManifestIAssetStringArrayCancellationToken">
            <summary>Sets the shim of IngestManifestAssetCollection.CreateAsync(IIngestManifest ingestManifest, IAsset asset, String[] files, CancellationToken token)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.AllInstances.CreateIAssetStringArray">
            <summary>Sets the shim of IngestManifestAssetCollection.Create(IAsset asset, String[] files)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.AllInstances.QueryableGet">
            <summary>Sets the shim of IngestManifestAssetCollection.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.AllInstances.QueryableSetIQueryableOfIIngestManifestAsset">
            <summary>Sets the shim of IngestManifestAssetCollection.set_Queryable(IQueryable`1&lt;IIngestManifestAsset&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestAssetCollection.AllInstances._ctorb__0">
            <summary>Sets the shim of IngestManifestAssetCollection.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.IngestManifestCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.IngestManifestCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.ConstructorCloudMediaContext">
            <summary>Sets the shim of IngestManifestCollection.IngestManifestCollection(CloudMediaContext cloudMediaContext)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.CreateAsyncString">
            <summary>Sets the shim of IngestManifestCollection.CreateAsync(String name)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.CreateString">
            <summary>Sets the shim of IngestManifestCollection.Create(String name)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.VerifyManifestIIngestManifest">
            <summary>Sets the shim of IngestManifestCollection.VerifyManifest(IIngestManifest ingestManifest)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection._CreateAsyncb__1TaskOfDataServiceResponse">
            <summary>Sets the shim of IngestManifestCollection.&lt;CreateAsync&gt;b__1(Task`1&lt;DataServiceResponse&gt; t)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.AllInstances.CreateAsyncString">
            <summary>Sets the shim of IngestManifestCollection.CreateAsync(String name)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestCollection.AllInstances.CreateString">
            <summary>Sets the shim of IngestManifestCollection.Create(String name)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.IngestManifestFileCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.IngestManifestFileCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestFile})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestFile})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.ConstructorCloudMediaContextIIngestManifestAsset">
            <summary>Sets the shim of IngestManifestFileCollection.IngestManifestFileCollection(CloudMediaContext cloudMediaContext, IIngestManifestAsset parentIngestManifestAsset)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.CreateAsyncIIngestManifestAssetStringCancellationToken">
            <summary>Sets the shim of IngestManifestFileCollection.CreateAsync(IIngestManifestAsset ingestManifestAsset, String filePath, CancellationToken token)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.CreateAsyncStringCancellationToken">
            <summary>Sets the shim of IngestManifestFileCollection.CreateAsync(String filePath, CancellationToken token)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.CreateString">
            <summary>Sets the shim of IngestManifestFileCollection.Create(String filePath)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.QueryableGet">
            <summary>Sets the shim of IngestManifestFileCollection.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.QueryableSetIQueryableOfIIngestManifestFile">
            <summary>Sets the shim of IngestManifestFileCollection.set_Queryable(IQueryable`1&lt;IIngestManifestFile&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection._SetEncryptionSettingsb__7IContentKey">
            <summary>Sets the shim of IngestManifestFileCollection.&lt;SetEncryptionSettings&gt;b__7(IContentKey c)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection._ctorb__0">
            <summary>Sets the shim of IngestManifestFileCollection.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.AllInstances.CreateAsyncIIngestManifestAssetStringCancellationToken">
            <summary>Sets the shim of IngestManifestFileCollection.CreateAsync(IIngestManifestAsset ingestManifestAsset, String filePath, CancellationToken token)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.AllInstances.CreateAsyncStringCancellationToken">
            <summary>Sets the shim of IngestManifestFileCollection.CreateAsync(String filePath, CancellationToken token)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.AllInstances.CreateString">
            <summary>Sets the shim of IngestManifestFileCollection.Create(String filePath)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.AllInstances.QueryableGet">
            <summary>Sets the shim of IngestManifestFileCollection.get_Queryable()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.AllInstances.QueryableSetIQueryableOfIIngestManifestFile">
            <summary>Sets the shim of IngestManifestFileCollection.set_Queryable(IQueryable`1&lt;IIngestManifestFile&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimIngestManifestFileCollection.AllInstances._ctorb__0">
            <summary>Sets the shim of IngestManifestFileCollection.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.#ctor(Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AddRangeIEnumerableOfT0">
            <summary>Sets the shim of InputAssetCollection`1.AddRange(IEnumerable`1&lt;!0&gt; assets)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AddT0">
            <summary>Sets the shim of InputAssetCollection`1.Add(!0 item)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.CheckIfTaskIsPersistedAndThrowNotSupported">
            <summary>Sets the shim of InputAssetCollection`1.CheckIfTaskIsPersistedAndThrowNotSupported()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.Clear">
            <summary>Sets the shim of InputAssetCollection`1.Clear()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.Constructor">
            <summary>Sets the shim of InputAssetCollection`1.InputAssetCollection`1()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.ConstructorITaskIEnumerableOfT0">
            <summary>Sets the shim of InputAssetCollection`1.InputAssetCollection`1(ITask task, IEnumerable`1&lt;!0&gt; assets)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.ContainsT0">
            <summary>Sets the shim of InputAssetCollection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of InputAssetCollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.CountGet">
            <summary>Sets the shim of InputAssetCollection`1.get_Count()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.GetEnumerator">
            <summary>Sets the shim of InputAssetCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.IsReadOnlyGet">
            <summary>Sets the shim of InputAssetCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.ItemGetInt32">
            <summary>Sets the shim of InputAssetCollection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.RemoveT0">
            <summary>Sets the shim of InputAssetCollection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of InputAssetCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.AddRangeIEnumerableOfT0">
            <summary>Sets the shim of InputAssetCollection`1.AddRange(IEnumerable`1&lt;!0&gt; assets)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.AddT0">
            <summary>Sets the shim of InputAssetCollection`1.Add(!0 item)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.CheckIfTaskIsPersistedAndThrowNotSupported">
            <summary>Sets the shim of InputAssetCollection`1.CheckIfTaskIsPersistedAndThrowNotSupported()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.Clear">
            <summary>Sets the shim of InputAssetCollection`1.Clear()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.ContainsT0">
            <summary>Sets the shim of InputAssetCollection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of InputAssetCollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.CountGet">
            <summary>Sets the shim of InputAssetCollection`1.get_Count()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of InputAssetCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of InputAssetCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of InputAssetCollection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.RemoveT0">
            <summary>Sets the shim of InputAssetCollection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimInputAssetCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of InputAssetCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.JobBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.JobBaseCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IJob})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IJob})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.ConstructorCloudMediaContext">
            <summary>Sets the shim of JobBaseCollection.JobBaseCollection(CloudMediaContext cloudMediaContext)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.CreateString">
            <summary>Sets the shim of JobBaseCollection.Create(String name)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.CreateStringIJobTemplateIEnumerableOfIAsset">
            <summary>Sets the shim of JobBaseCollection.Create(String name, IJobTemplate jobTemplate, IEnumerable`1&lt;IAsset&gt; inputMediaAssets)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.CreateStringIJobTemplateIEnumerableOfIAssetInt32">
            <summary>Sets the shim of JobBaseCollection.Create(String name, IJobTemplate jobTemplate, IEnumerable`1&lt;IAsset&gt; inputMediaAssets, Int32 priority)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.CreateStringInt32">
            <summary>Sets the shim of JobBaseCollection.Create(String name, Int32 priority)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.AllInstances.CreateString">
            <summary>Sets the shim of JobBaseCollection.Create(String name)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.AllInstances.CreateStringIJobTemplateIEnumerableOfIAsset">
            <summary>Sets the shim of JobBaseCollection.Create(String name, IJobTemplate jobTemplate, IEnumerable`1&lt;IAsset&gt; inputMediaAssets)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.AllInstances.CreateStringIJobTemplateIEnumerableOfIAssetInt32">
            <summary>Sets the shim of JobBaseCollection.Create(String name, IJobTemplate jobTemplate, IEnumerable`1&lt;IAsset&gt; inputMediaAssets, Int32 priority)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobBaseCollection.AllInstances.CreateStringInt32">
            <summary>Sets the shim of JobBaseCollection.Create(String name, Int32 priority)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.JobStateChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.#ctor(Microsoft.WindowsAzure.MediaServices.Client.JobStateChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.ConstructorJobStateJobState">
            <summary>Sets the shim of JobStateChangedEventArgs.JobStateChangedEventArgs(JobState previousState, JobState currentState)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.CurrentStateGet">
            <summary>Sets the shim of JobStateChangedEventArgs.get_CurrentState()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.CurrentStateSetJobState">
            <summary>Sets the shim of JobStateChangedEventArgs.set_CurrentState(JobState value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.PreviousStateGet">
            <summary>Sets the shim of JobStateChangedEventArgs.get_PreviousState()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.PreviousStateSetJobState">
            <summary>Sets the shim of JobStateChangedEventArgs.set_PreviousState(JobState value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.AllInstances.CurrentStateGet">
            <summary>Sets the shim of JobStateChangedEventArgs.get_CurrentState()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.AllInstances.CurrentStateSetJobState">
            <summary>Sets the shim of JobStateChangedEventArgs.set_CurrentState(JobState value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.AllInstances.PreviousStateGet">
            <summary>Sets the shim of JobStateChangedEventArgs.get_PreviousState()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobStateChangedEventArgs.AllInstances.PreviousStateSetJobState">
            <summary>Sets the shim of JobStateChangedEventArgs.set_PreviousState(JobState value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.JobTemplateBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.JobTemplateBaseCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IJobTemplate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IJobTemplate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.ConstructorCloudMediaContext">
            <summary>Sets the shim of JobTemplateBaseCollection.JobTemplateBaseCollection(CloudMediaContext cloudMediaContext)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimJobTemplateBaseCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.ILocator})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ILocator})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.ConstructorCloudMediaContext">
            <summary>Sets the shim of LocatorBaseCollection.LocatorBaseCollection(CloudMediaContext cloudMediaContext)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.CreateLocatorAsyncLocatorTypeIAssetIAccessPolicy">
            <summary>Sets the shim of LocatorBaseCollection.CreateLocatorAsync(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.CreateLocatorAsyncLocatorTypeIAssetIAccessPolicyNullableOfDateTime">
            <summary>Sets the shim of LocatorBaseCollection.CreateLocatorAsync(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy, Nullable`1&lt;DateTime&gt; startTime)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.CreateLocatorLocatorTypeIAssetIAccessPolicy">
            <summary>Sets the shim of LocatorBaseCollection.CreateLocator(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.CreateLocatorLocatorTypeIAssetIAccessPolicyNullableOfDateTime">
            <summary>Sets the shim of LocatorBaseCollection.CreateLocator(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy, Nullable`1&lt;DateTime&gt; startTime)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.CreateSasLocatorAsyncIAssetIAccessPolicy">
            <summary>Sets the shim of LocatorBaseCollection.CreateSasLocatorAsync(IAsset asset, IAccessPolicy accessPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.CreateSasLocatorAsyncIAssetIAccessPolicyNullableOfDateTime">
            <summary>Sets the shim of LocatorBaseCollection.CreateSasLocatorAsync(IAsset asset, IAccessPolicy accessPolicy, Nullable`1&lt;DateTime&gt; startTime)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.CreateSasLocatorIAssetIAccessPolicy">
            <summary>Sets the shim of LocatorBaseCollection.CreateSasLocator(IAsset asset, IAccessPolicy accessPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.CreateSasLocatorIAssetIAccessPolicyNullableOfDateTime">
            <summary>Sets the shim of LocatorBaseCollection.CreateSasLocator(IAsset asset, IAccessPolicy accessPolicy, Nullable`1&lt;DateTime&gt; startTime)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.VerifyLocatorILocator">
            <summary>Sets the shim of LocatorBaseCollection.VerifyLocator(ILocator locator)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.AllInstances.CreateLocatorAsyncLocatorTypeIAssetIAccessPolicy">
            <summary>Sets the shim of LocatorBaseCollection.CreateLocatorAsync(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.AllInstances.CreateLocatorAsyncLocatorTypeIAssetIAccessPolicyNullableOfDateTime">
            <summary>Sets the shim of LocatorBaseCollection.CreateLocatorAsync(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy, Nullable`1&lt;DateTime&gt; startTime)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.AllInstances.CreateLocatorLocatorTypeIAssetIAccessPolicy">
            <summary>Sets the shim of LocatorBaseCollection.CreateLocator(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.AllInstances.CreateLocatorLocatorTypeIAssetIAccessPolicyNullableOfDateTime">
            <summary>Sets the shim of LocatorBaseCollection.CreateLocator(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy, Nullable`1&lt;DateTime&gt; startTime)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.AllInstances.CreateSasLocatorAsyncIAssetIAccessPolicy">
            <summary>Sets the shim of LocatorBaseCollection.CreateSasLocatorAsync(IAsset asset, IAccessPolicy accessPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.AllInstances.CreateSasLocatorAsyncIAssetIAccessPolicyNullableOfDateTime">
            <summary>Sets the shim of LocatorBaseCollection.CreateSasLocatorAsync(IAsset asset, IAccessPolicy accessPolicy, Nullable`1&lt;DateTime&gt; startTime)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.AllInstances.CreateSasLocatorIAssetIAccessPolicy">
            <summary>Sets the shim of LocatorBaseCollection.CreateSasLocator(IAsset asset, IAccessPolicy accessPolicy)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimLocatorBaseCollection.AllInstances.CreateSasLocatorIAssetIAccessPolicyNullableOfDateTime">
            <summary>Sets the shim of LocatorBaseCollection.CreateSasLocator(IAsset asset, IAccessPolicy accessPolicy, Nullable`1&lt;DateTime&gt; startTime)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaContextBase">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaContextBase.#ctor(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaContextBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaContextBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaContextBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaContextBase.Constructor">
            <summary>Sets the shim of MediaContextBase.MediaContextBase()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaContextBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorBaseCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.Bind(System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.ConstructorCloudMediaContext">
            <summary>Sets the shim of MediaProcessorBaseCollection.MediaProcessorBaseCollection(CloudMediaContext cloudMediaContext)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimMediaProcessorBaseCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.IAsset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AddNewString">
            <summary>Sets the shim of OutputAssetCollection.AddNew(String assetName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AddNewStringAssetCreationOptions">
            <summary>Sets the shim of OutputAssetCollection.AddNew(String assetName, AssetCreationOptions options)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.CheckIfTaskIsPersistedAndThrowNotSupported">
            <summary>Sets the shim of OutputAssetCollection.CheckIfTaskIsPersistedAndThrowNotSupported()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.Constructor">
            <summary>Sets the shim of OutputAssetCollection.OutputAssetCollection()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.ConstructorITaskIEnumerableOfIAsset">
            <summary>Sets the shim of OutputAssetCollection.OutputAssetCollection(ITask task, IEnumerable`1&lt;IAsset&gt; assets)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.CountGet">
            <summary>Sets the shim of OutputAssetCollection.get_Count()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.GetEnumerator">
            <summary>Sets the shim of OutputAssetCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.IsReadOnlyGet">
            <summary>Sets the shim of OutputAssetCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.ItemGetInt32">
            <summary>Sets the shim of OutputAssetCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of OutputAssetCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AllInstances.AddNewString">
            <summary>Sets the shim of OutputAssetCollection.AddNew(String assetName)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AllInstances.AddNewStringAssetCreationOptions">
            <summary>Sets the shim of OutputAssetCollection.AddNew(String assetName, AssetCreationOptions options)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AllInstances.CheckIfTaskIsPersistedAndThrowNotSupported">
            <summary>Sets the shim of OutputAssetCollection.CheckIfTaskIsPersistedAndThrowNotSupported()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AllInstances.CountGet">
            <summary>Sets the shim of OutputAssetCollection.get_Count()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of OutputAssetCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of OutputAssetCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of OutputAssetCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimOutputAssetCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of OutputAssetCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.TaskCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.#ctor(Microsoft.WindowsAzure.MediaServices.Client.TaskCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.Bind(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ITask})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AddNewStringIMediaProcessorStringTaskOptions">
            <summary>Sets the shim of TaskCollection.AddNew(String taskName, IMediaProcessor mediaProcessor, String configuration, TaskOptions options)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AddNewStringIMediaProcessorStringTaskOptionsITask">
            <summary>Sets the shim of TaskCollection.AddNew(String taskName, IMediaProcessor mediaProcessor, String configuration, TaskOptions options, ITask parentTask)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.CheckIfJobIsPersistedAndThrowNotSupported">
            <summary>Sets the shim of TaskCollection.CheckIfJobIsPersistedAndThrowNotSupported()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.Constructor">
            <summary>Sets the shim of TaskCollection.TaskCollection()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.ConstructorIJobIEnumerableOfITaskCloudMediaContext">
            <summary>Sets the shim of TaskCollection.TaskCollection(IJob job, IEnumerable`1&lt;ITask&gt; tasks, CloudMediaContext cloudMediaContext)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.CountGet">
            <summary>Sets the shim of TaskCollection.get_Count()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.GetEnumerator">
            <summary>Sets the shim of TaskCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.IsReadOnlyGet">
            <summary>Sets the shim of TaskCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.ItemGetInt32">
            <summary>Sets the shim of TaskCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of TaskCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AllInstances.AddNewStringIMediaProcessorStringTaskOptions">
            <summary>Sets the shim of TaskCollection.AddNew(String taskName, IMediaProcessor mediaProcessor, String configuration, TaskOptions options)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AllInstances.AddNewStringIMediaProcessorStringTaskOptionsITask">
            <summary>Sets the shim of TaskCollection.AddNew(String taskName, IMediaProcessor mediaProcessor, String configuration, TaskOptions options, ITask parentTask)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AllInstances.CheckIfJobIsPersistedAndThrowNotSupported">
            <summary>Sets the shim of TaskCollection.CheckIfJobIsPersistedAndThrowNotSupported()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AllInstances.CountGet">
            <summary>Sets the shim of TaskCollection.get_Count()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of TaskCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of TaskCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of TaskCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of TaskCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.#ctor(Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.CodeGet">
            <summary>Sets the shim of TaskHistoricalEvent.get_Code()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.CodeSetString">
            <summary>Sets the shim of TaskHistoricalEvent.set_Code(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.Constructor">
            <summary>Sets the shim of TaskHistoricalEvent.TaskHistoricalEvent()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.MessageGet">
            <summary>Sets the shim of TaskHistoricalEvent.get_Message()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.MessageSetString">
            <summary>Sets the shim of TaskHistoricalEvent.set_Message(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.TimeStampGet">
            <summary>Sets the shim of TaskHistoricalEvent.get_TimeStamp()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.TimeStampSetDateTime">
            <summary>Sets the shim of TaskHistoricalEvent.set_TimeStamp(DateTime value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.AllInstances.CodeGet">
            <summary>Sets the shim of TaskHistoricalEvent.get_Code()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.AllInstances.CodeSetString">
            <summary>Sets the shim of TaskHistoricalEvent.set_Code(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.AllInstances.MessageGet">
            <summary>Sets the shim of TaskHistoricalEvent.get_Message()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.AllInstances.MessageSetString">
            <summary>Sets the shim of TaskHistoricalEvent.set_Message(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.AllInstances.TimeStampGet">
            <summary>Sets the shim of TaskHistoricalEvent.get_TimeStamp()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimTaskHistoricalEvent.AllInstances.TimeStampSetDateTime">
            <summary>Sets the shim of TaskHistoricalEvent.set_TimeStamp(DateTime value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs">
            <summary>Shim type of Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.#ctor(Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.BytesUploadedGet">
            <summary>Sets the shim of UploadProgressChangedEventArgs.get_BytesUploaded()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.BytesUploadedSetInt64">
            <summary>Sets the shim of UploadProgressChangedEventArgs.set_BytesUploaded(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.ConstructorInt64Int64">
            <summary>Sets the shim of UploadProgressChangedEventArgs.UploadProgressChangedEventArgs(Int64 bytesUploaded, Int64 totalBytes)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.ProgressGet">
            <summary>Sets the shim of UploadProgressChangedEventArgs.get_Progress()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.TotalBytesGet">
            <summary>Sets the shim of UploadProgressChangedEventArgs.get_TotalBytes()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.TotalBytesSetInt64">
            <summary>Sets the shim of UploadProgressChangedEventArgs.set_TotalBytes(Int64 value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.AllInstances.BytesUploadedGet">
            <summary>Sets the shim of UploadProgressChangedEventArgs.get_BytesUploaded()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.AllInstances.BytesUploadedSetInt64">
            <summary>Sets the shim of UploadProgressChangedEventArgs.set_BytesUploaded(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.AllInstances.ProgressGet">
            <summary>Sets the shim of UploadProgressChangedEventArgs.get_Progress()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.AllInstances.TotalBytesGet">
            <summary>Sets the shim of UploadProgressChangedEventArgs.get_TotalBytes()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.ShimUploadProgressChangedEventArgs.AllInstances.TotalBytesSetInt64">
            <summary>Sets the shim of UploadProgressChangedEventArgs.set_TotalBytes(Int64 value)</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.AssetBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.AttachBackingFieldToQueryable">
            <summary>Attaches delegates to emulate StubAssetBaseCollection.Queryable as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.Create(System.String,Microsoft.WindowsAzure.MediaServices.Client.AssetCreationOptions)">
            <summary>Sets the stub of AssetBaseCollection.Create(String assetName, AssetCreationOptions options)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.CreateAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.AssetCreationOptions,System.Threading.CancellationToken)">
            <summary>Sets the stub of AssetBaseCollection.CreateAsync(String assetName, AssetCreationOptions options, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.CreateAsyncStringAssetCreationOptionsCancellationToken">
            <summary>Sets the stub of AssetBaseCollection.CreateAsync(String assetName, AssetCreationOptions options, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.CreateStringAssetCreationOptions">
            <summary>Sets the stub of AssetBaseCollection.Create(String assetName, AssetCreationOptions options)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.InitializeStub">
            <summary>Initializes a new instance of type StubAssetBaseCollection</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.QueryableGet">
            <summary>Sets the stub of BaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.QueryableSetIQueryableOfIAsset">
            <summary>Sets the stub of BaseCollection`1.set_Queryable(IQueryable`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetBaseCollection.Queryable">
            <summary>Sets the stub of BaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.AssetFileBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.AttachBackingFieldToQueryable">
            <summary>Attaches delegates to emulate StubAssetFileBaseCollection.Queryable as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.Create(System.String)">
            <summary>Sets the stub of AssetFileBaseCollection.Create(String name)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.CreateAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of AssetFileBaseCollection.CreateAsync(String name, CancellationToken cancellation)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.CreateAsyncStringCancellationToken">
            <summary>Sets the stub of AssetFileBaseCollection.CreateAsync(String name, CancellationToken cancellation)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.CreateString">
            <summary>Sets the stub of AssetFileBaseCollection.Create(String name)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.InitializeStub">
            <summary>Initializes a new instance of type StubAssetFileBaseCollection</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.QueryableGet">
            <summary>Sets the stub of BaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.QueryableSetIQueryableOfIAssetFile">
            <summary>Sets the stub of BaseCollection`1.set_Queryable(IQueryable`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubAssetFileBaseCollection.Queryable">
            <summary>Sets the stub of BaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1.AttachBackingFieldToQueryable">
            <summary>Attaches delegates to emulate StubBaseCollection.Queryable as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1.InitializeStub">
            <summary>Initializes a new instance of type StubBaseCollection</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1.QueryableGet">
            <summary>Sets the stub of BaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1.QueryableSetIQueryableOfT0">
            <summary>Sets the stub of BaseCollection`1.set_Queryable(IQueryable`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBaseCollection`1.Queryable">
            <summary>Sets the stub of BaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferClient">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferClient.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferClient.InitializeStub">
            <summary>Initializes a new instance of type StubBlobTransferClient</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferClient.OnTaskProgressChanged(Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs)">
            <summary>Sets the stub of BlobTransferClient.OnTaskProgressChanged(BlobTransferProgressChangedEventArgs e)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferClient.OnTaskProgressChangedBlobTransferProgressChangedEventArgs">
            <summary>Sets the stub of BlobTransferClient.OnTaskProgressChanged(BlobTransferProgressChangedEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferCompleteEventArgs">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferCompleteEventArgs.#ctor(System.Exception,System.Boolean,System.Object,System.String,System.Uri,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferCompleteEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubBlobTransferCompleteEventArgs</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferCompleteEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferCompleteEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferCompleteEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferProgressChangedEventArgs">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferProgressChangedEventArgs.#ctor(System.Int64,System.Int64,System.Int64,System.Int32,System.Double,System.Uri,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferProgressChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubBlobTransferProgressChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferProgressChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferProgressChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubBlobTransferProgressChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.CloudMediaContext</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.#ctor(System.Uri,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.#ctor(System.Uri,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.AccessPoliciesGet">
            <summary>Sets the stub of CloudMediaContext.get_AccessPolicies()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.AssetsGet">
            <summary>Sets the stub of CloudMediaContext.get_Assets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.ContentKeysGet">
            <summary>Sets the stub of CloudMediaContext.get_ContentKeys()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.FilesGet">
            <summary>Sets the stub of CloudMediaContext.get_Files()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.InitializeStub">
            <summary>Initializes a new instance of type StubCloudMediaContext</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.JobTemplatesGet">
            <summary>Sets the stub of CloudMediaContext.get_JobTemplates()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.JobsGet">
            <summary>Sets the stub of CloudMediaContext.get_Jobs()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.MediaProcessorsGet">
            <summary>Sets the stub of CloudMediaContext.get_MediaProcessors()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.AccessPolicies">
            <summary>Sets the stub of CloudMediaContext.get_AccessPolicies()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.Assets">
            <summary>Sets the stub of CloudMediaContext.get_Assets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.ContentKeys">
            <summary>Sets the stub of CloudMediaContext.get_ContentKeys()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.Files">
            <summary>Sets the stub of CloudMediaContext.get_Files()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.JobTemplates">
            <summary>Sets the stub of CloudMediaContext.get_JobTemplates()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.Jobs">
            <summary>Sets the stub of CloudMediaContext.get_Jobs()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubCloudMediaContext.MediaProcessors">
            <summary>Sets the stub of CloudMediaContext.get_MediaProcessors()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubConfigurationEncryption">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.ConfigurationEncryption</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubConfigurationEncryption.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubConfigurationEncryption.#ctor(System.Guid,System.Byte[],System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubConfigurationEncryption.Dispose(System.Boolean)">
            <summary>Sets the stub of ConfigurationEncryption.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubConfigurationEncryption.DisposeBoolean">
            <summary>Sets the stub of ConfigurationEncryption.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubConfigurationEncryption.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationEncryption</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubConfigurationEncryption.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubConfigurationEncryption.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubConfigurationEncryption.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.ContentKeyBaseCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.AttachBackingFieldToQueryable">
            <summary>Attaches delegates to emulate StubContentKeyBaseCollection.Queryable as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.Create(System.Guid,System.Byte[],System.String)">
            <summary>Sets the stub of ContentKeyBaseCollection.Create(Guid keyId, Byte[] contentKey, String name)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.CreateAsync(System.Guid,System.Byte[],System.String)">
            <summary>Sets the stub of ContentKeyBaseCollection.CreateAsync(Guid keyId, Byte[] contentKey, String name)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.CreateAsyncGuidByteArrayString">
            <summary>Sets the stub of ContentKeyBaseCollection.CreateAsync(Guid keyId, Byte[] contentKey, String name)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.CreateGuidByteArrayString">
            <summary>Sets the stub of ContentKeyBaseCollection.Create(Guid keyId, Byte[] contentKey, String name)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.InitializeStub">
            <summary>Initializes a new instance of type StubContentKeyBaseCollection</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.QueryableGet">
            <summary>Sets the stub of BaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.QueryableSetIQueryableOfIContentKey">
            <summary>Sets the stub of BaseCollection`1.set_Queryable(IQueryable`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubContentKeyBaseCollection.Queryable">
            <summary>Sets the stub of BaseCollection`1.get_Queryable()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubDownloadProgressChangedEventArgs">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubDownloadProgressChangedEventArgs.#ctor(System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubDownloadProgressChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubDownloadProgressChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubDownloadProgressChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubDownloadProgressChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubDownloadProgressChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubErrorDetail">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubErrorDetail.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubErrorDetail.InitializeStub">
            <summary>Initializes a new instance of type StubErrorDetail</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubErrorDetail.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubErrorDetail.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubErrorDetail.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubFileEncryption">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.FileEncryption</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubFileEncryption.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubFileEncryption.#ctor(System.Byte[],System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubFileEncryption.Dispose(System.Boolean)">
            <summary>Sets the stub of FileEncryption.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubFileEncryption.DisposeBoolean">
            <summary>Sets the stub of FileEncryption.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubFileEncryption.InitializeStub">
            <summary>Initializes a new instance of type StubFileEncryption</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubFileEncryption.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubFileEncryption.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubFileEncryption.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.#ctor">
            <summary>Initializes a new instance of type StubIAccessPolicy</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.CreatedGet">
            <summary>Sets the stub of IAccessPolicy.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.Delete">
            <summary>Sets the stub of IAccessPolicy.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.DeleteAsync">
            <summary>Sets the stub of IAccessPolicy.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.DurationGet">
            <summary>Sets the stub of IAccessPolicy.get_Duration()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.IdGet">
            <summary>Sets the stub of IAccessPolicy.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.LastModifiedGet">
            <summary>Sets the stub of IAccessPolicy.get_LastModified()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAccessPolicy#Delete">
            <summary>Sets the stub of IAccessPolicy.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAccessPolicy#DeleteAsync">
            <summary>Sets the stub of IAccessPolicy.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.NameGet">
            <summary>Sets the stub of IAccessPolicy.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.PermissionsGet">
            <summary>Sets the stub of IAccessPolicy.get_Permissions()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAccessPolicy#Created">
            <summary>Sets the stub of IAccessPolicy.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAccessPolicy#Duration">
            <summary>Sets the stub of IAccessPolicy.get_Duration()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAccessPolicy#Id">
            <summary>Sets the stub of IAccessPolicy.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAccessPolicy#LastModified">
            <summary>Sets the stub of IAccessPolicy.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAccessPolicy#Name">
            <summary>Sets the stub of IAccessPolicy.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAccessPolicy.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAccessPolicy#Permissions">
            <summary>Sets the stub of IAccessPolicy.get_Permissions()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IAsset</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.#ctor">
            <summary>Initializes a new instance of type StubIAsset</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.AlternateIdGet">
            <summary>Sets the stub of IAsset.get_AlternateId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.AlternateIdSetString">
            <summary>Sets the stub of IAsset.set_AlternateId(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.AssetFilesGet">
            <summary>Sets the stub of IAsset.get_AssetFiles()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.AttachBackingFieldToAlternateId">
            <summary>Attaches delegates to emulate StubIAsset.AlternateId as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIAsset.Name as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.ContentKeysGet">
            <summary>Sets the stub of IAsset.get_ContentKeys()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.CreatedGet">
            <summary>Sets the stub of IAsset.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.Delete">
            <summary>Sets the stub of IAsset.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.DeleteAsync">
            <summary>Sets the stub of IAsset.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.IdGet">
            <summary>Sets the stub of IAsset.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.LastModifiedGet">
            <summary>Sets the stub of IAsset.get_LastModified()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.LocatorsGet">
            <summary>Sets the stub of IAsset.get_Locators()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#Delete">
            <summary>Sets the stub of IAsset.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#DeleteAsync">
            <summary>Sets the stub of IAsset.DeleteAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#Update">
            <summary>Sets the stub of IAsset.Update()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#UpdateAsync">
            <summary>Sets the stub of IAsset.UpdateAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.NameGet">
            <summary>Sets the stub of IAsset.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.NameSetString">
            <summary>Sets the stub of IAsset.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.OptionsGet">
            <summary>Sets the stub of IAsset.get_Options()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.ParentAssetsGet">
            <summary>Sets the stub of IAsset.get_ParentAssets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.StateGet">
            <summary>Sets the stub of IAsset.get_State()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.Update">
            <summary>Sets the stub of IAsset.Update()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.UpdateAsync">
            <summary>Sets the stub of IAsset.UpdateAsync()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#AlternateId">
            <summary>Sets the stub of IAsset.get_AlternateId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#AssetFiles">
            <summary>Sets the stub of IAsset.get_AssetFiles()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#ContentKeys">
            <summary>Sets the stub of IAsset.get_ContentKeys()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#Created">
            <summary>Sets the stub of IAsset.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#Id">
            <summary>Sets the stub of IAsset.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#LastModified">
            <summary>Sets the stub of IAsset.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#Locators">
            <summary>Sets the stub of IAsset.get_Locators()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#Name">
            <summary>Sets the stub of IAsset.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#Options">
            <summary>Sets the stub of IAsset.get_Options()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#ParentAssets">
            <summary>Sets the stub of IAsset.get_ParentAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAsset#State">
            <summary>Sets the stub of IAsset.get_State()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IAssetFile</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.#ctor">
            <summary>Initializes a new instance of type StubIAssetFile</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.AssetGet">
            <summary>Sets the stub of IAssetFile.get_Asset()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.AttachBackingFieldToContentFileSize">
            <summary>Attaches delegates to emulate StubIAssetFile.ContentFileSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.AttachBackingFieldToIsPrimary">
            <summary>Attaches delegates to emulate StubIAssetFile.IsPrimary as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.AttachBackingFieldToMimeType">
            <summary>Attaches delegates to emulate StubIAssetFile.MimeType as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.ContentChecksumGet">
            <summary>Sets the stub of IAssetFile.get_ContentChecksum()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.ContentFileSizeGet">
            <summary>Sets the stub of IAssetFile.get_ContentFileSize()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.ContentFileSizeSetInt64">
            <summary>Sets the stub of IAssetFile.set_ContentFileSize(Int64 value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.CreatedGet">
            <summary>Sets the stub of IAssetFile.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.Delete">
            <summary>Sets the stub of IAssetFile.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.DeleteAsync">
            <summary>Sets the stub of IAssetFile.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.DownloadAsyncStringBlobTransferClientILocatorCancellationToken">
            <summary>Sets the stub of IAssetFile.DownloadAsync(String destinationPath, BlobTransferClient blobTransferClient, ILocator locator, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.DownloadString">
            <summary>Sets the stub of IAssetFile.Download(String destinationPath)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.EncryptionKeyIdGet">
            <summary>Sets the stub of IAssetFile.get_EncryptionKeyId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.EncryptionSchemeGet">
            <summary>Sets the stub of IAssetFile.get_EncryptionScheme()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.EncryptionVersionGet">
            <summary>Sets the stub of IAssetFile.get_EncryptionVersion()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.IdGet">
            <summary>Sets the stub of IAssetFile.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.InitializationVectorGet">
            <summary>Sets the stub of IAssetFile.get_InitializationVector()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.IsEncryptedGet">
            <summary>Sets the stub of IAssetFile.get_IsEncrypted()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.IsPrimaryGet">
            <summary>Sets the stub of IAssetFile.get_IsPrimary()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.IsPrimarySetBoolean">
            <summary>Sets the stub of IAssetFile.set_IsPrimary(Boolean value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.LastModifiedGet">
            <summary>Sets the stub of IAssetFile.get_LastModified()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#Delete">
            <summary>Sets the stub of IAssetFile.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#DeleteAsync">
            <summary>Sets the stub of IAssetFile.DeleteAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#Download(System.String)">
            <summary>Sets the stub of IAssetFile.Download(String destinationPath)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#DownloadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)">
            <summary>Sets the stub of IAssetFile.DownloadAsync(String destinationPath, BlobTransferClient blobTransferClient, ILocator locator, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#Update">
            <summary>Sets the stub of IAssetFile.Update()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#UpdateAsync">
            <summary>Sets the stub of IAssetFile.UpdateAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#Upload(System.String)">
            <summary>Sets the stub of IAssetFile.Upload(String path)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#UploadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)">
            <summary>Sets the stub of IAssetFile.UploadAsync(String path, BlobTransferClient blobTransferClient, ILocator locator, CancellationToken token)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.MimeTypeGet">
            <summary>Sets the stub of IAssetFile.get_MimeType()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.MimeTypeSetString">
            <summary>Sets the stub of IAssetFile.set_MimeType(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.NameGet">
            <summary>Sets the stub of IAssetFile.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.ParentAssetIdGet">
            <summary>Sets the stub of IAssetFile.get_ParentAssetId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.Update">
            <summary>Sets the stub of IAssetFile.Update()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.UpdateAsync">
            <summary>Sets the stub of IAssetFile.UpdateAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.UploadAsyncStringBlobTransferClientILocatorCancellationToken">
            <summary>Sets the stub of IAssetFile.UploadAsync(String path, BlobTransferClient blobTransferClient, ILocator locator, CancellationToken token)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.UploadString">
            <summary>Sets the stub of IAssetFile.Upload(String path)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#Asset">
            <summary>Sets the stub of IAssetFile.get_Asset()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#ContentChecksum">
            <summary>Sets the stub of IAssetFile.get_ContentChecksum()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#ContentFileSize">
            <summary>Sets the stub of IAssetFile.get_ContentFileSize()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#Created">
            <summary>Sets the stub of IAssetFile.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#EncryptionKeyId">
            <summary>Sets the stub of IAssetFile.get_EncryptionKeyId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#EncryptionScheme">
            <summary>Sets the stub of IAssetFile.get_EncryptionScheme()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#EncryptionVersion">
            <summary>Sets the stub of IAssetFile.get_EncryptionVersion()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#Id">
            <summary>Sets the stub of IAssetFile.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#InitializationVector">
            <summary>Sets the stub of IAssetFile.get_InitializationVector()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#IsEncrypted">
            <summary>Sets the stub of IAssetFile.get_IsEncrypted()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#IsPrimary">
            <summary>Sets the stub of IAssetFile.get_IsPrimary()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#LastModified">
            <summary>Sets the stub of IAssetFile.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#MimeType">
            <summary>Sets the stub of IAssetFile.get_MimeType()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#Name">
            <summary>Sets the stub of IAssetFile.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIAssetFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IAssetFile#ParentAssetId">
            <summary>Sets the stub of IAssetFile.get_ParentAssetId()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IContentKey</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.#ctor">
            <summary>Initializes a new instance of type StubIContentKey</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.ChecksumGet">
            <summary>Sets the stub of IContentKey.get_Checksum()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.ContentKeyTypeGet">
            <summary>Sets the stub of IContentKey.get_ContentKeyType()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.CreatedGet">
            <summary>Sets the stub of IContentKey.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.Delete">
            <summary>Sets the stub of IContentKey.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.DeleteAsync">
            <summary>Sets the stub of IContentKey.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.EncryptedContentKeyGet">
            <summary>Sets the stub of IContentKey.get_EncryptedContentKey()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.GetClearKeyValue">
            <summary>Sets the stub of IContentKey.GetClearKeyValue()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.GetClearKeyValueAsync">
            <summary>Sets the stub of IContentKey.GetClearKeyValueAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.GetEncryptedKeyValueAsyncX509Certificate2">
            <summary>Sets the stub of IContentKey.GetEncryptedKeyValueAsync(X509Certificate2 certToEncryptTo)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.GetEncryptedKeyValueX509Certificate2">
            <summary>Sets the stub of IContentKey.GetEncryptedKeyValue(X509Certificate2 certToEncryptTo)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.IdGet">
            <summary>Sets the stub of IContentKey.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.LastModifiedGet">
            <summary>Sets the stub of IContentKey.get_LastModified()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#Delete">
            <summary>Sets the stub of IContentKey.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#DeleteAsync">
            <summary>Sets the stub of IContentKey.DeleteAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#GetClearKeyValue">
            <summary>Sets the stub of IContentKey.GetClearKeyValue()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#GetClearKeyValueAsync">
            <summary>Sets the stub of IContentKey.GetClearKeyValueAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#GetEncryptedKeyValue(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>Sets the stub of IContentKey.GetEncryptedKeyValue(X509Certificate2 certToEncryptTo)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#GetEncryptedKeyValueAsync(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>Sets the stub of IContentKey.GetEncryptedKeyValueAsync(X509Certificate2 certToEncryptTo)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.NameGet">
            <summary>Sets the stub of IContentKey.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.ProtectionKeyIdGet">
            <summary>Sets the stub of IContentKey.get_ProtectionKeyId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.ProtectionKeyTypeGet">
            <summary>Sets the stub of IContentKey.get_ProtectionKeyType()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#Checksum">
            <summary>Sets the stub of IContentKey.get_Checksum()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#ContentKeyType">
            <summary>Sets the stub of IContentKey.get_ContentKeyType()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#Created">
            <summary>Sets the stub of IContentKey.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#EncryptedContentKey">
            <summary>Sets the stub of IContentKey.get_EncryptedContentKey()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#Id">
            <summary>Sets the stub of IContentKey.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#LastModified">
            <summary>Sets the stub of IContentKey.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#Name">
            <summary>Sets the stub of IContentKey.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#ProtectionKeyId">
            <summary>Sets the stub of IContentKey.get_ProtectionKeyId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIContentKey.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IContentKey#ProtectionKeyType">
            <summary>Sets the stub of IContentKey.get_ProtectionKeyType()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.#ctor">
            <summary>Initializes a new instance of type StubIIngestManifest</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIIngestManifest.Name as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.BlobStorageUriForUploadGet">
            <summary>Sets the stub of IIngestManifest.get_BlobStorageUriForUpload()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.CreatedGet">
            <summary>Sets the stub of IIngestManifest.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.Delete">
            <summary>Sets the stub of IIngestManifest.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.DeleteAsync">
            <summary>Sets the stub of IIngestManifest.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.EncryptFilesAsyncStringBooleanCancellationToken">
            <summary>Sets the stub of IIngestManifest.EncryptFilesAsync(String outputPath, Boolean overwriteExistingEncryptedFiles, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.EncryptFilesAsyncStringCancellationToken">
            <summary>Sets the stub of IIngestManifest.EncryptFilesAsync(String outputPath, CancellationToken token)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.EncryptFilesString">
            <summary>Sets the stub of IIngestManifest.EncryptFiles(String outputPath)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.EncryptFilesStringBoolean">
            <summary>Sets the stub of IIngestManifest.EncryptFiles(String outputPath, Boolean overrideExistingEncryptedFiles)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.IdGet">
            <summary>Sets the stub of IIngestManifest.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.IngestManifestAssetsGet">
            <summary>Sets the stub of IIngestManifest.get_IngestManifestAssets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.LastModifiedGet">
            <summary>Sets the stub of IIngestManifest.get_LastModified()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#Delete">
            <summary>Sets the stub of IIngestManifest.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#DeleteAsync">
            <summary>Sets the stub of IIngestManifest.DeleteAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#EncryptFiles(System.String)">
            <summary>Sets the stub of IIngestManifest.EncryptFiles(String outputPath)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#EncryptFiles(System.String,System.Boolean)">
            <summary>Sets the stub of IIngestManifest.EncryptFiles(String outputPath, Boolean overrideExistingEncryptedFiles)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#EncryptFilesAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of IIngestManifest.EncryptFilesAsync(String outputPath, CancellationToken token)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#EncryptFilesAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>Sets the stub of IIngestManifest.EncryptFilesAsync(String outputPath, Boolean overwriteExistingEncryptedFiles, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#Update">
            <summary>Sets the stub of IIngestManifest.Update()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#UpdateAsync">
            <summary>Sets the stub of IIngestManifest.UpdateAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.NameGet">
            <summary>Sets the stub of IIngestManifest.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.NameSetString">
            <summary>Sets the stub of IIngestManifest.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.StateGet">
            <summary>Sets the stub of IIngestManifest.get_State()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.StatisticsGet">
            <summary>Sets the stub of IIngestManifest.get_Statistics()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.Update">
            <summary>Sets the stub of IIngestManifest.Update()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.UpdateAsync">
            <summary>Sets the stub of IIngestManifest.UpdateAsync()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#BlobStorageUriForUpload">
            <summary>Sets the stub of IIngestManifest.get_BlobStorageUriForUpload()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#Created">
            <summary>Sets the stub of IIngestManifest.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#Id">
            <summary>Sets the stub of IIngestManifest.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#IngestManifestAssets">
            <summary>Sets the stub of IIngestManifest.get_IngestManifestAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#LastModified">
            <summary>Sets the stub of IIngestManifest.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#Name">
            <summary>Sets the stub of IIngestManifest.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#State">
            <summary>Sets the stub of IIngestManifest.get_State()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifest.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifest#Statistics">
            <summary>Sets the stub of IIngestManifest.get_Statistics()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestAsset</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.#ctor">
            <summary>Initializes a new instance of type StubIIngestManifestAsset</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.AssetGet">
            <summary>Sets the stub of IIngestManifestAsset.get_Asset()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.CreatedGet">
            <summary>Sets the stub of IIngestManifestAsset.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.Delete">
            <summary>Sets the stub of IIngestManifestAsset.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.DeleteAsync">
            <summary>Sets the stub of IIngestManifestAsset.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.IdGet">
            <summary>Sets the stub of IIngestManifestAsset.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.IngestManifestFilesGet">
            <summary>Sets the stub of IIngestManifestAsset.get_IngestManifestFiles()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.LastModifiedGet">
            <summary>Sets the stub of IIngestManifestAsset.get_LastModified()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestAsset#Delete">
            <summary>Sets the stub of IIngestManifestAsset.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestAsset#DeleteAsync">
            <summary>Sets the stub of IIngestManifestAsset.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.ParentIngestManifestIdGet">
            <summary>Sets the stub of IIngestManifestAsset.get_ParentIngestManifestId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestAsset#Asset">
            <summary>Sets the stub of IIngestManifestAsset.get_Asset()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestAsset#Created">
            <summary>Sets the stub of IIngestManifestAsset.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestAsset#Id">
            <summary>Sets the stub of IIngestManifestAsset.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestAsset#IngestManifestFiles">
            <summary>Sets the stub of IIngestManifestAsset.get_IngestManifestFiles()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestAsset#LastModified">
            <summary>Sets the stub of IIngestManifestAsset.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestAsset.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestAsset#ParentIngestManifestId">
            <summary>Sets the stub of IIngestManifestAsset.get_ParentIngestManifestId()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestFile</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.#ctor">
            <summary>Initializes a new instance of type StubIIngestManifestFile</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.AttachBackingFieldToErrorDetail">
            <summary>Attaches delegates to emulate StubIIngestManifestFile.ErrorDetail as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.AttachBackingFieldToIsPrimary">
            <summary>Attaches delegates to emulate StubIIngestManifestFile.IsPrimary as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.AttachBackingFieldToMimeType">
            <summary>Attaches delegates to emulate StubIIngestManifestFile.MimeType as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIIngestManifestFile.Name as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.CreatedGet">
            <summary>Sets the stub of IIngestManifestFile.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.Delete">
            <summary>Sets the stub of IIngestManifestFile.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.DeleteAsync">
            <summary>Sets the stub of IIngestManifestFile.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.EncryptionKeyIdGet">
            <summary>Sets the stub of IIngestManifestFile.get_EncryptionKeyId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.EncryptionSchemeGet">
            <summary>Sets the stub of IIngestManifestFile.get_EncryptionScheme()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.EncryptionVersionGet">
            <summary>Sets the stub of IIngestManifestFile.get_EncryptionVersion()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.ErrorDetailGet">
            <summary>Sets the stub of IIngestManifestFile.get_ErrorDetail()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.ErrorDetailSetString">
            <summary>Sets the stub of IIngestManifestFile.set_ErrorDetail(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.IdGet">
            <summary>Sets the stub of IIngestManifestFile.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.InitializationVectorGet">
            <summary>Sets the stub of IIngestManifestFile.get_InitializationVector()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.IsEncryptedGet">
            <summary>Sets the stub of IIngestManifestFile.get_IsEncrypted()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.IsPrimaryGet">
            <summary>Sets the stub of IIngestManifestFile.get_IsPrimary()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.IsPrimarySetBoolean">
            <summary>Sets the stub of IIngestManifestFile.set_IsPrimary(Boolean value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.LastModifiedGet">
            <summary>Sets the stub of IIngestManifestFile.get_LastModified()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#Delete">
            <summary>Sets the stub of IIngestManifestFile.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#DeleteAsync">
            <summary>Sets the stub of IIngestManifestFile.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.MimeTypeGet">
            <summary>Sets the stub of IIngestManifestFile.get_MimeType()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.MimeTypeSetString">
            <summary>Sets the stub of IIngestManifestFile.set_MimeType(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.NameGet">
            <summary>Sets the stub of IIngestManifestFile.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.NameSetString">
            <summary>Sets the stub of IIngestManifestFile.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.ParentIngestManifestAssetIdGet">
            <summary>Sets the stub of IIngestManifestFile.get_ParentIngestManifestAssetId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.ParentIngestManifestIdGet">
            <summary>Sets the stub of IIngestManifestFile.get_ParentIngestManifestId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.StateGet">
            <summary>Sets the stub of IIngestManifestFile.get_State()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#Created">
            <summary>Sets the stub of IIngestManifestFile.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#EncryptionKeyId">
            <summary>Sets the stub of IIngestManifestFile.get_EncryptionKeyId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#EncryptionScheme">
            <summary>Sets the stub of IIngestManifestFile.get_EncryptionScheme()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#EncryptionVersion">
            <summary>Sets the stub of IIngestManifestFile.get_EncryptionVersion()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#ErrorDetail">
            <summary>Sets the stub of IIngestManifestFile.get_ErrorDetail()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#Id">
            <summary>Sets the stub of IIngestManifestFile.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#InitializationVector">
            <summary>Sets the stub of IIngestManifestFile.get_InitializationVector()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#IsEncrypted">
            <summary>Sets the stub of IIngestManifestFile.get_IsEncrypted()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#IsPrimary">
            <summary>Sets the stub of IIngestManifestFile.get_IsPrimary()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#LastModified">
            <summary>Sets the stub of IIngestManifestFile.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#MimeType">
            <summary>Sets the stub of IIngestManifestFile.get_MimeType()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#Name">
            <summary>Sets the stub of IIngestManifestFile.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#ParentIngestManifestAssetId">
            <summary>Sets the stub of IIngestManifestFile.get_ParentIngestManifestAssetId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#ParentIngestManifestId">
            <summary>Sets the stub of IIngestManifestFile.get_ParentIngestManifestId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestFile.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestFile#State">
            <summary>Sets the stub of IIngestManifestFile.get_State()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestStatistics</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.#ctor">
            <summary>Initializes a new instance of type StubIIngestManifestStatistics</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.AttachBackingFieldToErrorFilesCount">
            <summary>Attaches delegates to emulate StubIIngestManifestStatistics.ErrorFilesCount as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.AttachBackingFieldToErrorFilesDetails">
            <summary>Attaches delegates to emulate StubIIngestManifestStatistics.ErrorFilesDetails as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.AttachBackingFieldToFinishedFilesCount">
            <summary>Attaches delegates to emulate StubIIngestManifestStatistics.FinishedFilesCount as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.AttachBackingFieldToPendingFilesCount">
            <summary>Attaches delegates to emulate StubIIngestManifestStatistics.PendingFilesCount as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.ErrorFilesCountGet">
            <summary>Sets the stub of IIngestManifestStatistics.get_ErrorFilesCount()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.ErrorFilesCountSetInt32">
            <summary>Sets the stub of IIngestManifestStatistics.set_ErrorFilesCount(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.ErrorFilesDetailsGet">
            <summary>Sets the stub of IIngestManifestStatistics.get_ErrorFilesDetails()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.ErrorFilesDetailsSetString">
            <summary>Sets the stub of IIngestManifestStatistics.set_ErrorFilesDetails(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.FinishedFilesCountGet">
            <summary>Sets the stub of IIngestManifestStatistics.get_FinishedFilesCount()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.FinishedFilesCountSetInt32">
            <summary>Sets the stub of IIngestManifestStatistics.set_FinishedFilesCount(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.PendingFilesCountGet">
            <summary>Sets the stub of IIngestManifestStatistics.get_PendingFilesCount()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.PendingFilesCountSetInt32">
            <summary>Sets the stub of IIngestManifestStatistics.set_PendingFilesCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestStatistics#ErrorFilesCount">
            <summary>Sets the stub of IIngestManifestStatistics.get_ErrorFilesCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestStatistics#ErrorFilesDetails">
            <summary>Sets the stub of IIngestManifestStatistics.get_ErrorFilesDetails()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestStatistics#FinishedFilesCount">
            <summary>Sets the stub of IIngestManifestStatistics.get_FinishedFilesCount()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIIngestManifestStatistics.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IIngestManifestStatistics#PendingFilesCount">
            <summary>Sets the stub of IIngestManifestStatistics.get_PendingFilesCount()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IJob</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.#ctor">
            <summary>Initializes a new instance of type StubIJob</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIJob.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.AttachBackingFieldToPriority">
            <summary>Attaches delegates to emulate StubIJob.Priority as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.Cancel">
            <summary>Sets the stub of IJob.Cancel()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.CancelAsync">
            <summary>Sets the stub of IJob.CancelAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.CreatedGet">
            <summary>Sets the stub of IJob.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.Delete">
            <summary>Sets the stub of IJob.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.DeleteAsync">
            <summary>Sets the stub of IJob.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.EndTimeGet">
            <summary>Sets the stub of IJob.get_EndTime()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.GetExecutionProgressTaskCancellationToken">
            <summary>Sets the stub of IJob.GetExecutionProgressTask(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.IdGet">
            <summary>Sets the stub of IJob.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.InputMediaAssetsGet">
            <summary>Sets the stub of IJob.get_InputMediaAssets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.LastModifiedGet">
            <summary>Sets the stub of IJob.get_LastModified()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#Cancel">
            <summary>Sets the stub of IJob.Cancel()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#CancelAsync">
            <summary>Sets the stub of IJob.CancelAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#Delete">
            <summary>Sets the stub of IJob.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#DeleteAsync">
            <summary>Sets the stub of IJob.DeleteAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#GetExecutionProgressTask(System.Threading.CancellationToken)">
            <summary>Sets the stub of IJob.GetExecutionProgressTask(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#SaveAsTemplate(System.String)">
            <summary>Sets the stub of IJob.SaveAsTemplate(String templateName)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#SaveAsTemplateAsync(System.String)">
            <summary>Sets the stub of IJob.SaveAsTemplateAsync(String templateName)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#Submit">
            <summary>Sets the stub of IJob.Submit()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#SubmitAsync">
            <summary>Sets the stub of IJob.SubmitAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.NameGet">
            <summary>Sets the stub of IJob.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.NameSetString">
            <summary>Sets the stub of IJob.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.OutputMediaAssetsGet">
            <summary>Sets the stub of IJob.get_OutputMediaAssets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.PriorityGet">
            <summary>Sets the stub of IJob.get_Priority()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.PrioritySetInt32">
            <summary>Sets the stub of IJob.set_Priority(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.RunningDurationGet">
            <summary>Sets the stub of IJob.get_RunningDuration()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.SaveAsTemplateAsyncString">
            <summary>Sets the stub of IJob.SaveAsTemplateAsync(String templateName)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.SaveAsTemplateString">
            <summary>Sets the stub of IJob.SaveAsTemplate(String templateName)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.StartTimeGet">
            <summary>Sets the stub of IJob.get_StartTime()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.StateGet">
            <summary>Sets the stub of IJob.get_State()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.Submit">
            <summary>Sets the stub of IJob.Submit()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.SubmitAsync">
            <summary>Sets the stub of IJob.SubmitAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.TasksGet">
            <summary>Sets the stub of IJob.get_Tasks()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.TemplateIdGet">
            <summary>Sets the stub of IJob.get_TemplateId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#Created">
            <summary>Sets the stub of IJob.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#EndTime">
            <summary>Sets the stub of IJob.get_EndTime()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#Id">
            <summary>Sets the stub of IJob.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#InputMediaAssets">
            <summary>Sets the stub of IJob.get_InputMediaAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#LastModified">
            <summary>Sets the stub of IJob.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#Name">
            <summary>Sets the stub of IJob.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#OutputMediaAssets">
            <summary>Sets the stub of IJob.get_OutputMediaAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#Priority">
            <summary>Sets the stub of IJob.get_Priority()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#RunningDuration">
            <summary>Sets the stub of IJob.get_RunningDuration()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#StartTime">
            <summary>Sets the stub of IJob.get_StartTime()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#State">
            <summary>Sets the stub of IJob.get_State()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#Tasks">
            <summary>Sets the stub of IJob.get_Tasks()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJob.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJob#TemplateId">
            <summary>Sets the stub of IJob.get_TemplateId()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IJobTemplate</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.#ctor">
            <summary>Initializes a new instance of type StubIJobTemplate</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.AttachBackingFieldToJobTemplateBody">
            <summary>Attaches delegates to emulate StubIJobTemplate.JobTemplateBody as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIJobTemplate.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.AttachBackingFieldToNumberofInputAssets">
            <summary>Attaches delegates to emulate StubIJobTemplate.NumberofInputAssets as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.AttachBackingFieldToTemplateType">
            <summary>Attaches delegates to emulate StubIJobTemplate.TemplateType as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.Copy">
            <summary>Sets the stub of IJobTemplate.Copy()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.CreatedGet">
            <summary>Sets the stub of IJobTemplate.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.Delete">
            <summary>Sets the stub of IJobTemplate.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.DeleteAsync">
            <summary>Sets the stub of IJobTemplate.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.IdGet">
            <summary>Sets the stub of IJobTemplate.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.JobTemplateBodyGet">
            <summary>Sets the stub of IJobTemplate.get_JobTemplateBody()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.JobTemplateBodySetString">
            <summary>Sets the stub of IJobTemplate.set_JobTemplateBody(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.LastModifiedGet">
            <summary>Sets the stub of IJobTemplate.get_LastModified()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#Copy">
            <summary>Sets the stub of IJobTemplate.Copy()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#Delete">
            <summary>Sets the stub of IJobTemplate.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#DeleteAsync">
            <summary>Sets the stub of IJobTemplate.DeleteAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#Save">
            <summary>Sets the stub of IJobTemplate.Save()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#SaveAsync">
            <summary>Sets the stub of IJobTemplate.SaveAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.NameGet">
            <summary>Sets the stub of IJobTemplate.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.NameSetString">
            <summary>Sets the stub of IJobTemplate.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.NumberofInputAssetsGet">
            <summary>Sets the stub of IJobTemplate.get_NumberofInputAssets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.NumberofInputAssetsSetInt32">
            <summary>Sets the stub of IJobTemplate.set_NumberofInputAssets(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.Save">
            <summary>Sets the stub of IJobTemplate.Save()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.SaveAsync">
            <summary>Sets the stub of IJobTemplate.SaveAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.TaskTemplatesGet">
            <summary>Sets the stub of IJobTemplate.get_TaskTemplates()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.TemplateTypeGet">
            <summary>Sets the stub of IJobTemplate.get_TemplateType()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.TemplateTypeSetJobTemplateType">
            <summary>Sets the stub of IJobTemplate.set_TemplateType(JobTemplateType value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#Created">
            <summary>Sets the stub of IJobTemplate.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#Id">
            <summary>Sets the stub of IJobTemplate.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#JobTemplateBody">
            <summary>Sets the stub of IJobTemplate.get_JobTemplateBody()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#LastModified">
            <summary>Sets the stub of IJobTemplate.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#Name">
            <summary>Sets the stub of IJobTemplate.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#NumberofInputAssets">
            <summary>Sets the stub of IJobTemplate.get_NumberofInputAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#TaskTemplates">
            <summary>Sets the stub of IJobTemplate.get_TaskTemplates()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIJobTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IJobTemplate#TemplateType">
            <summary>Sets the stub of IJobTemplate.get_TemplateType()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.ILocator</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.#ctor">
            <summary>Initializes a new instance of type StubILocator</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.AccessPolicyGet">
            <summary>Sets the stub of ILocator.get_AccessPolicy()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.AccessPolicyIdGet">
            <summary>Sets the stub of ILocator.get_AccessPolicyId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.AssetGet">
            <summary>Sets the stub of ILocator.get_Asset()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.AssetIdGet">
            <summary>Sets the stub of ILocator.get_AssetId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.BaseUriGet">
            <summary>Sets the stub of ILocator.get_BaseUri()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.ContentAccessComponentGet">
            <summary>Sets the stub of ILocator.get_ContentAccessComponent()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.Delete">
            <summary>Sets the stub of ILocator.Delete()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.DeleteAsync">
            <summary>Sets the stub of ILocator.DeleteAsync()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.ExpirationDateTimeGet">
            <summary>Sets the stub of ILocator.get_ExpirationDateTime()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.IdGet">
            <summary>Sets the stub of ILocator.get_Id()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#Delete">
            <summary>Sets the stub of ILocator.Delete()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#DeleteAsync">
            <summary>Sets the stub of ILocator.DeleteAsync()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#Update(System.DateTime)">
            <summary>Sets the stub of ILocator.Update(DateTime expiryTime)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#Update(System.Nullable{System.DateTime},System.DateTime)">
            <summary>Sets the stub of ILocator.Update(Nullable`1&lt;DateTime&gt; startTime, DateTime expiryTime)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#UpdateAsync(System.DateTime)">
            <summary>Sets the stub of ILocator.UpdateAsync(DateTime expiryTime)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#UpdateAsync(System.Nullable{System.DateTime},System.DateTime)">
            <summary>Sets the stub of ILocator.UpdateAsync(Nullable`1&lt;DateTime&gt; startTime, DateTime expiryTime)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.PathGet">
            <summary>Sets the stub of ILocator.get_Path()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.StartTimeGet">
            <summary>Sets the stub of ILocator.get_StartTime()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.TypeGet">
            <summary>Sets the stub of ILocator.get_Type()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.UpdateAsyncDateTime">
            <summary>Sets the stub of ILocator.UpdateAsync(DateTime expiryTime)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.UpdateAsyncNullableOfDateTimeDateTime">
            <summary>Sets the stub of ILocator.UpdateAsync(Nullable`1&lt;DateTime&gt; startTime, DateTime expiryTime)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.UpdateDateTime">
            <summary>Sets the stub of ILocator.Update(DateTime expiryTime)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.UpdateNullableOfDateTimeDateTime">
            <summary>Sets the stub of ILocator.Update(Nullable`1&lt;DateTime&gt; startTime, DateTime expiryTime)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#AccessPolicy">
            <summary>Sets the stub of ILocator.get_AccessPolicy()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#AccessPolicyId">
            <summary>Sets the stub of ILocator.get_AccessPolicyId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#Asset">
            <summary>Sets the stub of ILocator.get_Asset()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#AssetId">
            <summary>Sets the stub of ILocator.get_AssetId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#BaseUri">
            <summary>Sets the stub of ILocator.get_BaseUri()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#ContentAccessComponent">
            <summary>Sets the stub of ILocator.get_ContentAccessComponent()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#ExpirationDateTime">
            <summary>Sets the stub of ILocator.get_ExpirationDateTime()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#Id">
            <summary>Sets the stub of ILocator.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#Path">
            <summary>Sets the stub of ILocator.get_Path()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#StartTime">
            <summary>Sets the stub of ILocator.get_StartTime()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubILocator.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ILocator#Type">
            <summary>Sets the stub of ILocator.get_Type()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.#ctor">
            <summary>Initializes a new instance of type StubIMediaProcessor</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.CreatedGet">
            <summary>Sets the stub of IMediaProcessor.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.DescriptionGet">
            <summary>Sets the stub of IMediaProcessor.get_Description()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.IdGet">
            <summary>Sets the stub of IMediaProcessor.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.LastModifiedGet">
            <summary>Sets the stub of IMediaProcessor.get_LastModified()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.NameGet">
            <summary>Sets the stub of IMediaProcessor.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.SkuGet">
            <summary>Sets the stub of IMediaProcessor.get_Sku()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.VendorGet">
            <summary>Sets the stub of IMediaProcessor.get_Vendor()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.VersionGet">
            <summary>Sets the stub of IMediaProcessor.get_Version()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IMediaProcessor#Created">
            <summary>Sets the stub of IMediaProcessor.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IMediaProcessor#Description">
            <summary>Sets the stub of IMediaProcessor.get_Description()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IMediaProcessor#Id">
            <summary>Sets the stub of IMediaProcessor.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IMediaProcessor#LastModified">
            <summary>Sets the stub of IMediaProcessor.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IMediaProcessor#Name">
            <summary>Sets the stub of IMediaProcessor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IMediaProcessor#Sku">
            <summary>Sets the stub of IMediaProcessor.get_Sku()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IMediaProcessor#Vendor">
            <summary>Sets the stub of IMediaProcessor.get_Vendor()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIMediaProcessor.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#IMediaProcessor#Version">
            <summary>Sets the stub of IMediaProcessor.get_Version()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.ITask</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.#ctor">
            <summary>Initializes a new instance of type StubITask</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.AttachBackingFieldToConfiguration">
            <summary>Attaches delegates to emulate StubITask.Configuration as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.AttachBackingFieldToMediaProcessorId">
            <summary>Attaches delegates to emulate StubITask.MediaProcessorId as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubITask.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.AttachBackingFieldToPriority">
            <summary>Attaches delegates to emulate StubITask.Priority as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.AttachBackingFieldToTaskBody">
            <summary>Attaches delegates to emulate StubITask.TaskBody as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.ConfigurationGet">
            <summary>Sets the stub of ITask.get_Configuration()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.ConfigurationSetString">
            <summary>Sets the stub of ITask.set_Configuration(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.EncryptionKeyIdGet">
            <summary>Sets the stub of ITask.get_EncryptionKeyId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.EncryptionSchemeGet">
            <summary>Sets the stub of ITask.get_EncryptionScheme()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.EncryptionVersionGet">
            <summary>Sets the stub of ITask.get_EncryptionVersion()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.EndTimeGet">
            <summary>Sets the stub of ITask.get_EndTime()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.ErrorDetailsGet">
            <summary>Sets the stub of ITask.get_ErrorDetails()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.GetClearConfiguration">
            <summary>Sets the stub of ITask.GetClearConfiguration()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.HistoricalEventsGet">
            <summary>Sets the stub of ITask.get_HistoricalEvents()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.IdGet">
            <summary>Sets the stub of ITask.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.InitializationVectorGet">
            <summary>Sets the stub of ITask.get_InitializationVector()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.InputAssetsGet">
            <summary>Sets the stub of ITask.get_InputAssets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.MediaProcessorIdGet">
            <summary>Sets the stub of ITask.get_MediaProcessorId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.MediaProcessorIdSetString">
            <summary>Sets the stub of ITask.set_MediaProcessorId(String value)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#GetClearConfiguration">
            <summary>Sets the stub of ITask.GetClearConfiguration()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.NameGet">
            <summary>Sets the stub of ITask.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.NameSetString">
            <summary>Sets the stub of ITask.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.OptionsGet">
            <summary>Sets the stub of ITask.get_Options()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.OutputAssetsGet">
            <summary>Sets the stub of ITask.get_OutputAssets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.PerfMessageGet">
            <summary>Sets the stub of ITask.get_PerfMessage()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.PriorityGet">
            <summary>Sets the stub of ITask.get_Priority()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.PrioritySetInt32">
            <summary>Sets the stub of ITask.set_Priority(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.ProgressGet">
            <summary>Sets the stub of ITask.get_Progress()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.RunningDurationGet">
            <summary>Sets the stub of ITask.get_RunningDuration()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.StartTimeGet">
            <summary>Sets the stub of ITask.get_StartTime()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.StateGet">
            <summary>Sets the stub of ITask.get_State()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.TaskBodyGet">
            <summary>Sets the stub of ITask.get_TaskBody()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.TaskBodySetString">
            <summary>Sets the stub of ITask.set_TaskBody(String value)</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#Configuration">
            <summary>Sets the stub of ITask.get_Configuration()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#EncryptionKeyId">
            <summary>Sets the stub of ITask.get_EncryptionKeyId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#EncryptionScheme">
            <summary>Sets the stub of ITask.get_EncryptionScheme()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#EncryptionVersion">
            <summary>Sets the stub of ITask.get_EncryptionVersion()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#EndTime">
            <summary>Sets the stub of ITask.get_EndTime()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#ErrorDetails">
            <summary>Sets the stub of ITask.get_ErrorDetails()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#HistoricalEvents">
            <summary>Sets the stub of ITask.get_HistoricalEvents()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#Id">
            <summary>Sets the stub of ITask.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#InitializationVector">
            <summary>Sets the stub of ITask.get_InitializationVector()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#InputAssets">
            <summary>Sets the stub of ITask.get_InputAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#MediaProcessorId">
            <summary>Sets the stub of ITask.get_MediaProcessorId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#Name">
            <summary>Sets the stub of ITask.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#Options">
            <summary>Sets the stub of ITask.get_Options()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#OutputAssets">
            <summary>Sets the stub of ITask.get_OutputAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#PerfMessage">
            <summary>Sets the stub of ITask.get_PerfMessage()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#Priority">
            <summary>Sets the stub of ITask.get_Priority()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#Progress">
            <summary>Sets the stub of ITask.get_Progress()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#RunningDuration">
            <summary>Sets the stub of ITask.get_RunningDuration()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#StartTime">
            <summary>Sets the stub of ITask.get_StartTime()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#State">
            <summary>Sets the stub of ITask.get_State()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITask.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITask#TaskBody">
            <summary>Sets the stub of ITask.get_TaskBody()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.ITaskTemplate</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.#ctor">
            <summary>Initializes a new instance of type StubITaskTemplate</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.AttachBackingFieldToConfiguration">
            <summary>Attaches delegates to emulate StubITaskTemplate.Configuration as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubITaskTemplate.Description as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.AttachBackingFieldToMediaProcessorId">
            <summary>Attaches delegates to emulate StubITaskTemplate.MediaProcessorId as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubITaskTemplate.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.AttachBackingFieldToNumberofInputAssets">
            <summary>Attaches delegates to emulate StubITaskTemplate.NumberofInputAssets as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.AttachBackingFieldToNumberofOutputAssets">
            <summary>Attaches delegates to emulate StubITaskTemplate.NumberofOutputAssets as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.ConfigurationGet">
            <summary>Sets the stub of ITaskTemplate.get_Configuration()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.ConfigurationSetString">
            <summary>Sets the stub of ITaskTemplate.set_Configuration(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.CreatedGet">
            <summary>Sets the stub of ITaskTemplate.get_Created()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.DescriptionGet">
            <summary>Sets the stub of ITaskTemplate.get_Description()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.DescriptionSetString">
            <summary>Sets the stub of ITaskTemplate.set_Description(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.EncryptionKeyIdGet">
            <summary>Sets the stub of ITaskTemplate.get_EncryptionKeyId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.EncryptionSchemeGet">
            <summary>Sets the stub of ITaskTemplate.get_EncryptionScheme()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.EncryptionVersionGet">
            <summary>Sets the stub of ITaskTemplate.get_EncryptionVersion()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.GetClearConfiguration">
            <summary>Sets the stub of ITaskTemplate.GetClearConfiguration()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.IdGet">
            <summary>Sets the stub of ITaskTemplate.get_Id()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.InitializationVectorGet">
            <summary>Sets the stub of ITaskTemplate.get_InitializationVector()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.LastModifiedGet">
            <summary>Sets the stub of ITaskTemplate.get_LastModified()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.MediaProcessorIdGet">
            <summary>Sets the stub of ITaskTemplate.get_MediaProcessorId()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.MediaProcessorIdSetString">
            <summary>Sets the stub of ITaskTemplate.set_MediaProcessorId(String value)</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#GetClearConfiguration">
            <summary>Sets the stub of ITaskTemplate.GetClearConfiguration()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.NameGet">
            <summary>Sets the stub of ITaskTemplate.get_Name()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.NameSetString">
            <summary>Sets the stub of ITaskTemplate.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.NumberofInputAssetsGet">
            <summary>Sets the stub of ITaskTemplate.get_NumberofInputAssets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.NumberofInputAssetsSetInt32">
            <summary>Sets the stub of ITaskTemplate.set_NumberofInputAssets(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.NumberofOutputAssetsGet">
            <summary>Sets the stub of ITaskTemplate.get_NumberofOutputAssets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.NumberofOutputAssetsSetInt32">
            <summary>Sets the stub of ITaskTemplate.set_NumberofOutputAssets(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.OptionsGet">
            <summary>Sets the stub of ITaskTemplate.get_Options()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.TaskInputsGet">
            <summary>Sets the stub of ITaskTemplate.get_TaskInputs()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.TaskOutputsGet">
            <summary>Sets the stub of ITaskTemplate.get_TaskOutputs()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#Configuration">
            <summary>Sets the stub of ITaskTemplate.get_Configuration()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#Created">
            <summary>Sets the stub of ITaskTemplate.get_Created()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#Description">
            <summary>Sets the stub of ITaskTemplate.get_Description()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#EncryptionKeyId">
            <summary>Sets the stub of ITaskTemplate.get_EncryptionKeyId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#EncryptionScheme">
            <summary>Sets the stub of ITaskTemplate.get_EncryptionScheme()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#EncryptionVersion">
            <summary>Sets the stub of ITaskTemplate.get_EncryptionVersion()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#Id">
            <summary>Sets the stub of ITaskTemplate.get_Id()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#InitializationVector">
            <summary>Sets the stub of ITaskTemplate.get_InitializationVector()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#LastModified">
            <summary>Sets the stub of ITaskTemplate.get_LastModified()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#MediaProcessorId">
            <summary>Sets the stub of ITaskTemplate.get_MediaProcessorId()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#Name">
            <summary>Sets the stub of ITaskTemplate.get_Name()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#NumberofInputAssets">
            <summary>Sets the stub of ITaskTemplate.get_NumberofInputAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#NumberofOutputAssets">
            <summary>Sets the stub of ITaskTemplate.get_NumberofOutputAssets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#Options">
            <summary>Sets the stub of ITaskTemplate.get_Options()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#TaskInputs">
            <summary>Sets the stub of ITaskTemplate.get_TaskInputs()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubITaskTemplate.mwamsc::Microsoft#WindowsAzure#MediaServices#Client#ITaskTemplate#TaskOutputs">
            <summary>Sets the stub of ITaskTemplate.get_TaskOutputs()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIngestIngestManifestStatistics">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.IngestIngestManifestStatistics</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIngestIngestManifestStatistics.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIngestIngestManifestStatistics.InitializeStub">
            <summary>Initializes a new instance of type StubIngestIngestManifestStatistics</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIngestIngestManifestStatistics.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIngestIngestManifestStatistics.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubIngestIngestManifestStatistics.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubInputAssetCollection`1">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubInputAssetCollection`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubInputAssetCollection`1.InitializeStub">
            <summary>Initializes a new instance of type StubInputAssetCollection</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubInputAssetCollection`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubInputAssetCollection`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubInputAssetCollection`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubJobStateChangedEventArgs">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.JobStateChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubJobStateChangedEventArgs.#ctor(Microsoft.WindowsAzure.MediaServices.Client.JobState,Microsoft.WindowsAzure.MediaServices.Client.JobState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubJobStateChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubJobStateChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubJobStateChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubJobStateChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubJobStateChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.AccessPoliciesGet">
            <summary>Sets the stub of MediaContextBase.get_AccessPolicies()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.AssetsGet">
            <summary>Sets the stub of MediaContextBase.get_Assets()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.ContentKeysGet">
            <summary>Sets the stub of MediaContextBase.get_ContentKeys()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.FilesGet">
            <summary>Sets the stub of MediaContextBase.get_Files()</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.InitializeStub">
            <summary>Initializes a new instance of type StubMediaContextBase</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.JobTemplatesGet">
            <summary>Sets the stub of MediaContextBase.get_JobTemplates()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.JobsGet">
            <summary>Sets the stub of MediaContextBase.get_Jobs()</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.MediaProcessorsGet">
            <summary>Sets the stub of MediaContextBase.get_MediaProcessors()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.AccessPolicies">
            <summary>Sets the stub of MediaContextBase.get_AccessPolicies()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.Assets">
            <summary>Sets the stub of MediaContextBase.get_Assets()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.ContentKeys">
            <summary>Sets the stub of MediaContextBase.get_ContentKeys()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.Files">
            <summary>Sets the stub of MediaContextBase.get_Files()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.JobTemplates">
            <summary>Sets the stub of MediaContextBase.get_JobTemplates()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.Jobs">
            <summary>Sets the stub of MediaContextBase.get_Jobs()</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubMediaContextBase.MediaProcessors">
            <summary>Sets the stub of MediaContextBase.get_MediaProcessors()</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubOutputAssetCollection">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubOutputAssetCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubOutputAssetCollection.InitializeStub">
            <summary>Initializes a new instance of type StubOutputAssetCollection</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubOutputAssetCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubOutputAssetCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubOutputAssetCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskCollection">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.TaskCollection</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskCollection.InitializeStub">
            <summary>Initializes a new instance of type StubTaskCollection</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskHistoricalEvent">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskHistoricalEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskHistoricalEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTaskHistoricalEvent</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskHistoricalEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskHistoricalEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubTaskHistoricalEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubUploadProgressChangedEventArgs">
            <summary>Stub type of Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubUploadProgressChangedEventArgs.#ctor(System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubUploadProgressChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubUploadProgressChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubUploadProgressChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubUploadProgressChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MediaServices.Client.Fakes.StubUploadProgressChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
