<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Core.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SystemCoreDelegates">
            <summary>Contains custom delegates used for the stubs and shims of System.Core</summary>
        </member>
        <member name="T:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle">
            <summary>Stub type of Microsoft.Win32.SafeHandles.SafeNCryptHandle</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.Dispose(System.Boolean)">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.DisposeBoolean">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.InitializeStub">
            <summary>Initializes a new instance of type StubSafeNCryptHandle</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.IsInvalidGet">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.ReleaseHandle">
            <summary>Sets the stub of SafeNCryptHandle.ReleaseHandle()</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.ReleaseHandle01">
            <summary>Sets the stub of SafeNCryptHandle.ReleaseHandle()</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.ReleaseNativeHandle">
            <summary>Sets the stub of SafeNCryptHandle.ReleaseNativeHandle()</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.ReleaseNativeHandle01">
            <summary>Sets the stub of SafeNCryptHandle.ReleaseNativeHandle()</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeNCryptHandle.IsInvalid">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.ShimHashSet`1">
            <summary>Shim type of System.Collections.Generic.HashSet`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.#ctor(System.Collections.Generic.HashSet{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.Bind(System.Collections.Generic.ISet{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AddT0">
            <summary>Sets the shim of HashSet`1.Add(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.Clear">
            <summary>Sets the shim of HashSet`1.Clear()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.ComparerGet">
            <summary>Sets the shim of HashSet`1.get_Comparer()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.Constructor">
            <summary>Sets the shim of HashSet`1.HashSet`1()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.ConstructorIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.HashSet`1(IEnumerable`1&lt;!0&gt; collection)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.ConstructorIEnumerableOfT0IEqualityComparerOfT0">
            <summary>Sets the shim of HashSet`1.HashSet`1(IEnumerable`1&lt;!0&gt; collection, IEqualityComparer`1&lt;!0&gt; comparer)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.ConstructorIEqualityComparerOfT0">
            <summary>Sets the shim of HashSet`1.HashSet`1(IEqualityComparer`1&lt;!0&gt; comparer)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of HashSet`1.HashSet`1(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.ContainsT0">
            <summary>Sets the shim of HashSet`1.Contains(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.CopyToT0Array">
            <summary>Sets the shim of HashSet`1.CopyTo(!0[] array)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of HashSet`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.CopyToT0ArrayInt32Int32">
            <summary>Sets the shim of HashSet`1.CopyTo(!0[] array, Int32 arrayIndex, Int32 count)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.CountGet">
            <summary>Sets the shim of HashSet`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.CreateSetComparer">
            <summary>Sets the shim of HashSet`1.CreateSetComparer()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.ExceptWithIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.ExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.GetEnumerator">
            <summary>Sets the shim of HashSet`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of HashSet`1.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.IntersectWithIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IntersectWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.IsProperSubsetOfIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IsProperSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.IsProperSupersetOfIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IsProperSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of HashSet`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.IsSubsetOfIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IsSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.IsSupersetOfIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IsSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.OnDeserializationObject">
            <summary>Sets the shim of HashSet`1.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.OverlapsIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.Overlaps(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.RemoveT0">
            <summary>Sets the shim of HashSet`1.Remove(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.RemoveWherePredicateOfT0">
            <summary>Sets the shim of HashSet`1.RemoveWhere(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.SetEqualsIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.SetEquals(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.SymmetricExceptWithIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.SymmetricExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of HashSet`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of HashSet`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of HashSet`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.TrimExcess">
            <summary>Sets the shim of HashSet`1.TrimExcess()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.UnionWithIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.UnionWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.AddT0">
            <summary>Sets the shim of HashSet`1.Add(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.Clear">
            <summary>Sets the shim of HashSet`1.Clear()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.ComparerGet">
            <summary>Sets the shim of HashSet`1.get_Comparer()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.ContainsT0">
            <summary>Sets the shim of HashSet`1.Contains(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.CopyToT0Array">
            <summary>Sets the shim of HashSet`1.CopyTo(!0[] array)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of HashSet`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.CopyToT0ArrayInt32Int32">
            <summary>Sets the shim of HashSet`1.CopyTo(!0[] array, Int32 arrayIndex, Int32 count)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.CountGet">
            <summary>Sets the shim of HashSet`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.ExceptWithIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.ExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of HashSet`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of HashSet`1.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.IntersectWithIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IntersectWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.IsProperSubsetOfIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IsProperSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.IsProperSupersetOfIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IsProperSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of HashSet`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.IsSubsetOfIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IsSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.IsSupersetOfIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.IsSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.OnDeserializationObject">
            <summary>Sets the shim of HashSet`1.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.OverlapsIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.Overlaps(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.RemoveT0">
            <summary>Sets the shim of HashSet`1.Remove(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.RemoveWherePredicateOfT0">
            <summary>Sets the shim of HashSet`1.RemoveWhere(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.SetEqualsIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.SetEquals(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.SymmetricExceptWithIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.SymmetricExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of HashSet`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of HashSet`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of HashSet`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.TrimExcess">
            <summary>Sets the shim of HashSet`1.TrimExcess()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.AllInstances.UnionWithIEnumerableOfT0">
            <summary>Sets the shim of HashSet`1.UnionWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.ShimHashSet`1.ShimEnumerator">
            <summary>Shim type of System.Collections.Generic.HashSet`1+Enumerator</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.ShimEnumerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.ShimEnumerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimHashSet`1.ShimEnumerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimHashSet`1.ShimEnumerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.ShimHashSet`1.ShimEnumerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubHashSet`1">
            <summary>Stub type of System.Collections.Generic.HashSet`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubHashSet`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubHashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubHashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubHashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubHashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubHashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of HashSet`1.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubHashSet`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of HashSet`1.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubHashSet`1.InitializeStub">
            <summary>Initializes a new instance of type StubHashSet</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubHashSet`1.OnDeserialization(System.Object)">
            <summary>Sets the stub of HashSet`1.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubHashSet`1.OnDeserializationObject">
            <summary>Sets the stub of HashSet`1.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubHashSet`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubHashSet`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubHashSet`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Fakes.ShimEventDescriptor">
            <summary>Shim type of System.Diagnostics.Eventing.EventDescriptor</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Fakes.ShimEventDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Fakes.ShimEventProvider">
            <summary>Shim type of System.Diagnostics.Eventing.EventProvider</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProvider.#ctor(System.Diagnostics.Eventing.EventProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProvider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.Close">
            <summary>Sets the shim of EventProvider.Close()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.ConstructorGuid">
            <summary>Sets the shim of EventProvider.EventProvider(Guid providerGuid)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.CreateActivityId">
            <summary>Sets the shim of EventProvider.CreateActivityId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.Dispose">
            <summary>Sets the shim of EventProvider.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.DisposeBoolean">
            <summary>Sets the shim of EventProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.GetLastWriteEventError">
            <summary>Sets the shim of EventProvider.GetLastWriteEventError()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.IsEnabled">
            <summary>Sets the shim of EventProvider.IsEnabled()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.IsEnabledByteInt64">
            <summary>Sets the shim of EventProvider.IsEnabled(Byte level, Int64 keywords)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.SetActivityIdGuidRef">
            <summary>Sets the shim of EventProvider.SetActivityId(Guid&amp; id)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.StaticConstructor">
            <summary>Sets the shim of EventProvider.EventProvider()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.WriteMessageEventString">
            <summary>Sets the shim of EventProvider.WriteMessageEvent(String eventMessage)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.WriteMessageEventStringByteInt64">
            <summary>Sets the shim of EventProvider.WriteMessageEvent(String eventMessage, Byte eventLevel, Int64 eventKeywords)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Fakes.ShimEventProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.AllInstances.Close">
            <summary>Sets the shim of EventProvider.Close()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.AllInstances.Dispose">
            <summary>Sets the shim of EventProvider.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EventProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.AllInstances.IsEnabled">
            <summary>Sets the shim of EventProvider.IsEnabled()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.AllInstances.IsEnabledByteInt64">
            <summary>Sets the shim of EventProvider.IsEnabled(Byte level, Int64 keywords)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.AllInstances.WriteMessageEventString">
            <summary>Sets the shim of EventProvider.WriteMessageEvent(String eventMessage)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProvider.AllInstances.WriteMessageEventStringByteInt64">
            <summary>Sets the shim of EventProvider.WriteMessageEvent(String eventMessage, Byte eventLevel, Int64 eventKeywords)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener">
            <summary>Shim type of System.Diagnostics.Eventing.EventProviderTraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.#ctor(System.Diagnostics.Eventing.EventProviderTraceListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.Close">
            <summary>Sets the shim of EventProviderTraceListener.Close()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.ConstructorString">
            <summary>Sets the shim of EventProviderTraceListener.EventProviderTraceListener(String providerId)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.ConstructorStringString">
            <summary>Sets the shim of EventProviderTraceListener.EventProviderTraceListener(String providerId, String name)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.ConstructorStringStringString">
            <summary>Sets the shim of EventProviderTraceListener.EventProviderTraceListener(String providerId, String name, String delimiter)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.DelimiterGet">
            <summary>Sets the shim of EventProviderTraceListener.get_Delimiter()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.DelimiterSetString">
            <summary>Sets the shim of EventProviderTraceListener.set_Delimiter(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.FailStringString">
            <summary>Sets the shim of EventProviderTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.Flush">
            <summary>Sets the shim of EventProviderTraceListener.Flush()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.GetSupportedAttributes">
            <summary>Sets the shim of EventProviderTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.IsThreadSafeGet">
            <summary>Sets the shim of EventProviderTraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Sets the shim of EventProviderTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Sets the shim of EventProviderTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>Sets the shim of EventProviderTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Sets the shim of EventProviderTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Sets the shim of EventProviderTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Sets the shim of EventProviderTraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.WriteLineString">
            <summary>Sets the shim of EventProviderTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.WriteString">
            <summary>Sets the shim of EventProviderTraceListener.Write(String message)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.Close">
            <summary>Sets the shim of EventProviderTraceListener.Close()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.DelimiterGet">
            <summary>Sets the shim of EventProviderTraceListener.get_Delimiter()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.DelimiterSetString">
            <summary>Sets the shim of EventProviderTraceListener.set_Delimiter(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.FailStringString">
            <summary>Sets the shim of EventProviderTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.Flush">
            <summary>Sets the shim of EventProviderTraceListener.Flush()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.GetSupportedAttributes">
            <summary>Sets the shim of EventProviderTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.IsThreadSafeGet">
            <summary>Sets the shim of EventProviderTraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Sets the shim of EventProviderTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Sets the shim of EventProviderTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>Sets the shim of EventProviderTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Sets the shim of EventProviderTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Sets the shim of EventProviderTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Sets the shim of EventProviderTraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.WriteLineString">
            <summary>Sets the shim of EventProviderTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.ShimEventProviderTraceListener.AllInstances.WriteString">
            <summary>Sets the shim of EventProviderTraceListener.Write(String message)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Fakes.StubEventProvider">
            <summary>Stub type of System.Diagnostics.Eventing.EventProvider</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProvider.#ctor(System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProvider.Close">
            <summary>Sets the stub of EventProvider.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProvider.Close01">
            <summary>Sets the stub of EventProvider.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProvider.Dispose(System.Boolean)">
            <summary>Sets the stub of EventProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProvider.DisposeBoolean">
            <summary>Sets the stub of EventProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProvider.InitializeStub">
            <summary>Initializes a new instance of type StubEventProvider</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.StubEventProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.StubEventProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.StubEventProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener">
            <summary>Stub type of System.Diagnostics.Eventing.EventProviderTraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubEventProviderTraceListener.Name as a property with a backing field.</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.Close">
            <summary>Sets the stub of EventProviderTraceListener.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.Close01">
            <summary>Sets the stub of EventProviderTraceListener.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.Dispose(System.Boolean)">
            <summary>Sets the stub of TraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.DisposeBoolean">
            <summary>Sets the stub of TraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.Fail(System.String)">
            <summary>Sets the stub of TraceListener.Fail(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.Fail(System.String,System.String)">
            <summary>Sets the stub of EventProviderTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.FailString">
            <summary>Sets the stub of TraceListener.Fail(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.FailStringString">
            <summary>Sets the stub of EventProviderTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.GetSupportedAttributes">
            <summary>Sets the stub of EventProviderTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.GetSupportedAttributes01">
            <summary>Sets the stub of EventProviderTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.InitializeStub">
            <summary>Initializes a new instance of type StubEventProviderTraceListener</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.NameGet">
            <summary>Sets the stub of TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.NameSetString">
            <summary>Sets the stub of TraceListener.set_Name(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.Write(System.Object)">
            <summary>Sets the stub of TraceListener.Write(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.Write(System.Object,System.String)">
            <summary>Sets the stub of TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.Write(System.String,System.String)">
            <summary>Sets the stub of TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteIndent">
            <summary>Sets the stub of TraceListener.WriteIndent()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteIndent01">
            <summary>Sets the stub of TraceListener.WriteIndent()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteLine(System.Object)">
            <summary>Sets the stub of TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteLine(System.Object,System.String)">
            <summary>Sets the stub of TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteLine(System.String,System.String)">
            <summary>Sets the stub of TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteLineObject">
            <summary>Sets the stub of TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteLineObjectString">
            <summary>Sets the stub of TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteLineStringString">
            <summary>Sets the stub of TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteObject">
            <summary>Sets the stub of TraceListener.Write(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteObjectString">
            <summary>Sets the stub of TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.WriteStringString">
            <summary>Sets the stub of TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Fakes.StubEventProviderTraceListener.Name">
            <summary>Sets the stub of TraceListener.get_Name()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventBookmark</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.#ctor(System.Diagnostics.Eventing.Reader.EventBookmark)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EventBookmark.EventBookmark(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of EventBookmark.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of EventBookmark.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of EventBookmark.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventBookmark.AllInstances.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of EventBookmark.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventKeyword</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.#ctor(System.Diagnostics.Eventing.Reader.EventKeyword)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.Constructor">
            <summary>Sets the shim of EventKeyword.EventKeyword()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.DisplayNameGet">
            <summary>Sets the shim of EventKeyword.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.NameGet">
            <summary>Sets the shim of EventKeyword.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.ValueGet">
            <summary>Sets the shim of EventKeyword.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.AllInstances.Constructor">
            <summary>Sets the shim of EventKeyword.EventKeyword()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.AllInstances.DisplayNameGet">
            <summary>Sets the shim of EventKeyword.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.AllInstances.NameGet">
            <summary>Sets the shim of EventKeyword.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventKeyword.AllInstances.ValueGet">
            <summary>Sets the shim of EventKeyword.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLevel</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.#ctor(System.Diagnostics.Eventing.Reader.EventLevel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.Constructor">
            <summary>Sets the shim of EventLevel.EventLevel()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.DisplayNameGet">
            <summary>Sets the shim of EventLevel.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.NameGet">
            <summary>Sets the shim of EventLevel.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.ValueGet">
            <summary>Sets the shim of EventLevel.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.AllInstances.Constructor">
            <summary>Sets the shim of EventLevel.EventLevel()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.AllInstances.DisplayNameGet">
            <summary>Sets the shim of EventLevel.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.AllInstances.NameGet">
            <summary>Sets the shim of EventLevel.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLevel.AllInstances.ValueGet">
            <summary>Sets the shim of EventLevel.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogConfiguration</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.#ctor(System.Diagnostics.Eventing.Reader.EventLogConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ConstructorString">
            <summary>Sets the shim of EventLogConfiguration.EventLogConfiguration(String logName)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ConstructorStringEventLogSession">
            <summary>Sets the shim of EventLogConfiguration.EventLogConfiguration(String logName, EventLogSession session)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.Dispose">
            <summary>Sets the shim of EventLogConfiguration.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.DisposeBoolean">
            <summary>Sets the shim of EventLogConfiguration.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.IsClassicLogGet">
            <summary>Sets the shim of EventLogConfiguration.get_IsClassicLog()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.IsEnabledGet">
            <summary>Sets the shim of EventLogConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.IsEnabledSetBoolean">
            <summary>Sets the shim of EventLogConfiguration.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.LogFilePathGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogFilePath()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.LogFilePathSetString">
            <summary>Sets the shim of EventLogConfiguration.set_LogFilePath(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.LogIsolationGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogIsolation()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.LogModeGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogMode()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.LogModeSetEventLogMode">
            <summary>Sets the shim of EventLogConfiguration.set_LogMode(EventLogMode value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.LogNameGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.LogTypeGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogType()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.MaximumSizeInBytesGet">
            <summary>Sets the shim of EventLogConfiguration.get_MaximumSizeInBytes()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.MaximumSizeInBytesSetInt64">
            <summary>Sets the shim of EventLogConfiguration.set_MaximumSizeInBytes(Int64 value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.OwningProviderNameGet">
            <summary>Sets the shim of EventLogConfiguration.get_OwningProviderName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderBufferSizeGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderBufferSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderControlGuidGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderControlGuid()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderKeywordsGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderKeywords()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderKeywordsSetNullableOfInt64">
            <summary>Sets the shim of EventLogConfiguration.set_ProviderKeywords(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderLatencyGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderLatency()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderLevelGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderLevel()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderLevelSetNullableOfInt32">
            <summary>Sets the shim of EventLogConfiguration.set_ProviderLevel(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderMaximumNumberOfBuffersGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderMaximumNumberOfBuffers()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderMinimumNumberOfBuffersGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderMinimumNumberOfBuffers()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.ProviderNamesGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderNames()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.SaveChanges">
            <summary>Sets the shim of EventLogConfiguration.SaveChanges()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.SecurityDescriptorGet">
            <summary>Sets the shim of EventLogConfiguration.get_SecurityDescriptor()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.SecurityDescriptorSetString">
            <summary>Sets the shim of EventLogConfiguration.set_SecurityDescriptor(String value)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.Dispose">
            <summary>Sets the shim of EventLogConfiguration.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EventLogConfiguration.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.IsClassicLogGet">
            <summary>Sets the shim of EventLogConfiguration.get_IsClassicLog()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.IsEnabledGet">
            <summary>Sets the shim of EventLogConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.IsEnabledSetBoolean">
            <summary>Sets the shim of EventLogConfiguration.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.LogFilePathGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogFilePath()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.LogFilePathSetString">
            <summary>Sets the shim of EventLogConfiguration.set_LogFilePath(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.LogIsolationGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogIsolation()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.LogModeGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogMode()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.LogModeSetEventLogMode">
            <summary>Sets the shim of EventLogConfiguration.set_LogMode(EventLogMode value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.LogNameGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.LogTypeGet">
            <summary>Sets the shim of EventLogConfiguration.get_LogType()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.MaximumSizeInBytesGet">
            <summary>Sets the shim of EventLogConfiguration.get_MaximumSizeInBytes()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.MaximumSizeInBytesSetInt64">
            <summary>Sets the shim of EventLogConfiguration.set_MaximumSizeInBytes(Int64 value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.OwningProviderNameGet">
            <summary>Sets the shim of EventLogConfiguration.get_OwningProviderName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderBufferSizeGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderBufferSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderControlGuidGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderControlGuid()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderKeywordsGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderKeywords()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderKeywordsSetNullableOfInt64">
            <summary>Sets the shim of EventLogConfiguration.set_ProviderKeywords(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderLatencyGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderLatency()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderLevelGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderLevel()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderLevelSetNullableOfInt32">
            <summary>Sets the shim of EventLogConfiguration.set_ProviderLevel(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderMaximumNumberOfBuffersGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderMaximumNumberOfBuffers()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderMinimumNumberOfBuffersGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderMinimumNumberOfBuffers()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.ProviderNamesGet">
            <summary>Sets the shim of EventLogConfiguration.get_ProviderNames()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.SaveChanges">
            <summary>Sets the shim of EventLogConfiguration.SaveChanges()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.SecurityDescriptorGet">
            <summary>Sets the shim of EventLogConfiguration.get_SecurityDescriptor()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogConfiguration.AllInstances.SecurityDescriptorSetString">
            <summary>Sets the shim of EventLogConfiguration.set_SecurityDescriptor(String value)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.#ctor(System.Diagnostics.Eventing.Reader.EventLogException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.Constructor">
            <summary>Sets the shim of EventLogException.EventLogException()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.ConstructorInt32">
            <summary>Sets the shim of EventLogException.EventLogException(Int32 errorCode)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EventLogException.EventLogException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.ConstructorString">
            <summary>Sets the shim of EventLogException.EventLogException(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.ConstructorStringException">
            <summary>Sets the shim of EventLogException.EventLogException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.MessageGet">
            <summary>Sets the shim of EventLogException.get_Message()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogException.AllInstances.MessageGet">
            <summary>Sets the shim of EventLogException.get_Message()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogInformation</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.#ctor(System.Diagnostics.Eventing.Reader.EventLogInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AttributesGet">
            <summary>Sets the shim of EventLogInformation.get_Attributes()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.Constructor">
            <summary>Sets the shim of EventLogInformation.EventLogInformation()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.CreationTimeGet">
            <summary>Sets the shim of EventLogInformation.get_CreationTime()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.FileSizeGet">
            <summary>Sets the shim of EventLogInformation.get_FileSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.IsLogFullGet">
            <summary>Sets the shim of EventLogInformation.get_IsLogFull()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.LastAccessTimeGet">
            <summary>Sets the shim of EventLogInformation.get_LastAccessTime()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.LastWriteTimeGet">
            <summary>Sets the shim of EventLogInformation.get_LastWriteTime()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.OldestRecordNumberGet">
            <summary>Sets the shim of EventLogInformation.get_OldestRecordNumber()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.RecordCountGet">
            <summary>Sets the shim of EventLogInformation.get_RecordCount()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances.AttributesGet">
            <summary>Sets the shim of EventLogInformation.get_Attributes()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances.Constructor">
            <summary>Sets the shim of EventLogInformation.EventLogInformation()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances.CreationTimeGet">
            <summary>Sets the shim of EventLogInformation.get_CreationTime()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances.FileSizeGet">
            <summary>Sets the shim of EventLogInformation.get_FileSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances.IsLogFullGet">
            <summary>Sets the shim of EventLogInformation.get_IsLogFull()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances.LastAccessTimeGet">
            <summary>Sets the shim of EventLogInformation.get_LastAccessTime()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances.LastWriteTimeGet">
            <summary>Sets the shim of EventLogInformation.get_LastWriteTime()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances.OldestRecordNumberGet">
            <summary>Sets the shim of EventLogInformation.get_OldestRecordNumber()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInformation.AllInstances.RecordCountGet">
            <summary>Sets the shim of EventLogInformation.get_RecordCount()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogInvalidDataException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.#ctor(System.Diagnostics.Eventing.Reader.EventLogInvalidDataException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.Constructor">
            <summary>Sets the shim of EventLogInvalidDataException.EventLogInvalidDataException()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EventLogInvalidDataException.EventLogInvalidDataException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.ConstructorString">
            <summary>Sets the shim of EventLogInvalidDataException.EventLogInvalidDataException(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.ConstructorStringException">
            <summary>Sets the shim of EventLogInvalidDataException.EventLogInvalidDataException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogInvalidDataException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogLink</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.#ctor(System.Diagnostics.Eventing.Reader.EventLogLink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.Constructor">
            <summary>Sets the shim of EventLogLink.EventLogLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.DisplayNameGet">
            <summary>Sets the shim of EventLogLink.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.IsImportedGet">
            <summary>Sets the shim of EventLogLink.get_IsImported()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.LogNameGet">
            <summary>Sets the shim of EventLogLink.get_LogName()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.AllInstances.Constructor">
            <summary>Sets the shim of EventLogLink.EventLogLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.AllInstances.DisplayNameGet">
            <summary>Sets the shim of EventLogLink.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.AllInstances.IsImportedGet">
            <summary>Sets the shim of EventLogLink.get_IsImported()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogLink.AllInstances.LogNameGet">
            <summary>Sets the shim of EventLogLink.get_LogName()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogNotFoundException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.#ctor(System.Diagnostics.Eventing.Reader.EventLogNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.Constructor">
            <summary>Sets the shim of EventLogNotFoundException.EventLogNotFoundException()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EventLogNotFoundException.EventLogNotFoundException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.ConstructorString">
            <summary>Sets the shim of EventLogNotFoundException.EventLogNotFoundException(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.ConstructorStringException">
            <summary>Sets the shim of EventLogNotFoundException.EventLogNotFoundException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogPropertySelector</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.#ctor(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.ConstructorIEnumerableOfString">
            <summary>Sets the shim of EventLogPropertySelector.EventLogPropertySelector(IEnumerable`1&lt;String&gt; propertyQueries)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.Dispose">
            <summary>Sets the shim of EventLogPropertySelector.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.DisposeBoolean">
            <summary>Sets the shim of EventLogPropertySelector.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.AllInstances.Dispose">
            <summary>Sets the shim of EventLogPropertySelector.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogPropertySelector.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EventLogPropertySelector.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.#ctor(System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.Constructor">
            <summary>Sets the shim of EventLogProviderDisabledException.EventLogProviderDisabledException()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EventLogProviderDisabledException.EventLogProviderDisabledException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.ConstructorString">
            <summary>Sets the shim of EventLogProviderDisabledException.EventLogProviderDisabledException(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.ConstructorStringException">
            <summary>Sets the shim of EventLogProviderDisabledException.EventLogProviderDisabledException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogProviderDisabledException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogQuery</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.ConstructorStringPathType">
            <summary>Sets the shim of EventLogQuery.EventLogQuery(String path, PathType pathType)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.ConstructorStringPathTypeString">
            <summary>Sets the shim of EventLogQuery.EventLogQuery(String path, PathType pathType, String query)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.ReverseDirectionGet">
            <summary>Sets the shim of EventLogQuery.get_ReverseDirection()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.ReverseDirectionSetBoolean">
            <summary>Sets the shim of EventLogQuery.set_ReverseDirection(Boolean value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.SessionGet">
            <summary>Sets the shim of EventLogQuery.get_Session()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.SessionSetEventLogSession">
            <summary>Sets the shim of EventLogQuery.set_Session(EventLogSession value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.TolerateQueryErrorsGet">
            <summary>Sets the shim of EventLogQuery.get_TolerateQueryErrors()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.TolerateQueryErrorsSetBoolean">
            <summary>Sets the shim of EventLogQuery.set_TolerateQueryErrors(Boolean value)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.AllInstances.ReverseDirectionGet">
            <summary>Sets the shim of EventLogQuery.get_ReverseDirection()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.AllInstances.ReverseDirectionSetBoolean">
            <summary>Sets the shim of EventLogQuery.set_ReverseDirection(Boolean value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.AllInstances.SessionGet">
            <summary>Sets the shim of EventLogQuery.get_Session()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.AllInstances.SessionSetEventLogSession">
            <summary>Sets the shim of EventLogQuery.set_Session(EventLogSession value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.AllInstances.TolerateQueryErrorsGet">
            <summary>Sets the shim of EventLogQuery.get_TolerateQueryErrors()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogQuery.AllInstances.TolerateQueryErrorsSetBoolean">
            <summary>Sets the shim of EventLogQuery.set_TolerateQueryErrors(Boolean value)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogReader</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.BatchSizeGet">
            <summary>Sets the shim of EventLogReader.get_BatchSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.BatchSizeSetInt32">
            <summary>Sets the shim of EventLogReader.set_BatchSize(Int32 value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.CancelReading">
            <summary>Sets the shim of EventLogReader.CancelReading()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.ConstructorEventLogQuery">
            <summary>Sets the shim of EventLogReader.EventLogReader(EventLogQuery eventQuery)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.ConstructorEventLogQueryEventBookmark">
            <summary>Sets the shim of EventLogReader.EventLogReader(EventLogQuery eventQuery, EventBookmark bookmark)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.ConstructorString">
            <summary>Sets the shim of EventLogReader.EventLogReader(String path)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.ConstructorStringPathType">
            <summary>Sets the shim of EventLogReader.EventLogReader(String path, PathType pathType)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.Dispose">
            <summary>Sets the shim of EventLogReader.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.DisposeBoolean">
            <summary>Sets the shim of EventLogReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.LogStatusGet">
            <summary>Sets the shim of EventLogReader.get_LogStatus()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.ReadEvent">
            <summary>Sets the shim of EventLogReader.ReadEvent()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.ReadEventTimeSpan">
            <summary>Sets the shim of EventLogReader.ReadEvent(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.SeekEventBookmark">
            <summary>Sets the shim of EventLogReader.Seek(EventBookmark bookmark)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.SeekEventBookmarkInt64">
            <summary>Sets the shim of EventLogReader.Seek(EventBookmark bookmark, Int64 offset)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.SeekSeekOriginInt64">
            <summary>Sets the shim of EventLogReader.Seek(SeekOrigin origin, Int64 offset)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.BatchSizeGet">
            <summary>Sets the shim of EventLogReader.get_BatchSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.BatchSizeSetInt32">
            <summary>Sets the shim of EventLogReader.set_BatchSize(Int32 value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.CancelReading">
            <summary>Sets the shim of EventLogReader.CancelReading()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.Dispose">
            <summary>Sets the shim of EventLogReader.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EventLogReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.LogStatusGet">
            <summary>Sets the shim of EventLogReader.get_LogStatus()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.ReadEvent">
            <summary>Sets the shim of EventLogReader.ReadEvent()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.ReadEventTimeSpan">
            <summary>Sets the shim of EventLogReader.ReadEvent(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.SeekEventBookmark">
            <summary>Sets the shim of EventLogReader.Seek(EventBookmark bookmark)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.SeekEventBookmarkInt64">
            <summary>Sets the shim of EventLogReader.Seek(EventBookmark bookmark, Int64 offset)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReader.AllInstances.SeekSeekOriginInt64">
            <summary>Sets the shim of EventLogReader.Seek(SeekOrigin origin, Int64 offset)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogReadingException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.#ctor(System.Diagnostics.Eventing.Reader.EventLogReadingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.Constructor">
            <summary>Sets the shim of EventLogReadingException.EventLogReadingException()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EventLogReadingException.EventLogReadingException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.ConstructorString">
            <summary>Sets the shim of EventLogReadingException.EventLogReadingException(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.ConstructorStringException">
            <summary>Sets the shim of EventLogReadingException.EventLogReadingException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogReadingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogRecord</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.#ctor(System.Diagnostics.Eventing.Reader.EventLogRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.ActivityIdGet">
            <summary>Sets the shim of EventLogRecord.get_ActivityId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.BookmarkGet">
            <summary>Sets the shim of EventLogRecord.get_Bookmark()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.Constructor">
            <summary>Sets the shim of EventLogRecord.EventLogRecord()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.ContainerLogGet">
            <summary>Sets the shim of EventLogRecord.get_ContainerLog()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.DisposeBoolean">
            <summary>Sets the shim of EventLogRecord.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.FormatDescription">
            <summary>Sets the shim of EventLogRecord.FormatDescription()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.FormatDescriptionIEnumerableOfObject">
            <summary>Sets the shim of EventLogRecord.FormatDescription(IEnumerable`1&lt;Object&gt; values)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.GetPropertyValuesEventLogPropertySelector">
            <summary>Sets the shim of EventLogRecord.GetPropertyValues(EventLogPropertySelector propertySelector)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.IdGet">
            <summary>Sets the shim of EventLogRecord.get_Id()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.KeywordsDisplayNamesGet">
            <summary>Sets the shim of EventLogRecord.get_KeywordsDisplayNames()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.KeywordsGet">
            <summary>Sets the shim of EventLogRecord.get_Keywords()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.LevelDisplayNameGet">
            <summary>Sets the shim of EventLogRecord.get_LevelDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.LevelGet">
            <summary>Sets the shim of EventLogRecord.get_Level()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.LogNameGet">
            <summary>Sets the shim of EventLogRecord.get_LogName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.MachineNameGet">
            <summary>Sets the shim of EventLogRecord.get_MachineName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.MatchedQueryIdsGet">
            <summary>Sets the shim of EventLogRecord.get_MatchedQueryIds()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.OpcodeDisplayNameGet">
            <summary>Sets the shim of EventLogRecord.get_OpcodeDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.OpcodeGet">
            <summary>Sets the shim of EventLogRecord.get_Opcode()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.ProcessIdGet">
            <summary>Sets the shim of EventLogRecord.get_ProcessId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.PropertiesGet">
            <summary>Sets the shim of EventLogRecord.get_Properties()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.ProviderIdGet">
            <summary>Sets the shim of EventLogRecord.get_ProviderId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.ProviderNameGet">
            <summary>Sets the shim of EventLogRecord.get_ProviderName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.QualifiersGet">
            <summary>Sets the shim of EventLogRecord.get_Qualifiers()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.RecordIdGet">
            <summary>Sets the shim of EventLogRecord.get_RecordId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.RelatedActivityIdGet">
            <summary>Sets the shim of EventLogRecord.get_RelatedActivityId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.TaskDisplayNameGet">
            <summary>Sets the shim of EventLogRecord.get_TaskDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.TaskGet">
            <summary>Sets the shim of EventLogRecord.get_Task()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.ThreadIdGet">
            <summary>Sets the shim of EventLogRecord.get_ThreadId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.TimeCreatedGet">
            <summary>Sets the shim of EventLogRecord.get_TimeCreated()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.ToXml">
            <summary>Sets the shim of EventLogRecord.ToXml()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.UserIdGet">
            <summary>Sets the shim of EventLogRecord.get_UserId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.VersionGet">
            <summary>Sets the shim of EventLogRecord.get_Version()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.ActivityIdGet">
            <summary>Sets the shim of EventLogRecord.get_ActivityId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.BookmarkGet">
            <summary>Sets the shim of EventLogRecord.get_Bookmark()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.Constructor">
            <summary>Sets the shim of EventLogRecord.EventLogRecord()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.ContainerLogGet">
            <summary>Sets the shim of EventLogRecord.get_ContainerLog()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EventLogRecord.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.FormatDescription">
            <summary>Sets the shim of EventLogRecord.FormatDescription()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.FormatDescriptionIEnumerableOfObject">
            <summary>Sets the shim of EventLogRecord.FormatDescription(IEnumerable`1&lt;Object&gt; values)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.GetPropertyValuesEventLogPropertySelector">
            <summary>Sets the shim of EventLogRecord.GetPropertyValues(EventLogPropertySelector propertySelector)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.IdGet">
            <summary>Sets the shim of EventLogRecord.get_Id()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.KeywordsDisplayNamesGet">
            <summary>Sets the shim of EventLogRecord.get_KeywordsDisplayNames()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.KeywordsGet">
            <summary>Sets the shim of EventLogRecord.get_Keywords()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.LevelDisplayNameGet">
            <summary>Sets the shim of EventLogRecord.get_LevelDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.LevelGet">
            <summary>Sets the shim of EventLogRecord.get_Level()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.LogNameGet">
            <summary>Sets the shim of EventLogRecord.get_LogName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.MachineNameGet">
            <summary>Sets the shim of EventLogRecord.get_MachineName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.MatchedQueryIdsGet">
            <summary>Sets the shim of EventLogRecord.get_MatchedQueryIds()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.OpcodeDisplayNameGet">
            <summary>Sets the shim of EventLogRecord.get_OpcodeDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.OpcodeGet">
            <summary>Sets the shim of EventLogRecord.get_Opcode()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.ProcessIdGet">
            <summary>Sets the shim of EventLogRecord.get_ProcessId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.PropertiesGet">
            <summary>Sets the shim of EventLogRecord.get_Properties()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.ProviderIdGet">
            <summary>Sets the shim of EventLogRecord.get_ProviderId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.ProviderNameGet">
            <summary>Sets the shim of EventLogRecord.get_ProviderName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.QualifiersGet">
            <summary>Sets the shim of EventLogRecord.get_Qualifiers()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.RecordIdGet">
            <summary>Sets the shim of EventLogRecord.get_RecordId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.RelatedActivityIdGet">
            <summary>Sets the shim of EventLogRecord.get_RelatedActivityId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.TaskDisplayNameGet">
            <summary>Sets the shim of EventLogRecord.get_TaskDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.TaskGet">
            <summary>Sets the shim of EventLogRecord.get_Task()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.ThreadIdGet">
            <summary>Sets the shim of EventLogRecord.get_ThreadId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.TimeCreatedGet">
            <summary>Sets the shim of EventLogRecord.get_TimeCreated()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.ToXml">
            <summary>Sets the shim of EventLogRecord.ToXml()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.UserIdGet">
            <summary>Sets the shim of EventLogRecord.get_UserId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogRecord.AllInstances.VersionGet">
            <summary>Sets the shim of EventLogRecord.get_Version()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogSession</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.#ctor(System.Diagnostics.Eventing.Reader.EventLogSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.CancelCurrentOperations">
            <summary>Sets the shim of EventLogSession.CancelCurrentOperations()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.ClearLogString">
            <summary>Sets the shim of EventLogSession.ClearLog(String logName)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.ClearLogStringString">
            <summary>Sets the shim of EventLogSession.ClearLog(String logName, String backupPath)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.Constructor">
            <summary>Sets the shim of EventLogSession.EventLogSession()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.ConstructorString">
            <summary>Sets the shim of EventLogSession.EventLogSession(String server)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.ConstructorStringStringStringSecureStringSessionAuthentication">
            <summary>Sets the shim of EventLogSession.EventLogSession(String server, String domain, String user, SecureString password, SessionAuthentication logOnType)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.Dispose">
            <summary>Sets the shim of EventLogSession.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.DisposeBoolean">
            <summary>Sets the shim of EventLogSession.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.ExportLogAndMessagesStringPathTypeStringString">
            <summary>Sets the shim of EventLogSession.ExportLogAndMessages(String path, PathType pathType, String query, String targetFilePath)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.ExportLogAndMessagesStringPathTypeStringStringBooleanCultureInfo">
            <summary>Sets the shim of EventLogSession.ExportLogAndMessages(String path, PathType pathType, String query, String targetFilePath, Boolean tolerateQueryErrors, CultureInfo targetCultureInfo)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.ExportLogStringPathTypeStringString">
            <summary>Sets the shim of EventLogSession.ExportLog(String path, PathType pathType, String query, String targetFilePath)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.ExportLogStringPathTypeStringStringBoolean">
            <summary>Sets the shim of EventLogSession.ExportLog(String path, PathType pathType, String query, String targetFilePath, Boolean tolerateQueryErrors)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.GetLogInformationStringPathType">
            <summary>Sets the shim of EventLogSession.GetLogInformation(String logName, PathType pathType)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.GetLogNames">
            <summary>Sets the shim of EventLogSession.GetLogNames()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.GetProviderNames">
            <summary>Sets the shim of EventLogSession.GetProviderNames()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.GlobalSessionGet">
            <summary>Sets the shim of EventLogSession.get_GlobalSession()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.StaticConstructor">
            <summary>Sets the shim of EventLogSession.EventLogSession()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.CancelCurrentOperations">
            <summary>Sets the shim of EventLogSession.CancelCurrentOperations()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.ClearLogString">
            <summary>Sets the shim of EventLogSession.ClearLog(String logName)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.ClearLogStringString">
            <summary>Sets the shim of EventLogSession.ClearLog(String logName, String backupPath)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.Dispose">
            <summary>Sets the shim of EventLogSession.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EventLogSession.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.ExportLogAndMessagesStringPathTypeStringString">
            <summary>Sets the shim of EventLogSession.ExportLogAndMessages(String path, PathType pathType, String query, String targetFilePath)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.ExportLogAndMessagesStringPathTypeStringStringBooleanCultureInfo">
            <summary>Sets the shim of EventLogSession.ExportLogAndMessages(String path, PathType pathType, String query, String targetFilePath, Boolean tolerateQueryErrors, CultureInfo targetCultureInfo)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.ExportLogStringPathTypeStringString">
            <summary>Sets the shim of EventLogSession.ExportLog(String path, PathType pathType, String query, String targetFilePath)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.ExportLogStringPathTypeStringStringBoolean">
            <summary>Sets the shim of EventLogSession.ExportLog(String path, PathType pathType, String query, String targetFilePath, Boolean tolerateQueryErrors)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.GetLogInformationStringPathType">
            <summary>Sets the shim of EventLogSession.GetLogInformation(String logName, PathType pathType)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.GetLogNames">
            <summary>Sets the shim of EventLogSession.GetLogNames()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogSession.AllInstances.GetProviderNames">
            <summary>Sets the shim of EventLogSession.GetProviderNames()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogStatus</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.#ctor(System.Diagnostics.Eventing.Reader.EventLogStatus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.Constructor">
            <summary>Sets the shim of EventLogStatus.EventLogStatus()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.LogNameGet">
            <summary>Sets the shim of EventLogStatus.get_LogName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.StatusCodeGet">
            <summary>Sets the shim of EventLogStatus.get_StatusCode()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.AllInstances.Constructor">
            <summary>Sets the shim of EventLogStatus.EventLogStatus()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.AllInstances.LogNameGet">
            <summary>Sets the shim of EventLogStatus.get_LogName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogStatus.AllInstances.StatusCodeGet">
            <summary>Sets the shim of EventLogStatus.get_StatusCode()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventLogWatcher</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogWatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.ConstructorEventLogQuery">
            <summary>Sets the shim of EventLogWatcher.EventLogWatcher(EventLogQuery eventQuery)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.ConstructorEventLogQueryEventBookmark">
            <summary>Sets the shim of EventLogWatcher.EventLogWatcher(EventLogQuery eventQuery, EventBookmark bookmark)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.ConstructorEventLogQueryEventBookmarkBoolean">
            <summary>Sets the shim of EventLogWatcher.EventLogWatcher(EventLogQuery eventQuery, EventBookmark bookmark, Boolean readExistingEvents)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.ConstructorString">
            <summary>Sets the shim of EventLogWatcher.EventLogWatcher(String path)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.Dispose">
            <summary>Sets the shim of EventLogWatcher.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.DisposeBoolean">
            <summary>Sets the shim of EventLogWatcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.EnabledGet">
            <summary>Sets the shim of EventLogWatcher.get_Enabled()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.EnabledSetBoolean">
            <summary>Sets the shim of EventLogWatcher.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.EventRecordWrittenAddEventHandlerOfEventRecordWrittenEventArgs">
            <summary>Sets the shim of EventLogWatcher.add_EventRecordWritten(EventHandler`1&lt;EventRecordWrittenEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.EventRecordWrittenRemoveEventHandlerOfEventRecordWrittenEventArgs">
            <summary>Sets the shim of EventLogWatcher.remove_EventRecordWritten(EventHandler`1&lt;EventRecordWrittenEventArgs&gt; value)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.AllInstances.Dispose">
            <summary>Sets the shim of EventLogWatcher.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EventLogWatcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.AllInstances.EnabledGet">
            <summary>Sets the shim of EventLogWatcher.get_Enabled()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of EventLogWatcher.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.AllInstances.EventRecordWrittenAddEventHandlerOfEventRecordWrittenEventArgs">
            <summary>Sets the shim of EventLogWatcher.add_EventRecordWritten(EventHandler`1&lt;EventRecordWrittenEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventLogWatcher.AllInstances.EventRecordWrittenRemoveEventHandlerOfEventRecordWrittenEventArgs">
            <summary>Sets the shim of EventLogWatcher.remove_EventRecordWritten(EventHandler`1&lt;EventRecordWrittenEventArgs&gt; value)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventMetadata</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.#ctor(System.Diagnostics.Eventing.Reader.EventMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.Constructor">
            <summary>Sets the shim of EventMetadata.EventMetadata()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.DescriptionGet">
            <summary>Sets the shim of EventMetadata.get_Description()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.IdGet">
            <summary>Sets the shim of EventMetadata.get_Id()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.KeywordsGet">
            <summary>Sets the shim of EventMetadata.get_Keywords()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.LevelGet">
            <summary>Sets the shim of EventMetadata.get_Level()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.LogLinkGet">
            <summary>Sets the shim of EventMetadata.get_LogLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.OpcodeGet">
            <summary>Sets the shim of EventMetadata.get_Opcode()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.TaskGet">
            <summary>Sets the shim of EventMetadata.get_Task()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.TemplateGet">
            <summary>Sets the shim of EventMetadata.get_Template()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.VersionGet">
            <summary>Sets the shim of EventMetadata.get_Version()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.Constructor">
            <summary>Sets the shim of EventMetadata.EventMetadata()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.DescriptionGet">
            <summary>Sets the shim of EventMetadata.get_Description()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.IdGet">
            <summary>Sets the shim of EventMetadata.get_Id()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.KeywordsGet">
            <summary>Sets the shim of EventMetadata.get_Keywords()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.LevelGet">
            <summary>Sets the shim of EventMetadata.get_Level()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.LogLinkGet">
            <summary>Sets the shim of EventMetadata.get_LogLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.OpcodeGet">
            <summary>Sets the shim of EventMetadata.get_Opcode()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.TaskGet">
            <summary>Sets the shim of EventMetadata.get_Task()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.TemplateGet">
            <summary>Sets the shim of EventMetadata.get_Template()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventMetadata.AllInstances.VersionGet">
            <summary>Sets the shim of EventMetadata.get_Version()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventOpcode</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.#ctor(System.Diagnostics.Eventing.Reader.EventOpcode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.Constructor">
            <summary>Sets the shim of EventOpcode.EventOpcode()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.DisplayNameGet">
            <summary>Sets the shim of EventOpcode.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.NameGet">
            <summary>Sets the shim of EventOpcode.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.ValueGet">
            <summary>Sets the shim of EventOpcode.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.AllInstances.Constructor">
            <summary>Sets the shim of EventOpcode.EventOpcode()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.AllInstances.DisplayNameGet">
            <summary>Sets the shim of EventOpcode.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.AllInstances.NameGet">
            <summary>Sets the shim of EventOpcode.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventOpcode.AllInstances.ValueGet">
            <summary>Sets the shim of EventOpcode.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventProperty</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.#ctor(System.Diagnostics.Eventing.Reader.EventProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.Constructor">
            <summary>Sets the shim of EventProperty.EventProperty()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.ValueGet">
            <summary>Sets the shim of EventProperty.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.AllInstances.Constructor">
            <summary>Sets the shim of EventProperty.EventProperty()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventProperty.AllInstances.ValueGet">
            <summary>Sets the shim of EventProperty.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventRecord</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.#ctor(System.Diagnostics.Eventing.Reader.EventRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.Constructor">
            <summary>Sets the shim of EventRecord.EventRecord()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.Dispose">
            <summary>Sets the shim of EventRecord.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.DisposeBoolean">
            <summary>Sets the shim of EventRecord.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.AllInstances.Dispose">
            <summary>Sets the shim of EventRecord.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecord.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EventRecord.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.#ctor(System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.Constructor">
            <summary>Sets the shim of EventRecordWrittenEventArgs.EventRecordWrittenEventArgs()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.EventExceptionGet">
            <summary>Sets the shim of EventRecordWrittenEventArgs.get_EventException()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.EventRecordGet">
            <summary>Sets the shim of EventRecordWrittenEventArgs.get_EventRecord()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.AllInstances.Constructor">
            <summary>Sets the shim of EventRecordWrittenEventArgs.EventRecordWrittenEventArgs()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.AllInstances.EventExceptionGet">
            <summary>Sets the shim of EventRecordWrittenEventArgs.get_EventException()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventRecordWrittenEventArgs.AllInstances.EventRecordGet">
            <summary>Sets the shim of EventRecordWrittenEventArgs.get_EventRecord()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.EventTask</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.#ctor(System.Diagnostics.Eventing.Reader.EventTask)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.Constructor">
            <summary>Sets the shim of EventTask.EventTask()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.DisplayNameGet">
            <summary>Sets the shim of EventTask.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.EventGuidGet">
            <summary>Sets the shim of EventTask.get_EventGuid()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.NameGet">
            <summary>Sets the shim of EventTask.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.ValueGet">
            <summary>Sets the shim of EventTask.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.AllInstances.Constructor">
            <summary>Sets the shim of EventTask.EventTask()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.AllInstances.DisplayNameGet">
            <summary>Sets the shim of EventTask.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.AllInstances.EventGuidGet">
            <summary>Sets the shim of EventTask.get_EventGuid()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.AllInstances.NameGet">
            <summary>Sets the shim of EventTask.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimEventTask.AllInstances.ValueGet">
            <summary>Sets the shim of EventTask.get_Value()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata">
            <summary>Shim type of System.Diagnostics.Eventing.Reader.ProviderMetadata</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.#ctor(System.Diagnostics.Eventing.Reader.ProviderMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.ConstructorString">
            <summary>Sets the shim of ProviderMetadata.ProviderMetadata(String providerName)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.ConstructorStringEventLogSessionCultureInfo">
            <summary>Sets the shim of ProviderMetadata.ProviderMetadata(String providerName, EventLogSession session, CultureInfo targetCultureInfo)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.DisplayNameGet">
            <summary>Sets the shim of ProviderMetadata.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.Dispose">
            <summary>Sets the shim of ProviderMetadata.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.DisposeBoolean">
            <summary>Sets the shim of ProviderMetadata.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.EventsGet">
            <summary>Sets the shim of ProviderMetadata.get_Events()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.HelpLinkGet">
            <summary>Sets the shim of ProviderMetadata.get_HelpLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.IdGet">
            <summary>Sets the shim of ProviderMetadata.get_Id()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.KeywordsGet">
            <summary>Sets the shim of ProviderMetadata.get_Keywords()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.LevelsGet">
            <summary>Sets the shim of ProviderMetadata.get_Levels()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.LogLinksGet">
            <summary>Sets the shim of ProviderMetadata.get_LogLinks()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.MessageFilePathGet">
            <summary>Sets the shim of ProviderMetadata.get_MessageFilePath()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.NameGet">
            <summary>Sets the shim of ProviderMetadata.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.OpcodesGet">
            <summary>Sets the shim of ProviderMetadata.get_Opcodes()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.ParameterFilePathGet">
            <summary>Sets the shim of ProviderMetadata.get_ParameterFilePath()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.ResourceFilePathGet">
            <summary>Sets the shim of ProviderMetadata.get_ResourceFilePath()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.TasksGet">
            <summary>Sets the shim of ProviderMetadata.get_Tasks()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.DisplayNameGet">
            <summary>Sets the shim of ProviderMetadata.get_DisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.Dispose">
            <summary>Sets the shim of ProviderMetadata.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ProviderMetadata.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.EventsGet">
            <summary>Sets the shim of ProviderMetadata.get_Events()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.HelpLinkGet">
            <summary>Sets the shim of ProviderMetadata.get_HelpLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.IdGet">
            <summary>Sets the shim of ProviderMetadata.get_Id()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.KeywordsGet">
            <summary>Sets the shim of ProviderMetadata.get_Keywords()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.LevelsGet">
            <summary>Sets the shim of ProviderMetadata.get_Levels()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.LogLinksGet">
            <summary>Sets the shim of ProviderMetadata.get_LogLinks()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.MessageFilePathGet">
            <summary>Sets the shim of ProviderMetadata.get_MessageFilePath()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.NameGet">
            <summary>Sets the shim of ProviderMetadata.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.OpcodesGet">
            <summary>Sets the shim of ProviderMetadata.get_Opcodes()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.ParameterFilePathGet">
            <summary>Sets the shim of ProviderMetadata.get_ParameterFilePath()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.ResourceFilePathGet">
            <summary>Sets the shim of ProviderMetadata.get_ResourceFilePath()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.ShimProviderMetadata.AllInstances.TasksGet">
            <summary>Sets the shim of ProviderMetadata.get_Tasks()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventBookmark">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventBookmark</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventBookmark.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventBookmark.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of EventBookmark.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventBookmark.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of EventBookmark.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventBookmark.InitializeStub">
            <summary>Initializes a new instance of type StubEventBookmark</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventBookmark.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventBookmark.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventBookmark.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogConfiguration">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogConfiguration</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogConfiguration.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogConfiguration.Dispose(System.Boolean)">
            <summary>Sets the stub of EventLogConfiguration.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogConfiguration.DisposeBoolean">
            <summary>Sets the stub of EventLogConfiguration.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogConfiguration</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEventLogException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEventLogException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogException</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.MessageGet">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.Message">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogInvalidDataException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEventLogInvalidDataException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEventLogInvalidDataException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogInvalidDataException</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.MessageGet">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.Message">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogInvalidDataException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogNotFoundException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEventLogNotFoundException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEventLogNotFoundException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogNotFoundException</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.MessageGet">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.Message">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogNotFoundException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogPropertySelector">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogPropertySelector</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogPropertySelector.Dispose(System.Boolean)">
            <summary>Sets the stub of EventLogPropertySelector.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogPropertySelector.DisposeBoolean">
            <summary>Sets the stub of EventLogPropertySelector.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogPropertySelector.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogPropertySelector</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogPropertySelector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogPropertySelector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogPropertySelector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEventLogProviderDisabledException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEventLogProviderDisabledException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogProviderDisabledException</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.MessageGet">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.Message">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogProviderDisabledException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogQuery">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogQuery</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogQuery.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogQuery</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogQuery.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogQuery.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogQuery.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogReader</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.Dispose(System.Boolean)">
            <summary>Sets the stub of EventLogReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.DisposeBoolean">
            <summary>Sets the stub of EventLogReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogReader</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogReadingException</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEventLogReadingException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEventLogReadingException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of EventLogException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogReadingException</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.MessageGet">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.Message">
            <summary>Sets the stub of EventLogException.get_Message()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogReadingException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogSession</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession.Dispose(System.Boolean)">
            <summary>Sets the stub of EventLogSession.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession.DisposeBoolean">
            <summary>Sets the stub of EventLogSession.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogSession</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventLogWatcher</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.Dispose(System.Boolean)">
            <summary>Sets the stub of EventLogWatcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.DisposeBoolean">
            <summary>Sets the stub of EventLogWatcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.InitializeStub">
            <summary>Initializes a new instance of type StubEventLogWatcher</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventLogWatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.EventRecord</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ActivityIdGet">
            <summary>Sets the stub of EventRecord.get_ActivityId()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.BookmarkGet">
            <summary>Sets the stub of EventRecord.get_Bookmark()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Dispose(System.Boolean)">
            <summary>Sets the stub of EventRecord.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.DisposeBoolean">
            <summary>Sets the stub of EventRecord.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.FormatDescription">
            <summary>Sets the stub of EventRecord.FormatDescription()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Sets the stub of EventRecord.FormatDescription(IEnumerable`1&lt;Object&gt; values)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.FormatDescription01">
            <summary>Sets the stub of EventRecord.FormatDescription()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.FormatDescriptionIEnumerableOfObject">
            <summary>Sets the stub of EventRecord.FormatDescription(IEnumerable`1&lt;Object&gt; values)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.IdGet">
            <summary>Sets the stub of EventRecord.get_Id()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.InitializeStub">
            <summary>Initializes a new instance of type StubEventRecord</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.KeywordsDisplayNamesGet">
            <summary>Sets the stub of EventRecord.get_KeywordsDisplayNames()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.KeywordsGet">
            <summary>Sets the stub of EventRecord.get_Keywords()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.LevelDisplayNameGet">
            <summary>Sets the stub of EventRecord.get_LevelDisplayName()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.LevelGet">
            <summary>Sets the stub of EventRecord.get_Level()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.LogNameGet">
            <summary>Sets the stub of EventRecord.get_LogName()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.MachineNameGet">
            <summary>Sets the stub of EventRecord.get_MachineName()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.OpcodeDisplayNameGet">
            <summary>Sets the stub of EventRecord.get_OpcodeDisplayName()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.OpcodeGet">
            <summary>Sets the stub of EventRecord.get_Opcode()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ProcessIdGet">
            <summary>Sets the stub of EventRecord.get_ProcessId()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.PropertiesGet">
            <summary>Sets the stub of EventRecord.get_Properties()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ProviderIdGet">
            <summary>Sets the stub of EventRecord.get_ProviderId()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ProviderNameGet">
            <summary>Sets the stub of EventRecord.get_ProviderName()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.QualifiersGet">
            <summary>Sets the stub of EventRecord.get_Qualifiers()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.RecordIdGet">
            <summary>Sets the stub of EventRecord.get_RecordId()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.RelatedActivityIdGet">
            <summary>Sets the stub of EventRecord.get_RelatedActivityId()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.TaskDisplayNameGet">
            <summary>Sets the stub of EventRecord.get_TaskDisplayName()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.TaskGet">
            <summary>Sets the stub of EventRecord.get_Task()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ThreadIdGet">
            <summary>Sets the stub of EventRecord.get_ThreadId()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.TimeCreatedGet">
            <summary>Sets the stub of EventRecord.get_TimeCreated()</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ToXml">
            <summary>Sets the stub of EventRecord.ToXml()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ToXml01">
            <summary>Sets the stub of EventRecord.ToXml()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.UserIdGet">
            <summary>Sets the stub of EventRecord.get_UserId()</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.VersionGet">
            <summary>Sets the stub of EventRecord.get_Version()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ActivityId">
            <summary>Sets the stub of EventRecord.get_ActivityId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Bookmark">
            <summary>Sets the stub of EventRecord.get_Bookmark()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Id">
            <summary>Sets the stub of EventRecord.get_Id()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Keywords">
            <summary>Sets the stub of EventRecord.get_Keywords()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.KeywordsDisplayNames">
            <summary>Sets the stub of EventRecord.get_KeywordsDisplayNames()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Level">
            <summary>Sets the stub of EventRecord.get_Level()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.LevelDisplayName">
            <summary>Sets the stub of EventRecord.get_LevelDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.LogName">
            <summary>Sets the stub of EventRecord.get_LogName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.MachineName">
            <summary>Sets the stub of EventRecord.get_MachineName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Opcode">
            <summary>Sets the stub of EventRecord.get_Opcode()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.OpcodeDisplayName">
            <summary>Sets the stub of EventRecord.get_OpcodeDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ProcessId">
            <summary>Sets the stub of EventRecord.get_ProcessId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Properties">
            <summary>Sets the stub of EventRecord.get_Properties()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ProviderId">
            <summary>Sets the stub of EventRecord.get_ProviderId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ProviderName">
            <summary>Sets the stub of EventRecord.get_ProviderName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Qualifiers">
            <summary>Sets the stub of EventRecord.get_Qualifiers()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.RecordId">
            <summary>Sets the stub of EventRecord.get_RecordId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.RelatedActivityId">
            <summary>Sets the stub of EventRecord.get_RelatedActivityId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Task">
            <summary>Sets the stub of EventRecord.get_Task()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.TaskDisplayName">
            <summary>Sets the stub of EventRecord.get_TaskDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.ThreadId">
            <summary>Sets the stub of EventRecord.get_ThreadId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.TimeCreated">
            <summary>Sets the stub of EventRecord.get_TimeCreated()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.UserId">
            <summary>Sets the stub of EventRecord.get_UserId()</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubEventRecord.Version">
            <summary>Sets the stub of EventRecord.get_Version()</summary>
        </member>
        <member name="T:System.Diagnostics.Eventing.Reader.Fakes.StubProviderMetadata">
            <summary>Stub type of System.Diagnostics.Eventing.Reader.ProviderMetadata</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubProviderMetadata.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubProviderMetadata.Dispose(System.Boolean)">
            <summary>Sets the stub of ProviderMetadata.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Eventing.Reader.Fakes.StubProviderMetadata.DisposeBoolean">
            <summary>Sets the stub of ProviderMetadata.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Eventing.Reader.Fakes.StubProviderMetadata.InitializeStub">
            <summary>Initializes a new instance of type StubProviderMetadata</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubProviderMetadata.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubProviderMetadata.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Eventing.Reader.Fakes.StubProviderMetadata.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimEventSchemaTraceListener">
            <summary>Shim type of System.Diagnostics.EventSchemaTraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.#ctor(System.Diagnostics.EventSchemaTraceListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.BufferSizeGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_BufferSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.Close">
            <summary>Sets the shim of EventSchemaTraceListener.Close()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.ConstructorString">
            <summary>Sets the shim of EventSchemaTraceListener.EventSchemaTraceListener(String fileName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.ConstructorStringString">
            <summary>Sets the shim of EventSchemaTraceListener.EventSchemaTraceListener(String fileName, String name)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.ConstructorStringStringInt32">
            <summary>Sets the shim of EventSchemaTraceListener.EventSchemaTraceListener(String fileName, String name, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.ConstructorStringStringInt32TraceLogRetentionOption">
            <summary>Sets the shim of EventSchemaTraceListener.EventSchemaTraceListener(String fileName, String name, Int32 bufferSize, TraceLogRetentionOption logRetentionOption)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.ConstructorStringStringInt32TraceLogRetentionOptionInt64">
            <summary>Sets the shim of EventSchemaTraceListener.EventSchemaTraceListener(String fileName, String name, Int32 bufferSize, TraceLogRetentionOption logRetentionOption, Int64 maximumFileSize)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.ConstructorStringStringInt32TraceLogRetentionOptionInt64Int32">
            <summary>Sets the shim of EventSchemaTraceListener.EventSchemaTraceListener(String fileName, String name, Int32 bufferSize, TraceLogRetentionOption logRetentionOption, Int64 maximumFileSize, Int32 maximumNumberOfFiles)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.EnsureWriter">
            <summary>Sets the shim of EventSchemaTraceListener.EnsureWriter()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.FailStringString">
            <summary>Sets the shim of EventSchemaTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.Flush">
            <summary>Sets the shim of EventSchemaTraceListener.Flush()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.GetSupportedAttributes">
            <summary>Sets the shim of EventSchemaTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.IsThreadSafeGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.MaximumFileSizeGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_MaximumFileSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.MaximumNumberOfFilesGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_MaximumNumberOfFiles()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.StaticConstructor">
            <summary>Sets the shim of EventSchemaTraceListener.EventSchemaTraceListener()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Sets the shim of EventSchemaTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Sets the shim of EventSchemaTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Sets the shim of EventSchemaTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Sets the shim of EventSchemaTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.TraceLogRetentionOptionGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_TraceLogRetentionOption()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Sets the shim of EventSchemaTraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.WriteLineString">
            <summary>Sets the shim of EventSchemaTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.WriteString">
            <summary>Sets the shim of EventSchemaTraceListener.Write(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.WriterGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_Writer()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.WriterSetTextWriter">
            <summary>Sets the shim of EventSchemaTraceListener.set_Writer(TextWriter value)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.BufferSizeGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_BufferSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.Close">
            <summary>Sets the shim of EventSchemaTraceListener.Close()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.EnsureWriter">
            <summary>Sets the shim of EventSchemaTraceListener.EnsureWriter()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.FailStringString">
            <summary>Sets the shim of EventSchemaTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.Flush">
            <summary>Sets the shim of EventSchemaTraceListener.Flush()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.GetSupportedAttributes">
            <summary>Sets the shim of EventSchemaTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.IsThreadSafeGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.MaximumFileSizeGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_MaximumFileSize()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.MaximumNumberOfFilesGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_MaximumNumberOfFiles()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Sets the shim of EventSchemaTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Sets the shim of EventSchemaTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Sets the shim of EventSchemaTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Sets the shim of EventSchemaTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.TraceLogRetentionOptionGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_TraceLogRetentionOption()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Sets the shim of EventSchemaTraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.WriteLineString">
            <summary>Sets the shim of EventSchemaTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.WriteString">
            <summary>Sets the shim of EventSchemaTraceListener.Write(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.WriterGet">
            <summary>Sets the shim of EventSchemaTraceListener.get_Writer()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventSchemaTraceListener.AllInstances.WriterSetTextWriter">
            <summary>Sets the shim of EventSchemaTraceListener.set_Writer(TextWriter value)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData">
            <summary>Shim type of System.Diagnostics.UnescapedXmlDiagnosticData</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.#ctor(System.Diagnostics.UnescapedXmlDiagnosticData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.ConstructorString">
            <summary>Sets the shim of UnescapedXmlDiagnosticData.UnescapedXmlDiagnosticData(String xmlPayload)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.ToString">
            <summary>Sets the shim of UnescapedXmlDiagnosticData.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.UnescapedXmlGet">
            <summary>Sets the shim of UnescapedXmlDiagnosticData.get_UnescapedXml()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.UnescapedXmlSetString">
            <summary>Sets the shim of UnescapedXmlDiagnosticData.set_UnescapedXml(String value)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.AllInstances.ToString01">
            <summary>Sets the shim of UnescapedXmlDiagnosticData.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.AllInstances.UnescapedXmlGet">
            <summary>Sets the shim of UnescapedXmlDiagnosticData.get_UnescapedXml()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimUnescapedXmlDiagnosticData.AllInstances.UnescapedXmlSetString">
            <summary>Sets the shim of UnescapedXmlDiagnosticData.set_UnescapedXml(String value)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubEventSchemaTraceListener">
            <summary>Stub type of System.Diagnostics.EventSchemaTraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubEventSchemaTraceListener.Name as a property with a backing field.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Close">
            <summary>Sets the stub of EventSchemaTraceListener.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Close01">
            <summary>Sets the stub of EventSchemaTraceListener.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Dispose(System.Boolean)">
            <summary>Sets the stub of TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.DisposeBoolean">
            <summary>Sets the stub of TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Fail(System.String)">
            <summary>Sets the stub of TraceListener.Fail(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Fail(System.String,System.String)">
            <summary>Sets the stub of EventSchemaTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.FailString">
            <summary>Sets the stub of TraceListener.Fail(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.FailStringString">
            <summary>Sets the stub of EventSchemaTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Flush">
            <summary>Sets the stub of EventSchemaTraceListener.Flush()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Flush01">
            <summary>Sets the stub of EventSchemaTraceListener.Flush()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.GetSupportedAttributes">
            <summary>Sets the stub of EventSchemaTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.GetSupportedAttributes01">
            <summary>Sets the stub of EventSchemaTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.InitializeStub">
            <summary>Initializes a new instance of type StubEventSchemaTraceListener</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.IsThreadSafeGet">
            <summary>Sets the stub of EventSchemaTraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.NameGet">
            <summary>Sets the stub of TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.NameSetString">
            <summary>Sets the stub of TraceListener.set_Name(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>Sets the stub of EventSchemaTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>Sets the stub of EventSchemaTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Sets the stub of EventSchemaTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Sets the stub of EventSchemaTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>Sets the stub of TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>Sets the stub of EventSchemaTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>Sets the stub of EventSchemaTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>Sets the stub of TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Sets the stub of EventSchemaTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Sets the stub of EventSchemaTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>Sets the stub of EventSchemaTraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Sets the stub of EventSchemaTraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Write(System.Object)">
            <summary>Sets the stub of TraceListener.Write(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Write(System.String)">
            <summary>Sets the stub of EventSchemaTraceListener.Write(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Write(System.Object,System.String)">
            <summary>Sets the stub of TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Write(System.String,System.String)">
            <summary>Sets the stub of TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteIndent">
            <summary>Sets the stub of TraceListener.WriteIndent()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteIndent01">
            <summary>Sets the stub of TraceListener.WriteIndent()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteLine(System.Object)">
            <summary>Sets the stub of TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteLine(System.String)">
            <summary>Sets the stub of EventSchemaTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteLine(System.Object,System.String)">
            <summary>Sets the stub of TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteLine(System.String,System.String)">
            <summary>Sets the stub of TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteLineObject">
            <summary>Sets the stub of TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteLineObjectString">
            <summary>Sets the stub of TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteLineString">
            <summary>Sets the stub of EventSchemaTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteLineStringString">
            <summary>Sets the stub of TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteObject">
            <summary>Sets the stub of TraceListener.Write(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteObjectString">
            <summary>Sets the stub of TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteString">
            <summary>Sets the stub of EventSchemaTraceListener.Write(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventSchemaTraceListener.WriteStringString">
            <summary>Sets the stub of TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventSchemaTraceListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventSchemaTraceListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventSchemaTraceListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventSchemaTraceListener.IsThreadSafe">
            <summary>Sets the stub of EventSchemaTraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventSchemaTraceListener.Name">
            <summary>Sets the stub of TraceListener.get_Name()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubUnescapedXmlDiagnosticData">
            <summary>Stub type of System.Diagnostics.UnescapedXmlDiagnosticData</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubUnescapedXmlDiagnosticData.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubUnescapedXmlDiagnosticData.InitializeStub">
            <summary>Initializes a new instance of type StubUnescapedXmlDiagnosticData</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubUnescapedXmlDiagnosticData.ToString">
            <summary>Sets the stub of UnescapedXmlDiagnosticData.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubUnescapedXmlDiagnosticData.ToString01">
            <summary>Sets the stub of UnescapedXmlDiagnosticData.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubUnescapedXmlDiagnosticData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubUnescapedXmlDiagnosticData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubUnescapedXmlDiagnosticData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceData.Fakes.ShimCounterData">
            <summary>Shim type of System.Diagnostics.PerformanceData.CounterData</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.#ctor(System.Diagnostics.PerformanceData.CounterData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.Constructor">
            <summary>Sets the shim of CounterData.CounterData()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.Decrement">
            <summary>Sets the shim of CounterData.Decrement()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.Increment">
            <summary>Sets the shim of CounterData.Increment()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.IncrementByInt64">
            <summary>Sets the shim of CounterData.IncrementBy(Int64 value)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.RawValueGet">
            <summary>Sets the shim of CounterData.get_RawValue()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.RawValueSetInt64">
            <summary>Sets the shim of CounterData.set_RawValue(Int64 value)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.ValueGet">
            <summary>Sets the shim of CounterData.get_Value()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.ValueSetInt64">
            <summary>Sets the shim of CounterData.set_Value(Int64 value)</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.AllInstances.Constructor">
            <summary>Sets the shim of CounterData.CounterData()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.AllInstances.Decrement">
            <summary>Sets the shim of CounterData.Decrement()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.AllInstances.Increment">
            <summary>Sets the shim of CounterData.Increment()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.AllInstances.IncrementByInt64">
            <summary>Sets the shim of CounterData.IncrementBy(Int64 value)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.AllInstances.RawValueGet">
            <summary>Sets the shim of CounterData.get_RawValue()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.AllInstances.RawValueSetInt64">
            <summary>Sets the shim of CounterData.set_RawValue(Int64 value)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.AllInstances.ValueGet">
            <summary>Sets the shim of CounterData.get_Value()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterData.AllInstances.ValueSetInt64">
            <summary>Sets the shim of CounterData.set_Value(Int64 value)</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet">
            <summary>Shim type of System.Diagnostics.PerformanceData.CounterSet</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.#ctor(System.Diagnostics.PerformanceData.CounterSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.AddCounterInt32CounterType">
            <summary>Sets the shim of CounterSet.AddCounter(Int32 counterId, CounterType counterType)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.AddCounterInt32CounterTypeString">
            <summary>Sets the shim of CounterSet.AddCounter(Int32 counterId, CounterType counterType, String counterName)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.ConstructorGuidGuidCounterSetInstanceType">
            <summary>Sets the shim of CounterSet.CounterSet(Guid providerGuid, Guid counterSetGuid, CounterSetInstanceType instanceType)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.CreateCounterSetInstanceString">
            <summary>Sets the shim of CounterSet.CreateCounterSetInstance(String instanceName)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.Dispose">
            <summary>Sets the shim of CounterSet.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.DisposeBoolean">
            <summary>Sets the shim of CounterSet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.StaticConstructor">
            <summary>Sets the shim of CounterSet.CounterSet()</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.AllInstances.AddCounterInt32CounterType">
            <summary>Sets the shim of CounterSet.AddCounter(Int32 counterId, CounterType counterType)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.AllInstances.AddCounterInt32CounterTypeString">
            <summary>Sets the shim of CounterSet.AddCounter(Int32 counterId, CounterType counterType, String counterName)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.AllInstances.CreateCounterSetInstanceString">
            <summary>Sets the shim of CounterSet.CreateCounterSetInstance(String instanceName)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.AllInstances.Dispose">
            <summary>Sets the shim of CounterSet.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSet.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CounterSet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance">
            <summary>Shim type of System.Diagnostics.PerformanceData.CounterSetInstance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.#ctor(System.Diagnostics.PerformanceData.CounterSetInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.Constructor">
            <summary>Sets the shim of CounterSetInstance.CounterSetInstance()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.CountersGet">
            <summary>Sets the shim of CounterSetInstance.get_Counters()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.Dispose">
            <summary>Sets the shim of CounterSetInstance.Dispose()</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.AllInstances.Constructor">
            <summary>Sets the shim of CounterSetInstance.CounterSetInstance()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.AllInstances.CountersGet">
            <summary>Sets the shim of CounterSetInstance.get_Counters()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstance.AllInstances.Dispose">
            <summary>Sets the shim of CounterSetInstance.Dispose()</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet">
            <summary>Shim type of System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.#ctor(System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.Constructor">
            <summary>Sets the shim of CounterSetInstanceCounterDataSet.CounterSetInstanceCounterDataSet()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.Dispose">
            <summary>Sets the shim of CounterSetInstanceCounterDataSet.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.ItemGetInt32">
            <summary>Sets the shim of CounterSetInstanceCounterDataSet.get_Item(Int32 counterId)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.ItemGetString">
            <summary>Sets the shim of CounterSetInstanceCounterDataSet.get_Item(String counterName)</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.AllInstances.Constructor">
            <summary>Sets the shim of CounterSetInstanceCounterDataSet.CounterSetInstanceCounterDataSet()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.AllInstances.Dispose">
            <summary>Sets the shim of CounterSetInstanceCounterDataSet.Dispose()</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.AllInstances.ItemGetInt32">
            <summary>Sets the shim of CounterSetInstanceCounterDataSet.get_Item(Int32 counterId)</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.ShimCounterSetInstanceCounterDataSet.AllInstances.ItemGetString">
            <summary>Sets the shim of CounterSetInstanceCounterDataSet.get_Item(String counterName)</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceData.Fakes.StubCounterSet">
            <summary>Stub type of System.Diagnostics.PerformanceData.CounterSet</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.StubCounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.StubCounterSet.Dispose(System.Boolean)">
            <summary>Sets the stub of CounterSet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.PerformanceData.Fakes.StubCounterSet.DisposeBoolean">
            <summary>Sets the stub of CounterSet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceData.Fakes.StubCounterSet.InitializeStub">
            <summary>Initializes a new instance of type StubCounterSet</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.StubCounterSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.StubCounterSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Diagnostics.PerformanceData.Fakes.StubCounterSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimBinaryOperationBinder">
            <summary>Shim type of System.Dynamic.BinaryOperationBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimBinaryOperationBinder.#ctor(System.Dynamic.BinaryOperationBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimBinaryOperationBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimBinaryOperationBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of BinaryOperationBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.ConstructorExpressionType">
            <summary>Sets the shim of BinaryOperationBinder.BinaryOperationBinder(ExpressionType operation)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.FallbackBinaryOperationDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the shim of BinaryOperationBinder.FallbackBinaryOperation(DynamicMetaObject target, DynamicMetaObject arg)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.OperationGet">
            <summary>Sets the shim of BinaryOperationBinder.get_Operation()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.ReturnTypeGet">
            <summary>Sets the shim of BinaryOperationBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimBinaryOperationBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of BinaryOperationBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.AllInstances.FallbackBinaryOperationDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the shim of BinaryOperationBinder.FallbackBinaryOperation(DynamicMetaObject target, DynamicMetaObject arg)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.AllInstances.OperationGet">
            <summary>Sets the shim of BinaryOperationBinder.get_Operation()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBinaryOperationBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of BinaryOperationBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimBindingRestrictions">
            <summary>Shim type of System.Dynamic.BindingRestrictions</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimBindingRestrictions.#ctor(System.Dynamic.BindingRestrictions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimBindingRestrictions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimBindingRestrictions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.CombineIListOfDynamicMetaObject">
            <summary>Sets the shim of BindingRestrictions.Combine(IList`1&lt;DynamicMetaObject&gt; contributingObjects)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.Constructor">
            <summary>Sets the shim of BindingRestrictions.BindingRestrictions()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.GetExpressionRestrictionExpression">
            <summary>Sets the shim of BindingRestrictions.GetExpressionRestriction(Expression expression)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.GetInstanceRestrictionExpressionObject">
            <summary>Sets the shim of BindingRestrictions.GetInstanceRestriction(Expression expression, Object instance)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.GetTypeRestrictionExpressionType">
            <summary>Sets the shim of BindingRestrictions.GetTypeRestriction(Expression expression, Type type)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.MergeBindingRestrictions">
            <summary>Sets the shim of BindingRestrictions.Merge(BindingRestrictions restrictions)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.StaticConstructor">
            <summary>Sets the shim of BindingRestrictions.BindingRestrictions()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.ToExpression">
            <summary>Sets the shim of BindingRestrictions.ToExpression()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimBindingRestrictions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.AllInstances.MergeBindingRestrictions">
            <summary>Sets the shim of BindingRestrictions.Merge(BindingRestrictions restrictions)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimBindingRestrictions.AllInstances.ToExpression">
            <summary>Sets the shim of BindingRestrictions.ToExpression()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimCallInfo">
            <summary>Shim type of System.Dynamic.CallInfo</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimCallInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimCallInfo.#ctor(System.Dynamic.CallInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimCallInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimCallInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.ArgumentCountGet">
            <summary>Sets the shim of CallInfo.get_ArgumentCount()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.ArgumentNamesGet">
            <summary>Sets the shim of CallInfo.get_ArgumentNames()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.ConstructorInt32IEnumerableOfString">
            <summary>Sets the shim of CallInfo.CallInfo(Int32 argCount, IEnumerable`1&lt;String&gt; argNames)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.ConstructorInt32StringArray">
            <summary>Sets the shim of CallInfo.CallInfo(Int32 argCount, String[] argNames)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.EqualsObject">
            <summary>Sets the shim of CallInfo.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.GetHashCode">
            <summary>Sets the shim of CallInfo.GetHashCode()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimCallInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.AllInstances.ArgumentCountGet">
            <summary>Sets the shim of CallInfo.get_ArgumentCount()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.AllInstances.ArgumentNamesGet">
            <summary>Sets the shim of CallInfo.get_ArgumentNames()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.AllInstances.EqualsObject">
            <summary>Sets the shim of CallInfo.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCallInfo.AllInstances.GetHashCode01">
            <summary>Sets the shim of CallInfo.GetHashCode()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimConvertBinder">
            <summary>Shim type of System.Dynamic.ConvertBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimConvertBinder.#ctor(System.Dynamic.ConvertBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimConvertBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimConvertBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of ConvertBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.ConstructorTypeBoolean">
            <summary>Sets the shim of ConvertBinder.ConvertBinder(Type type, Boolean explicit)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.ExplicitGet">
            <summary>Sets the shim of ConvertBinder.get_Explicit()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.FallbackConvertDynamicMetaObject">
            <summary>Sets the shim of ConvertBinder.FallbackConvert(DynamicMetaObject target)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.ReturnTypeGet">
            <summary>Sets the shim of ConvertBinder.get_ReturnType()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.TypeGet">
            <summary>Sets the shim of ConvertBinder.get_Type()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimConvertBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of ConvertBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.AllInstances.ExplicitGet">
            <summary>Sets the shim of ConvertBinder.get_Explicit()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.AllInstances.FallbackConvertDynamicMetaObject">
            <summary>Sets the shim of ConvertBinder.FallbackConvert(DynamicMetaObject target)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of ConvertBinder.get_ReturnType()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimConvertBinder.AllInstances.TypeGet">
            <summary>Sets the shim of ConvertBinder.get_Type()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimCreateInstanceBinder">
            <summary>Shim type of System.Dynamic.CreateInstanceBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimCreateInstanceBinder.#ctor(System.Dynamic.CreateInstanceBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimCreateInstanceBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimCreateInstanceBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of CreateInstanceBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.CallInfoGet">
            <summary>Sets the shim of CreateInstanceBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.ConstructorCallInfo">
            <summary>Sets the shim of CreateInstanceBinder.CreateInstanceBinder(CallInfo callInfo)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.FallbackCreateInstanceDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of CreateInstanceBinder.FallbackCreateInstance(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.ReturnTypeGet">
            <summary>Sets the shim of CreateInstanceBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimCreateInstanceBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of CreateInstanceBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.AllInstances.CallInfoGet">
            <summary>Sets the shim of CreateInstanceBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.AllInstances.FallbackCreateInstanceDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of CreateInstanceBinder.FallbackCreateInstance(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimCreateInstanceBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of CreateInstanceBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDeleteIndexBinder">
            <summary>Shim type of System.Dynamic.DeleteIndexBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDeleteIndexBinder.#ctor(System.Dynamic.DeleteIndexBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDeleteIndexBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDeleteIndexBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of DeleteIndexBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.CallInfoGet">
            <summary>Sets the shim of DeleteIndexBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.ConstructorCallInfo">
            <summary>Sets the shim of DeleteIndexBinder.DeleteIndexBinder(CallInfo callInfo)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.FallbackDeleteIndexDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of DeleteIndexBinder.FallbackDeleteIndex(DynamicMetaObject target, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.ReturnTypeGet">
            <summary>Sets the shim of DeleteIndexBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDeleteIndexBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of DeleteIndexBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.AllInstances.CallInfoGet">
            <summary>Sets the shim of DeleteIndexBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.AllInstances.FallbackDeleteIndexDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of DeleteIndexBinder.FallbackDeleteIndex(DynamicMetaObject target, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteIndexBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of DeleteIndexBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDeleteMemberBinder">
            <summary>Shim type of System.Dynamic.DeleteMemberBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDeleteMemberBinder.#ctor(System.Dynamic.DeleteMemberBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDeleteMemberBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDeleteMemberBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of DeleteMemberBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.ConstructorStringBoolean">
            <summary>Sets the shim of DeleteMemberBinder.DeleteMemberBinder(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.FallbackDeleteMemberDynamicMetaObject">
            <summary>Sets the shim of DeleteMemberBinder.FallbackDeleteMember(DynamicMetaObject target)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.IgnoreCaseGet">
            <summary>Sets the shim of DeleteMemberBinder.get_IgnoreCase()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.NameGet">
            <summary>Sets the shim of DeleteMemberBinder.get_Name()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.ReturnTypeGet">
            <summary>Sets the shim of DeleteMemberBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDeleteMemberBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of DeleteMemberBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.AllInstances.FallbackDeleteMemberDynamicMetaObject">
            <summary>Sets the shim of DeleteMemberBinder.FallbackDeleteMember(DynamicMetaObject target)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of DeleteMemberBinder.get_IgnoreCase()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.AllInstances.NameGet">
            <summary>Sets the shim of DeleteMemberBinder.get_Name()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDeleteMemberBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of DeleteMemberBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDynamicMetaObject">
            <summary>Shim type of System.Dynamic.DynamicMetaObject</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicMetaObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicMetaObject.#ctor(System.Dynamic.DynamicMetaObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicMetaObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicMetaObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindBinaryOperationBinaryOperationBinderDynamicMetaObject">
            <summary>Sets the shim of DynamicMetaObject.BindBinaryOperation(BinaryOperationBinder binder, DynamicMetaObject arg)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindConvertConvertBinder">
            <summary>Sets the shim of DynamicMetaObject.BindConvert(ConvertBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindCreateInstanceCreateInstanceBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindCreateInstance(CreateInstanceBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindDeleteIndexDeleteIndexBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindDeleteIndex(DeleteIndexBinder binder, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindDeleteMemberDeleteMemberBinder">
            <summary>Sets the shim of DynamicMetaObject.BindDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindGetIndexGetIndexBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindGetIndex(GetIndexBinder binder, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindGetMemberGetMemberBinder">
            <summary>Sets the shim of DynamicMetaObject.BindGetMember(GetMemberBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindInvokeInvokeBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindInvoke(InvokeBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindInvokeMemberInvokeMemberBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindInvokeMember(InvokeMemberBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindSetIndexSetIndexBinderDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the shim of DynamicMetaObject.BindSetIndex(SetIndexBinder binder, DynamicMetaObject[] indexes, DynamicMetaObject value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindSetMemberSetMemberBinderDynamicMetaObject">
            <summary>Sets the shim of DynamicMetaObject.BindSetMember(SetMemberBinder binder, DynamicMetaObject value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.BindUnaryOperationUnaryOperationBinder">
            <summary>Sets the shim of DynamicMetaObject.BindUnaryOperation(UnaryOperationBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.ConstructorExpressionBindingRestrictions">
            <summary>Sets the shim of DynamicMetaObject.DynamicMetaObject(Expression expression, BindingRestrictions restrictions)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.ConstructorExpressionBindingRestrictionsObject">
            <summary>Sets the shim of DynamicMetaObject.DynamicMetaObject(Expression expression, BindingRestrictions restrictions, Object value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.CreateObjectExpression">
            <summary>Sets the shim of DynamicMetaObject.Create(Object value, Expression expression)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.ExpressionGet">
            <summary>Sets the shim of DynamicMetaObject.get_Expression()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.GetDynamicMemberNames">
            <summary>Sets the shim of DynamicMetaObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.HasValueGet">
            <summary>Sets the shim of DynamicMetaObject.get_HasValue()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.LimitTypeGet">
            <summary>Sets the shim of DynamicMetaObject.get_LimitType()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.RestrictionsGet">
            <summary>Sets the shim of DynamicMetaObject.get_Restrictions()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.RuntimeTypeGet">
            <summary>Sets the shim of DynamicMetaObject.get_RuntimeType()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.StaticConstructor">
            <summary>Sets the shim of DynamicMetaObject.DynamicMetaObject()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.ValueGet">
            <summary>Sets the shim of DynamicMetaObject.get_Value()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindBinaryOperationBinaryOperationBinderDynamicMetaObject">
            <summary>Sets the shim of DynamicMetaObject.BindBinaryOperation(BinaryOperationBinder binder, DynamicMetaObject arg)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindConvertConvertBinder">
            <summary>Sets the shim of DynamicMetaObject.BindConvert(ConvertBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindCreateInstanceCreateInstanceBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindCreateInstance(CreateInstanceBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindDeleteIndexDeleteIndexBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindDeleteIndex(DeleteIndexBinder binder, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindDeleteMemberDeleteMemberBinder">
            <summary>Sets the shim of DynamicMetaObject.BindDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindGetIndexGetIndexBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindGetIndex(GetIndexBinder binder, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindGetMemberGetMemberBinder">
            <summary>Sets the shim of DynamicMetaObject.BindGetMember(GetMemberBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindInvokeInvokeBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindInvoke(InvokeBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindInvokeMemberInvokeMemberBinderDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObject.BindInvokeMember(InvokeMemberBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindSetIndexSetIndexBinderDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the shim of DynamicMetaObject.BindSetIndex(SetIndexBinder binder, DynamicMetaObject[] indexes, DynamicMetaObject value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindSetMemberSetMemberBinderDynamicMetaObject">
            <summary>Sets the shim of DynamicMetaObject.BindSetMember(SetMemberBinder binder, DynamicMetaObject value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.BindUnaryOperationUnaryOperationBinder">
            <summary>Sets the shim of DynamicMetaObject.BindUnaryOperation(UnaryOperationBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.ExpressionGet">
            <summary>Sets the shim of DynamicMetaObject.get_Expression()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.GetDynamicMemberNames">
            <summary>Sets the shim of DynamicMetaObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.HasValueGet">
            <summary>Sets the shim of DynamicMetaObject.get_HasValue()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.LimitTypeGet">
            <summary>Sets the shim of DynamicMetaObject.get_LimitType()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.RestrictionsGet">
            <summary>Sets the shim of DynamicMetaObject.get_Restrictions()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.RuntimeTypeGet">
            <summary>Sets the shim of DynamicMetaObject.get_RuntimeType()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObject.AllInstances.ValueGet">
            <summary>Sets the shim of DynamicMetaObject.get_Value()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder">
            <summary>Shim type of System.Dynamic.DynamicMetaObjectBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.#ctor(System.Dynamic.DynamicMetaObjectBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.BindObjectArrayReadOnlyCollectionOfParameterExpressionLabelTarget">
            <summary>Sets the shim of DynamicMetaObjectBinder.Bind(Object[] args, ReadOnlyCollection`1&lt;ParameterExpression&gt; parameters, LabelTarget returnLabel)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.Constructor">
            <summary>Sets the shim of DynamicMetaObjectBinder.DynamicMetaObjectBinder()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.DeferDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObjectBinder.Defer(DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.DeferDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObjectBinder.Defer(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.GetUpdateExpressionType">
            <summary>Sets the shim of DynamicMetaObjectBinder.GetUpdateExpression(Type type)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.ReturnTypeGet">
            <summary>Sets the shim of DynamicMetaObjectBinder.get_ReturnType()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.StaticConstructor">
            <summary>Sets the shim of DynamicMetaObjectBinder.DynamicMetaObjectBinder()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.AllInstances.BindObjectArrayReadOnlyCollectionOfParameterExpressionLabelTarget">
            <summary>Sets the shim of DynamicMetaObjectBinder.Bind(Object[] args, ReadOnlyCollection`1&lt;ParameterExpression&gt; parameters, LabelTarget returnLabel)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.AllInstances.DeferDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObjectBinder.Defer(DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.AllInstances.DeferDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of DynamicMetaObjectBinder.Defer(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.AllInstances.GetUpdateExpressionType">
            <summary>Sets the shim of DynamicMetaObjectBinder.GetUpdateExpression(Type type)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicMetaObjectBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of DynamicMetaObjectBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDynamicObject">
            <summary>Shim type of System.Dynamic.DynamicObject</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicObject.#ctor(System.Dynamic.DynamicObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimDynamicObject.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.Constructor">
            <summary>Sets the shim of DynamicObject.DynamicObject()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.GetDynamicMemberNames">
            <summary>Sets the shim of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.GetMetaObjectExpression">
            <summary>Sets the shim of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the shim of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryConvertConvertBinderObjectOut">
            <summary>Sets the shim of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the shim of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the shim of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the shim of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the shim of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of DynamicObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the shim of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the shim of DynamicObject.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the shim of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TrySetMemberSetMemberBinderObject">
            <summary>Sets the shim of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the shim of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimDynamicObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.GetDynamicMemberNames">
            <summary>Sets the shim of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.GetMetaObjectExpression">
            <summary>Sets the shim of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the shim of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryConvertConvertBinderObjectOut">
            <summary>Sets the shim of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the shim of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the shim of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the shim of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the shim of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of DynamicObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the shim of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the shim of DynamicObject.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the shim of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TrySetMemberSetMemberBinderObject">
            <summary>Sets the shim of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimDynamicObject.AllInstances.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the shim of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimExpandoObject">
            <summary>Shim type of System.Dynamic.ExpandoObject</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.#ctor(System.Dynamic.ExpandoObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimExpandoObject.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.Constructor">
            <summary>Sets the shim of ExpandoObject.ExpandoObject()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.CountSystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectget">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.get_Count()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.IsReadOnlySystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectget">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectgetString">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Item(String key)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectsetStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.KeysSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Keys()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>Sets the shim of ExpandoObject.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>Sets the shim of ExpandoObject.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.StaticConstructor">
            <summary>Sets the shim of ExpandoObject.ExpandoObject()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectAddKeyValuePairOfStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectClear">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Clear()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectCopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectRemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericIDictionarySystemStringSystemObjectAddStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Add(String key, Object value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericIDictionarySystemStringSystemObjectContainsKeyString">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.ContainsKey(String key)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericIDictionarySystemStringSystemObjectRemoveString">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Remove(String key)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericIDictionarySystemStringSystemObjectTryGetValueStringObjectOut">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairSystemStringSystemObjectGetEnumerator">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ExpandoObject.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.SystemDynamicIDynamicMetaObjectProviderGetMetaObjectExpression">
            <summary>Sets the shim of ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.ValuesSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Values()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimExpandoObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.CountSystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectget">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.get_Count()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.IsReadOnlySystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectget">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectgetString">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Item(String key)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectsetStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.KeysSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Keys()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>Sets the shim of ExpandoObject.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>Sets the shim of ExpandoObject.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectAddKeyValuePairOfStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectClear">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Clear()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectCopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectRemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectAddStringObject">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Add(String key, Object value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectContainsKeyString">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.ContainsKey(String key)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectRemoveString">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Remove(String key)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectTryGetValueStringObjectOut">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairSystemStringSystemObjectGetEnumerator">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ExpandoObject.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.SystemDynamicIDynamicMetaObjectProviderGetMetaObjectExpression">
            <summary>Sets the shim of ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimExpandoObject.AllInstances.ValuesSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of ExpandoObject.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Values()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimGetIndexBinder">
            <summary>Shim type of System.Dynamic.GetIndexBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimGetIndexBinder.#ctor(System.Dynamic.GetIndexBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimGetIndexBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimGetIndexBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of GetIndexBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.CallInfoGet">
            <summary>Sets the shim of GetIndexBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.ConstructorCallInfo">
            <summary>Sets the shim of GetIndexBinder.GetIndexBinder(CallInfo callInfo)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.FallbackGetIndexDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of GetIndexBinder.FallbackGetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.ReturnTypeGet">
            <summary>Sets the shim of GetIndexBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimGetIndexBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of GetIndexBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.AllInstances.CallInfoGet">
            <summary>Sets the shim of GetIndexBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.AllInstances.FallbackGetIndexDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of GetIndexBinder.FallbackGetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetIndexBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of GetIndexBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimGetMemberBinder">
            <summary>Shim type of System.Dynamic.GetMemberBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimGetMemberBinder.#ctor(System.Dynamic.GetMemberBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimGetMemberBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimGetMemberBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of GetMemberBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.ConstructorStringBoolean">
            <summary>Sets the shim of GetMemberBinder.GetMemberBinder(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.FallbackGetMemberDynamicMetaObject">
            <summary>Sets the shim of GetMemberBinder.FallbackGetMember(DynamicMetaObject target)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.IgnoreCaseGet">
            <summary>Sets the shim of GetMemberBinder.get_IgnoreCase()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.NameGet">
            <summary>Sets the shim of GetMemberBinder.get_Name()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.ReturnTypeGet">
            <summary>Sets the shim of GetMemberBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimGetMemberBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of GetMemberBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.AllInstances.FallbackGetMemberDynamicMetaObject">
            <summary>Sets the shim of GetMemberBinder.FallbackGetMember(DynamicMetaObject target)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of GetMemberBinder.get_IgnoreCase()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.AllInstances.NameGet">
            <summary>Sets the shim of GetMemberBinder.get_Name()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimGetMemberBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of GetMemberBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimInvokeBinder">
            <summary>Shim type of System.Dynamic.InvokeBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimInvokeBinder.#ctor(System.Dynamic.InvokeBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimInvokeBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimInvokeBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of InvokeBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.CallInfoGet">
            <summary>Sets the shim of InvokeBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.ConstructorCallInfo">
            <summary>Sets the shim of InvokeBinder.InvokeBinder(CallInfo callInfo)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.FallbackInvokeDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of InvokeBinder.FallbackInvoke(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.ReturnTypeGet">
            <summary>Sets the shim of InvokeBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimInvokeBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of InvokeBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.AllInstances.CallInfoGet">
            <summary>Sets the shim of InvokeBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.AllInstances.FallbackInvokeDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of InvokeBinder.FallbackInvoke(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of InvokeBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimInvokeMemberBinder">
            <summary>Shim type of System.Dynamic.InvokeMemberBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimInvokeMemberBinder.#ctor(System.Dynamic.InvokeMemberBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimInvokeMemberBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimInvokeMemberBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of InvokeMemberBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.CallInfoGet">
            <summary>Sets the shim of InvokeMemberBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.ConstructorStringBooleanCallInfo">
            <summary>Sets the shim of InvokeMemberBinder.InvokeMemberBinder(String name, Boolean ignoreCase, CallInfo callInfo)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.FallbackInvokeMemberDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of InvokeMemberBinder.FallbackInvokeMember(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.IgnoreCaseGet">
            <summary>Sets the shim of InvokeMemberBinder.get_IgnoreCase()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.NameGet">
            <summary>Sets the shim of InvokeMemberBinder.get_Name()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.ReturnTypeGet">
            <summary>Sets the shim of InvokeMemberBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimInvokeMemberBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of InvokeMemberBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.AllInstances.CallInfoGet">
            <summary>Sets the shim of InvokeMemberBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.AllInstances.FallbackInvokeMemberDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of InvokeMemberBinder.FallbackInvokeMember(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of InvokeMemberBinder.get_IgnoreCase()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.AllInstances.NameGet">
            <summary>Sets the shim of InvokeMemberBinder.get_Name()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimInvokeMemberBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of InvokeMemberBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimSetIndexBinder">
            <summary>Shim type of System.Dynamic.SetIndexBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimSetIndexBinder.#ctor(System.Dynamic.SetIndexBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimSetIndexBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimSetIndexBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of SetIndexBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.CallInfoGet">
            <summary>Sets the shim of SetIndexBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.ConstructorCallInfo">
            <summary>Sets the shim of SetIndexBinder.SetIndexBinder(CallInfo callInfo)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.FallbackSetIndexDynamicMetaObjectDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the shim of SetIndexBinder.FallbackSetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.ReturnTypeGet">
            <summary>Sets the shim of SetIndexBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimSetIndexBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of SetIndexBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.AllInstances.CallInfoGet">
            <summary>Sets the shim of SetIndexBinder.get_CallInfo()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.AllInstances.FallbackSetIndexDynamicMetaObjectDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the shim of SetIndexBinder.FallbackSetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetIndexBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of SetIndexBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimSetMemberBinder">
            <summary>Shim type of System.Dynamic.SetMemberBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimSetMemberBinder.#ctor(System.Dynamic.SetMemberBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimSetMemberBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimSetMemberBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of SetMemberBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.ConstructorStringBoolean">
            <summary>Sets the shim of SetMemberBinder.SetMemberBinder(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.FallbackSetMemberDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the shim of SetMemberBinder.FallbackSetMember(DynamicMetaObject target, DynamicMetaObject value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.IgnoreCaseGet">
            <summary>Sets the shim of SetMemberBinder.get_IgnoreCase()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.NameGet">
            <summary>Sets the shim of SetMemberBinder.get_Name()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.ReturnTypeGet">
            <summary>Sets the shim of SetMemberBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimSetMemberBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of SetMemberBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.AllInstances.FallbackSetMemberDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the shim of SetMemberBinder.FallbackSetMember(DynamicMetaObject target, DynamicMetaObject value)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of SetMemberBinder.get_IgnoreCase()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.AllInstances.NameGet">
            <summary>Sets the shim of SetMemberBinder.get_Name()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimSetMemberBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of SetMemberBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimUnaryOperationBinder">
            <summary>Shim type of System.Dynamic.UnaryOperationBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimUnaryOperationBinder.#ctor(System.Dynamic.UnaryOperationBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimUnaryOperationBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.ShimUnaryOperationBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of UnaryOperationBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.ConstructorExpressionType">
            <summary>Sets the shim of UnaryOperationBinder.UnaryOperationBinder(ExpressionType operation)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.FallbackUnaryOperationDynamicMetaObject">
            <summary>Sets the shim of UnaryOperationBinder.FallbackUnaryOperation(DynamicMetaObject target)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.OperationGet">
            <summary>Sets the shim of UnaryOperationBinder.get_Operation()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.ReturnTypeGet">
            <summary>Sets the shim of UnaryOperationBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.ShimUnaryOperationBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.AllInstances.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the shim of UnaryOperationBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.AllInstances.FallbackUnaryOperationDynamicMetaObject">
            <summary>Sets the shim of UnaryOperationBinder.FallbackUnaryOperation(DynamicMetaObject target)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.AllInstances.OperationGet">
            <summary>Sets the shim of UnaryOperationBinder.get_Operation()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.ShimUnaryOperationBinder.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of UnaryOperationBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubBinaryOperationBinder">
            <summary>Stub type of System.Dynamic.BinaryOperationBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubBinaryOperationBinder.#ctor(System.Linq.Expressions.ExpressionType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubBinaryOperationBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubBinaryOperationBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubBinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of BinaryOperationBinder.FallbackBinaryOperation(DynamicMetaObject target, DynamicMetaObject arg, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubBinaryOperationBinder.FallbackBinaryOperationDynamicMetaObjectDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the stub of BinaryOperationBinder.FallbackBinaryOperation(DynamicMetaObject target, DynamicMetaObject arg, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubBinaryOperationBinder.InitializeStub">
            <summary>Initializes a new instance of type StubBinaryOperationBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubBinaryOperationBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubBinaryOperationBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubBinaryOperationBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubConvertBinder">
            <summary>Stub type of System.Dynamic.ConvertBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubConvertBinder.#ctor(System.Type,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubConvertBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubConvertBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubConvertBinder.FallbackConvert(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of ConvertBinder.FallbackConvert(DynamicMetaObject target, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubConvertBinder.FallbackConvertDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the stub of ConvertBinder.FallbackConvert(DynamicMetaObject target, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubConvertBinder.InitializeStub">
            <summary>Initializes a new instance of type StubConvertBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubConvertBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubConvertBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubConvertBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubCreateInstanceBinder">
            <summary>Stub type of System.Dynamic.CreateInstanceBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubCreateInstanceBinder.#ctor(System.Dynamic.CallInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubCreateInstanceBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubCreateInstanceBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubCreateInstanceBinder.FallbackCreateInstance(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of CreateInstanceBinder.FallbackCreateInstance(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubCreateInstanceBinder.FallbackCreateInstanceDynamicMetaObjectDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the stub of CreateInstanceBinder.FallbackCreateInstance(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubCreateInstanceBinder.InitializeStub">
            <summary>Initializes a new instance of type StubCreateInstanceBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubCreateInstanceBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubCreateInstanceBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubCreateInstanceBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubDeleteIndexBinder">
            <summary>Stub type of System.Dynamic.DeleteIndexBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteIndexBinder.#ctor(System.Dynamic.CallInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteIndexBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteIndexBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteIndexBinder.FallbackDeleteIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of DeleteIndexBinder.FallbackDeleteIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDeleteIndexBinder.FallbackDeleteIndexDynamicMetaObjectDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the stub of DeleteIndexBinder.FallbackDeleteIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteIndexBinder.InitializeStub">
            <summary>Initializes a new instance of type StubDeleteIndexBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDeleteIndexBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDeleteIndexBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDeleteIndexBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubDeleteMemberBinder">
            <summary>Stub type of System.Dynamic.DeleteMemberBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteMemberBinder.#ctor(System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteMemberBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteMemberBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteMemberBinder.FallbackDeleteMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of DeleteMemberBinder.FallbackDeleteMember(DynamicMetaObject target, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDeleteMemberBinder.FallbackDeleteMemberDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the stub of DeleteMemberBinder.FallbackDeleteMember(DynamicMetaObject target, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDeleteMemberBinder.InitializeStub">
            <summary>Initializes a new instance of type StubDeleteMemberBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDeleteMemberBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDeleteMemberBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDeleteMemberBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubDynamicMetaObject">
            <summary>Stub type of System.Dynamic.DynamicMetaObject</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.#ctor(System.Linq.Expressions.Expression,System.Dynamic.BindingRestrictions)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.#ctor(System.Linq.Expressions.Expression,System.Dynamic.BindingRestrictions,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of DynamicMetaObject.BindBinaryOperation(BinaryOperationBinder binder, DynamicMetaObject arg)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindBinaryOperationBinaryOperationBinderDynamicMetaObject">
            <summary>Sets the stub of DynamicMetaObject.BindBinaryOperation(BinaryOperationBinder binder, DynamicMetaObject arg)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindConvert(System.Dynamic.ConvertBinder)">
            <summary>Sets the stub of DynamicMetaObject.BindConvert(ConvertBinder binder)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindConvertConvertBinder">
            <summary>Sets the stub of DynamicMetaObject.BindConvert(ConvertBinder binder)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindCreateInstance(System.Dynamic.CreateInstanceBinder,System.Dynamic.DynamicMetaObject[])">
            <summary>Sets the stub of DynamicMetaObject.BindCreateInstance(CreateInstanceBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindCreateInstanceCreateInstanceBinderDynamicMetaObjectArray">
            <summary>Sets the stub of DynamicMetaObject.BindCreateInstance(CreateInstanceBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Dynamic.DynamicMetaObject[])">
            <summary>Sets the stub of DynamicMetaObject.BindDeleteIndex(DeleteIndexBinder binder, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindDeleteIndexDeleteIndexBinderDynamicMetaObjectArray">
            <summary>Sets the stub of DynamicMetaObject.BindDeleteIndex(DeleteIndexBinder binder, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicMetaObject.BindDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicMetaObject.BindDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindGetIndex(System.Dynamic.GetIndexBinder,System.Dynamic.DynamicMetaObject[])">
            <summary>Sets the stub of DynamicMetaObject.BindGetIndex(GetIndexBinder binder, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindGetIndexGetIndexBinderDynamicMetaObjectArray">
            <summary>Sets the stub of DynamicMetaObject.BindGetIndex(GetIndexBinder binder, DynamicMetaObject[] indexes)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindGetMember(System.Dynamic.GetMemberBinder)">
            <summary>Sets the stub of DynamicMetaObject.BindGetMember(GetMemberBinder binder)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindGetMemberGetMemberBinder">
            <summary>Sets the stub of DynamicMetaObject.BindGetMember(GetMemberBinder binder)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindInvoke(System.Dynamic.InvokeBinder,System.Dynamic.DynamicMetaObject[])">
            <summary>Sets the stub of DynamicMetaObject.BindInvoke(InvokeBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindInvokeInvokeBinderDynamicMetaObjectArray">
            <summary>Sets the stub of DynamicMetaObject.BindInvoke(InvokeBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindInvokeMember(System.Dynamic.InvokeMemberBinder,System.Dynamic.DynamicMetaObject[])">
            <summary>Sets the stub of DynamicMetaObject.BindInvokeMember(InvokeMemberBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindInvokeMemberInvokeMemberBinderDynamicMetaObjectArray">
            <summary>Sets the stub of DynamicMetaObject.BindInvokeMember(InvokeMemberBinder binder, DynamicMetaObject[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindSetIndex(System.Dynamic.SetIndexBinder,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of DynamicMetaObject.BindSetIndex(SetIndexBinder binder, DynamicMetaObject[] indexes, DynamicMetaObject value)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindSetIndexSetIndexBinderDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the stub of DynamicMetaObject.BindSetIndex(SetIndexBinder binder, DynamicMetaObject[] indexes, DynamicMetaObject value)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindSetMember(System.Dynamic.SetMemberBinder,System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of DynamicMetaObject.BindSetMember(SetMemberBinder binder, DynamicMetaObject value)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindSetMemberSetMemberBinderDynamicMetaObject">
            <summary>Sets the stub of DynamicMetaObject.BindSetMember(SetMemberBinder binder, DynamicMetaObject value)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.BindUnaryOperation(System.Dynamic.UnaryOperationBinder)">
            <summary>Sets the stub of DynamicMetaObject.BindUnaryOperation(UnaryOperationBinder binder)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.BindUnaryOperationUnaryOperationBinder">
            <summary>Sets the stub of DynamicMetaObject.BindUnaryOperation(UnaryOperationBinder binder)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicMetaObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObject.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicMetaObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObject.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicMetaObject</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicMetaObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicMetaObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicMetaObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubDynamicMetaObjectBinder">
            <summary>Stub type of System.Dynamic.DynamicMetaObjectBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
            <summary>Sets the stub of DynamicMetaObjectBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.BindDynamicMetaObjectDynamicMetaObjectArray">
            <summary>Sets the stub of DynamicMetaObjectBinder.Bind(DynamicMetaObject target, DynamicMetaObject[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicMetaObjectBinder</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.ReturnTypeGet">
            <summary>Sets the stub of DynamicMetaObjectBinder.get_ReturnType()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicMetaObjectBinder.ReturnType">
            <summary>Sets the stub of DynamicMetaObjectBinder.get_ReturnType()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubDynamicObject">
            <summary>Stub type of System.Dynamic.DynamicObject</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicObject</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubDynamicObject.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubDynamicObject.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubDynamicObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubGetIndexBinder">
            <summary>Stub type of System.Dynamic.GetIndexBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetIndexBinder.#ctor(System.Dynamic.CallInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetIndexBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetIndexBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetIndexBinder.FallbackGetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of GetIndexBinder.FallbackGetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubGetIndexBinder.FallbackGetIndexDynamicMetaObjectDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the stub of GetIndexBinder.FallbackGetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetIndexBinder.InitializeStub">
            <summary>Initializes a new instance of type StubGetIndexBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubGetIndexBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubGetIndexBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubGetIndexBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubGetMemberBinder">
            <summary>Stub type of System.Dynamic.GetMemberBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetMemberBinder.#ctor(System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetMemberBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetMemberBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetMemberBinder.FallbackGetMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of GetMemberBinder.FallbackGetMember(DynamicMetaObject target, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubGetMemberBinder.FallbackGetMemberDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the stub of GetMemberBinder.FallbackGetMember(DynamicMetaObject target, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubGetMemberBinder.InitializeStub">
            <summary>Initializes a new instance of type StubGetMemberBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubGetMemberBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubGetMemberBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubGetMemberBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubIDynamicMetaObjectProvider">
            <summary>Stub type of System.Dynamic.IDynamicMetaObjectProvider</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubIDynamicMetaObjectProvider.#ctor">
            <summary>Initializes a new instance of type StubIDynamicMetaObjectProvider</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubIDynamicMetaObjectProvider.GetMetaObjectExpression">
            <summary>Sets the stub of IDynamicMetaObjectProvider.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubIDynamicMetaObjectProvider.global::System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of IDynamicMetaObjectProvider.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubIInvokeOnGetBinder">
            <summary>Stub type of System.Dynamic.IInvokeOnGetBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubIInvokeOnGetBinder.#ctor">
            <summary>Initializes a new instance of type StubIInvokeOnGetBinder</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubIInvokeOnGetBinder.InvokeOnGetGet">
            <summary>Sets the stub of IInvokeOnGetBinder.get_InvokeOnGet()</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubIInvokeOnGetBinder.global::System#Dynamic#IInvokeOnGetBinder#InvokeOnGet">
            <summary>Sets the stub of IInvokeOnGetBinder.get_InvokeOnGet()</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubInvokeBinder">
            <summary>Stub type of System.Dynamic.InvokeBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeBinder.#ctor(System.Dynamic.CallInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of InvokeBinder.FallbackInvoke(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubInvokeBinder.FallbackInvokeDynamicMetaObjectDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the stub of InvokeBinder.FallbackInvoke(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeBinder.InitializeStub">
            <summary>Initializes a new instance of type StubInvokeBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubInvokeBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubInvokeBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubInvokeBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubInvokeMemberBinder">
            <summary>Stub type of System.Dynamic.InvokeMemberBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeMemberBinder.#ctor(System.String,System.Boolean,System.Dynamic.CallInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeMemberBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeMemberBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeMemberBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of InvokeMemberBinder.FallbackInvoke(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubInvokeMemberBinder.FallbackInvokeDynamicMetaObjectDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the stub of InvokeMemberBinder.FallbackInvoke(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of InvokeMemberBinder.FallbackInvokeMember(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubInvokeMemberBinder.FallbackInvokeMemberDynamicMetaObjectDynamicMetaObjectArrayDynamicMetaObject">
            <summary>Sets the stub of InvokeMemberBinder.FallbackInvokeMember(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubInvokeMemberBinder.InitializeStub">
            <summary>Initializes a new instance of type StubInvokeMemberBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubInvokeMemberBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubInvokeMemberBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubInvokeMemberBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubSetIndexBinder">
            <summary>Stub type of System.Dynamic.SetIndexBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetIndexBinder.#ctor(System.Dynamic.CallInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetIndexBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetIndexBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of SetIndexBinder.FallbackSetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject value, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubSetIndexBinder.FallbackSetIndexDynamicMetaObjectDynamicMetaObjectArrayDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the stub of SetIndexBinder.FallbackSetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject value, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetIndexBinder.InitializeStub">
            <summary>Initializes a new instance of type StubSetIndexBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubSetIndexBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubSetIndexBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubSetIndexBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubSetMemberBinder">
            <summary>Stub type of System.Dynamic.SetMemberBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetMemberBinder.#ctor(System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetMemberBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetMemberBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetMemberBinder.FallbackSetMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of SetMemberBinder.FallbackSetMember(DynamicMetaObject target, DynamicMetaObject value, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubSetMemberBinder.FallbackSetMemberDynamicMetaObjectDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the stub of SetMemberBinder.FallbackSetMember(DynamicMetaObject target, DynamicMetaObject value, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubSetMemberBinder.InitializeStub">
            <summary>Initializes a new instance of type StubSetMemberBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubSetMemberBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubSetMemberBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubSetMemberBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Dynamic.Fakes.StubUnaryOperationBinder">
            <summary>Stub type of System.Dynamic.UnaryOperationBinder</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubUnaryOperationBinder.#ctor(System.Linq.Expressions.ExpressionType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubUnaryOperationBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubUnaryOperationBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubUnaryOperationBinder.FallbackUnaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
            <summary>Sets the stub of UnaryOperationBinder.FallbackUnaryOperation(DynamicMetaObject target, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="F:System.Dynamic.Fakes.StubUnaryOperationBinder.FallbackUnaryOperationDynamicMetaObjectDynamicMetaObject">
            <summary>Sets the stub of UnaryOperationBinder.FallbackUnaryOperation(DynamicMetaObject target, DynamicMetaObject errorSuggestion)</summary>
        </member>
        <member name="M:System.Dynamic.Fakes.StubUnaryOperationBinder.InitializeStub">
            <summary>Initializes a new instance of type StubUnaryOperationBinder</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubUnaryOperationBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubUnaryOperationBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Dynamic.Fakes.StubUnaryOperationBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile">
            <summary>Shim type of System.IO.MemoryMappedFiles.MemoryMappedFile</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.#ctor(System.IO.MemoryMappedFiles.MemoryMappedFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.Constructor">
            <summary>Sets the shim of MemoryMappedFile.MemoryMappedFile()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateFromFileFileStreamStringInt64MemoryMappedFileAccessMemoryMappedFileSecurityHandleInheritabilityBoolean">
            <summary>Sets the shim of MemoryMappedFile.CreateFromFile(FileStream fileStream, String mapName, Int64 capacity, MemoryMappedFileAccess access, MemoryMappedFileSecurity memoryMappedFileSecurity, HandleInheritability inheritability, Boolean leaveOpen)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateFromFileString">
            <summary>Sets the shim of MemoryMappedFile.CreateFromFile(String path)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateFromFileStringFileMode">
            <summary>Sets the shim of MemoryMappedFile.CreateFromFile(String path, FileMode mode)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateFromFileStringFileModeString">
            <summary>Sets the shim of MemoryMappedFile.CreateFromFile(String path, FileMode mode, String mapName)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateFromFileStringFileModeStringInt64">
            <summary>Sets the shim of MemoryMappedFile.CreateFromFile(String path, FileMode mode, String mapName, Int64 capacity)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateFromFileStringFileModeStringInt64MemoryMappedFileAccess">
            <summary>Sets the shim of MemoryMappedFile.CreateFromFile(String path, FileMode mode, String mapName, Int64 capacity, MemoryMappedFileAccess access)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateNewStringInt64">
            <summary>Sets the shim of MemoryMappedFile.CreateNew(String mapName, Int64 capacity)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateNewStringInt64MemoryMappedFileAccess">
            <summary>Sets the shim of MemoryMappedFile.CreateNew(String mapName, Int64 capacity, MemoryMappedFileAccess access)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateNewStringInt64MemoryMappedFileAccessMemoryMappedFileOptionsMemoryMappedFileSecurityHandleInheritability">
            <summary>Sets the shim of MemoryMappedFile.CreateNew(String mapName, Int64 capacity, MemoryMappedFileAccess access, MemoryMappedFileOptions options, MemoryMappedFileSecurity memoryMappedFileSecurity, HandleInheritability inheritability)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateOrOpenStringInt64">
            <summary>Sets the shim of MemoryMappedFile.CreateOrOpen(String mapName, Int64 capacity)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateOrOpenStringInt64MemoryMappedFileAccess">
            <summary>Sets the shim of MemoryMappedFile.CreateOrOpen(String mapName, Int64 capacity, MemoryMappedFileAccess access)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateOrOpenStringInt64MemoryMappedFileAccessMemoryMappedFileOptionsMemoryMappedFileSecurityHandleInheritability">
            <summary>Sets the shim of MemoryMappedFile.CreateOrOpen(String mapName, Int64 capacity, MemoryMappedFileAccess access, MemoryMappedFileOptions options, MemoryMappedFileSecurity memoryMappedFileSecurity, HandleInheritability inheritability)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateViewAccessor">
            <summary>Sets the shim of MemoryMappedFile.CreateViewAccessor()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateViewAccessorInt64Int64">
            <summary>Sets the shim of MemoryMappedFile.CreateViewAccessor(Int64 offset, Int64 size)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateViewAccessorInt64Int64MemoryMappedFileAccess">
            <summary>Sets the shim of MemoryMappedFile.CreateViewAccessor(Int64 offset, Int64 size, MemoryMappedFileAccess access)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateViewStream">
            <summary>Sets the shim of MemoryMappedFile.CreateViewStream()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateViewStreamInt64Int64">
            <summary>Sets the shim of MemoryMappedFile.CreateViewStream(Int64 offset, Int64 size)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.CreateViewStreamInt64Int64MemoryMappedFileAccess">
            <summary>Sets the shim of MemoryMappedFile.CreateViewStream(Int64 offset, Int64 size, MemoryMappedFileAccess access)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.Dispose">
            <summary>Sets the shim of MemoryMappedFile.Dispose()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.DisposeBoolean">
            <summary>Sets the shim of MemoryMappedFile.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.GetAccessControl">
            <summary>Sets the shim of MemoryMappedFile.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.OpenExistingString">
            <summary>Sets the shim of MemoryMappedFile.OpenExisting(String mapName)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.OpenExistingStringMemoryMappedFileRights">
            <summary>Sets the shim of MemoryMappedFile.OpenExisting(String mapName, MemoryMappedFileRights desiredAccessRights)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.OpenExistingStringMemoryMappedFileRightsHandleInheritability">
            <summary>Sets the shim of MemoryMappedFile.OpenExisting(String mapName, MemoryMappedFileRights desiredAccessRights, HandleInheritability inheritability)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.SafeMemoryMappedFileHandleGet">
            <summary>Sets the shim of MemoryMappedFile.get_SafeMemoryMappedFileHandle()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.SetAccessControlMemoryMappedFileSecurity">
            <summary>Sets the shim of MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity memoryMappedFileSecurity)</summary>
        </member>
        <member name="T:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.Constructor">
            <summary>Sets the shim of MemoryMappedFile.MemoryMappedFile()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.CreateViewAccessor">
            <summary>Sets the shim of MemoryMappedFile.CreateViewAccessor()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.CreateViewAccessorInt64Int64">
            <summary>Sets the shim of MemoryMappedFile.CreateViewAccessor(Int64 offset, Int64 size)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.CreateViewAccessorInt64Int64MemoryMappedFileAccess">
            <summary>Sets the shim of MemoryMappedFile.CreateViewAccessor(Int64 offset, Int64 size, MemoryMappedFileAccess access)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.CreateViewStream">
            <summary>Sets the shim of MemoryMappedFile.CreateViewStream()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.CreateViewStreamInt64Int64">
            <summary>Sets the shim of MemoryMappedFile.CreateViewStream(Int64 offset, Int64 size)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.CreateViewStreamInt64Int64MemoryMappedFileAccess">
            <summary>Sets the shim of MemoryMappedFile.CreateViewStream(Int64 offset, Int64 size, MemoryMappedFileAccess access)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.Dispose">
            <summary>Sets the shim of MemoryMappedFile.Dispose()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MemoryMappedFile.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.GetAccessControl">
            <summary>Sets the shim of MemoryMappedFile.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.SafeMemoryMappedFileHandleGet">
            <summary>Sets the shim of MemoryMappedFile.get_SafeMemoryMappedFileHandle()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFile.AllInstances.SetAccessControlMemoryMappedFileSecurity">
            <summary>Sets the shim of MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity memoryMappedFileSecurity)</summary>
        </member>
        <member name="T:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFileSecurity">
            <summary>Shim type of System.IO.MemoryMappedFiles.MemoryMappedFileSecurity</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFileSecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFileSecurity.#ctor(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFileSecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFileSecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFileSecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFileSecurity.Constructor">
            <summary>Sets the shim of MemoryMappedFileSecurity.MemoryMappedFileSecurity()</summary>
        </member>
        <member name="T:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedFileSecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor">
            <summary>Shim type of System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.#ctor(System.IO.MemoryMappedFiles.MemoryMappedViewAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.Constructor">
            <summary>Sets the shim of MemoryMappedViewAccessor.MemoryMappedViewAccessor()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.DisposeBoolean">
            <summary>Sets the shim of MemoryMappedViewAccessor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.Flush">
            <summary>Sets the shim of MemoryMappedViewAccessor.Flush()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.SafeMemoryMappedViewHandleGet">
            <summary>Sets the shim of MemoryMappedViewAccessor.get_SafeMemoryMappedViewHandle()</summary>
        </member>
        <member name="T:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.AllInstances.Constructor">
            <summary>Sets the shim of MemoryMappedViewAccessor.MemoryMappedViewAccessor()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MemoryMappedViewAccessor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.AllInstances.Flush">
            <summary>Sets the shim of MemoryMappedViewAccessor.Flush()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewAccessor.AllInstances.SafeMemoryMappedViewHandleGet">
            <summary>Sets the shim of MemoryMappedViewAccessor.get_SafeMemoryMappedViewHandle()</summary>
        </member>
        <member name="T:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream">
            <summary>Shim type of System.IO.MemoryMappedFiles.MemoryMappedViewStream</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.#ctor(System.IO.MemoryMappedFiles.MemoryMappedViewStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.Constructor">
            <summary>Sets the shim of MemoryMappedViewStream.MemoryMappedViewStream()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.DisposeBoolean">
            <summary>Sets the shim of MemoryMappedViewStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.Flush">
            <summary>Sets the shim of MemoryMappedViewStream.Flush()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.SafeMemoryMappedViewHandleGet">
            <summary>Sets the shim of MemoryMappedViewStream.get_SafeMemoryMappedViewHandle()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.SetLengthInt64">
            <summary>Sets the shim of MemoryMappedViewStream.SetLength(Int64 value)</summary>
        </member>
        <member name="T:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.AllInstances.Constructor">
            <summary>Sets the shim of MemoryMappedViewStream.MemoryMappedViewStream()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MemoryMappedViewStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.AllInstances.Flush">
            <summary>Sets the shim of MemoryMappedViewStream.Flush()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.AllInstances.SafeMemoryMappedViewHandleGet">
            <summary>Sets the shim of MemoryMappedViewStream.get_SafeMemoryMappedViewHandle()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.ShimMemoryMappedViewStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of MemoryMappedViewStream.SetLength(Int64 value)</summary>
        </member>
        <member name="T:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity">
            <summary>Stub type of System.IO.MemoryMappedFiles.MemoryMappedFileSecurity</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AccessRightTypeGet">
            <summary>Sets the stub of ObjectSecurity`1.get_AccessRightType()</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Sets the stub of ObjectSecurity`1.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AccessRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAccessControlType">
            <summary>Sets the stub of ObjectSecurity`1.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AccessRuleTypeGet">
            <summary>Sets the stub of ObjectSecurity`1.get_AccessRuleType()</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AddAccessRule(System.Security.AccessControl.AccessRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.AddAccessRule(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AddAccessRuleAccessRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.AddAccessRule(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AddAuditRule(System.Security.AccessControl.AuditRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.AddAuditRule(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AddAuditRuleAuditRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.AddAuditRule(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Sets the stub of ObjectSecurity`1.AuditRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AuditRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAuditFlags">
            <summary>Sets the stub of ObjectSecurity`1.AuditRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AuditRuleTypeGet">
            <summary>Sets the stub of ObjectSecurity`1.get_AuditRuleType()</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.InitializeStub">
            <summary>Initializes a new instance of type StubMemoryMappedFileSecurity</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
            <summary>Sets the stub of CommonObjectSecurity.ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ModifyAccessAccessControlModificationAccessRuleBooleanOut">
            <summary>Sets the stub of CommonObjectSecurity.ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
            <summary>Sets the stub of ObjectSecurity.ModifyAccessRule(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ModifyAccessRuleAccessControlModificationAccessRuleBooleanOut">
            <summary>Sets the stub of ObjectSecurity.ModifyAccessRule(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
            <summary>Sets the stub of CommonObjectSecurity.ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ModifyAuditAccessControlModificationAuditRuleBooleanOut">
            <summary>Sets the stub of CommonObjectSecurity.ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
            <summary>Sets the stub of ObjectSecurity.ModifyAuditRule(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ModifyAuditRuleAccessControlModificationAuditRuleBooleanOut">
            <summary>Sets the stub of ObjectSecurity.ModifyAuditRule(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Sets the stub of ObjectSecurity.Persist(Boolean enableOwnershipPrivilege, String name, AccessControlSections includeSections)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.PersistBooleanStringAccessControlSections">
            <summary>Sets the stub of ObjectSecurity.Persist(Boolean enableOwnershipPrivilege, String name, AccessControlSections includeSections)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
            <summary>Sets the stub of ObjectSecurity.PurgeAccessRules(IdentityReference identity)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.PurgeAccessRulesIdentityReference">
            <summary>Sets the stub of ObjectSecurity.PurgeAccessRules(IdentityReference identity)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
            <summary>Sets the stub of ObjectSecurity.PurgeAuditRules(IdentityReference identity)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.PurgeAuditRulesIdentityReference">
            <summary>Sets the stub of ObjectSecurity.PurgeAuditRules(IdentityReference identity)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAccessRule(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAccessRuleAccessRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAccessRule(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAccessRuleAll(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAccessRuleAllAccessRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAccessRuleAll(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAccessRuleSpecific(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAccessRuleSpecificAccessRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAccessRuleSpecific(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAuditRule(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAuditRuleAll(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAuditRuleAllAuditRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAuditRuleAll(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAuditRuleAuditRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAuditRule(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAuditRuleSpecific(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.RemoveAuditRuleSpecificAuditRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.RemoveAuditRuleSpecific(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.ResetAccessRule(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.ResetAccessRuleAccessRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.ResetAccessRule(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.SetAccessRule(System.Security.AccessControl.AccessRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.SetAccessRule(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.SetAccessRuleAccessRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.SetAccessRule(AccessRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="M:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.SetAuditRule(System.Security.AccessControl.AuditRule{System.IO.MemoryMappedFiles.MemoryMappedFileRights})">
            <summary>Sets the stub of ObjectSecurity`1.SetAuditRule(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="F:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.SetAuditRuleAuditRuleOfMemoryMappedFileRights">
            <summary>Sets the stub of ObjectSecurity`1.SetAuditRule(AuditRule`1&lt;!0&gt; rule)</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AccessRightType">
            <summary>Sets the stub of ObjectSecurity`1.get_AccessRightType()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AccessRuleType">
            <summary>Sets the stub of ObjectSecurity`1.get_AccessRuleType()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.AuditRuleType">
            <summary>Sets the stub of ObjectSecurity`1.get_AuditRuleType()</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.IO.MemoryMappedFiles.Fakes.StubMemoryMappedFileSecurity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream">
            <summary>Shim type of System.IO.Pipes.AnonymousPipeClientStream</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.#ctor(System.IO.Pipes.AnonymousPipeClientStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.ConstructorPipeDirectionSafePipeHandle">
            <summary>Sets the shim of AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection direction, SafePipeHandle safePipeHandle)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.ConstructorPipeDirectionString">
            <summary>Sets the shim of AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection direction, String pipeHandleAsString)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.ConstructorString">
            <summary>Sets the shim of AnonymousPipeClientStream.AnonymousPipeClientStream(String pipeHandleAsString)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.ReadModeSetPipeTransmissionMode">
            <summary>Sets the shim of AnonymousPipeClientStream.set_ReadMode(PipeTransmissionMode value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.TransmissionModeGet">
            <summary>Sets the shim of AnonymousPipeClientStream.get_TransmissionMode()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.AllInstances.ReadModeSetPipeTransmissionMode">
            <summary>Sets the shim of AnonymousPipeClientStream.set_ReadMode(PipeTransmissionMode value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeClientStream.AllInstances.TransmissionModeGet">
            <summary>Sets the shim of AnonymousPipeClientStream.get_TransmissionMode()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream">
            <summary>Shim type of System.IO.Pipes.AnonymousPipeServerStream</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.#ctor(System.IO.Pipes.AnonymousPipeServerStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.ClientSafePipeHandleGet">
            <summary>Sets the shim of AnonymousPipeServerStream.get_ClientSafePipeHandle()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.Constructor">
            <summary>Sets the shim of AnonymousPipeServerStream.AnonymousPipeServerStream()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.ConstructorPipeDirection">
            <summary>Sets the shim of AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection direction)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.ConstructorPipeDirectionHandleInheritability">
            <summary>Sets the shim of AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection direction, HandleInheritability inheritability)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.ConstructorPipeDirectionHandleInheritabilityInt32">
            <summary>Sets the shim of AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection direction, HandleInheritability inheritability, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.ConstructorPipeDirectionHandleInheritabilityInt32PipeSecurity">
            <summary>Sets the shim of AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection direction, HandleInheritability inheritability, Int32 bufferSize, PipeSecurity pipeSecurity)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.ConstructorPipeDirectionSafePipeHandleSafePipeHandle">
            <summary>Sets the shim of AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection direction, SafePipeHandle serverSafePipeHandle, SafePipeHandle clientSafePipeHandle)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.DisposeBoolean">
            <summary>Sets the shim of AnonymousPipeServerStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
            <summary>Sets the shim of AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.GetClientHandleAsString">
            <summary>Sets the shim of AnonymousPipeServerStream.GetClientHandleAsString()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.ReadModeSetPipeTransmissionMode">
            <summary>Sets the shim of AnonymousPipeServerStream.set_ReadMode(PipeTransmissionMode value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.TransmissionModeGet">
            <summary>Sets the shim of AnonymousPipeServerStream.get_TransmissionMode()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.AllInstances.ClientSafePipeHandleGet">
            <summary>Sets the shim of AnonymousPipeServerStream.get_ClientSafePipeHandle()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AnonymousPipeServerStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.AllInstances.DisposeLocalCopyOfClientHandle">
            <summary>Sets the shim of AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.AllInstances.GetClientHandleAsString">
            <summary>Sets the shim of AnonymousPipeServerStream.GetClientHandleAsString()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.AllInstances.ReadModeSetPipeTransmissionMode">
            <summary>Sets the shim of AnonymousPipeServerStream.set_ReadMode(PipeTransmissionMode value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimAnonymousPipeServerStream.AllInstances.TransmissionModeGet">
            <summary>Sets the shim of AnonymousPipeServerStream.get_TransmissionMode()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimNamedPipeClientStream">
            <summary>Shim type of System.IO.Pipes.NamedPipeClientStream</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.#ctor(System.IO.Pipes.NamedPipeClientStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.CheckPipePropertyOperations">
            <summary>Sets the shim of NamedPipeClientStream.CheckPipePropertyOperations()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.Connect">
            <summary>Sets the shim of NamedPipeClientStream.Connect()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.ConnectInt32">
            <summary>Sets the shim of NamedPipeClientStream.Connect(Int32 timeout)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.ConstructorPipeDirectionBooleanBooleanSafePipeHandle">
            <summary>Sets the shim of NamedPipeClientStream.NamedPipeClientStream(PipeDirection direction, Boolean isAsync, Boolean isConnected, SafePipeHandle safePipeHandle)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.ConstructorString">
            <summary>Sets the shim of NamedPipeClientStream.NamedPipeClientStream(String pipeName)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.ConstructorStringString">
            <summary>Sets the shim of NamedPipeClientStream.NamedPipeClientStream(String serverName, String pipeName)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.ConstructorStringStringPipeAccessRightsPipeOptionsTokenImpersonationLevelHandleInheritability">
            <summary>Sets the shim of NamedPipeClientStream.NamedPipeClientStream(String serverName, String pipeName, PipeAccessRights desiredAccessRights, PipeOptions options, TokenImpersonationLevel impersonationLevel, HandleInheritability inheritability)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.ConstructorStringStringPipeDirection">
            <summary>Sets the shim of NamedPipeClientStream.NamedPipeClientStream(String serverName, String pipeName, PipeDirection direction)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.ConstructorStringStringPipeDirectionPipeOptions">
            <summary>Sets the shim of NamedPipeClientStream.NamedPipeClientStream(String serverName, String pipeName, PipeDirection direction, PipeOptions options)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.ConstructorStringStringPipeDirectionPipeOptionsTokenImpersonationLevel">
            <summary>Sets the shim of NamedPipeClientStream.NamedPipeClientStream(String serverName, String pipeName, PipeDirection direction, PipeOptions options, TokenImpersonationLevel impersonationLevel)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.ConstructorStringStringPipeDirectionPipeOptionsTokenImpersonationLevelHandleInheritability">
            <summary>Sets the shim of NamedPipeClientStream.NamedPipeClientStream(String serverName, String pipeName, PipeDirection direction, PipeOptions options, TokenImpersonationLevel impersonationLevel, HandleInheritability inheritability)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.NumberOfServerInstancesGet">
            <summary>Sets the shim of NamedPipeClientStream.get_NumberOfServerInstances()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.AllInstances.CheckPipePropertyOperations">
            <summary>Sets the shim of NamedPipeClientStream.CheckPipePropertyOperations()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.AllInstances.Connect">
            <summary>Sets the shim of NamedPipeClientStream.Connect()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.AllInstances.ConnectInt32">
            <summary>Sets the shim of NamedPipeClientStream.Connect(Int32 timeout)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeClientStream.AllInstances.NumberOfServerInstancesGet">
            <summary>Sets the shim of NamedPipeClientStream.get_NumberOfServerInstances()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimNamedPipeServerStream">
            <summary>Shim type of System.IO.Pipes.NamedPipeServerStream</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.#ctor(System.IO.Pipes.NamedPipeServerStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.BeginWaitForConnectionAsyncCallbackObject">
            <summary>Sets the shim of NamedPipeServerStream.BeginWaitForConnection(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorPipeDirectionBooleanBooleanSafePipeHandle">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(PipeDirection direction, Boolean isAsync, Boolean isConnected, SafePipeHandle safePipeHandle)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorString">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(String pipeName)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorStringPipeDirection">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(String pipeName, PipeDirection direction)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorStringPipeDirectionInt32">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(String pipeName, PipeDirection direction, Int32 maxNumberOfServerInstances)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorStringPipeDirectionInt32PipeTransmissionMode">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(String pipeName, PipeDirection direction, Int32 maxNumberOfServerInstances, PipeTransmissionMode transmissionMode)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorStringPipeDirectionInt32PipeTransmissionModePipeOptions">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(String pipeName, PipeDirection direction, Int32 maxNumberOfServerInstances, PipeTransmissionMode transmissionMode, PipeOptions options)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorStringPipeDirectionInt32PipeTransmissionModePipeOptionsInt32Int32">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(String pipeName, PipeDirection direction, Int32 maxNumberOfServerInstances, PipeTransmissionMode transmissionMode, PipeOptions options, Int32 inBufferSize, Int32 outBufferSize)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorStringPipeDirectionInt32PipeTransmissionModePipeOptionsInt32Int32PipeSecurity">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(String pipeName, PipeDirection direction, Int32 maxNumberOfServerInstances, PipeTransmissionMode transmissionMode, PipeOptions options, Int32 inBufferSize, Int32 outBufferSize, PipeSecurity pipeSecurity)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorStringPipeDirectionInt32PipeTransmissionModePipeOptionsInt32Int32PipeSecurityHandleInheritability">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(String pipeName, PipeDirection direction, Int32 maxNumberOfServerInstances, PipeTransmissionMode transmissionMode, PipeOptions options, Int32 inBufferSize, Int32 outBufferSize, PipeSecurity pipeSecurity, HandleInheritability inheritability)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.ConstructorStringPipeDirectionInt32PipeTransmissionModePipeOptionsInt32Int32PipeSecurityHandleInheritabilityPipeAccessRights">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream(String pipeName, PipeDirection direction, Int32 maxNumberOfServerInstances, PipeTransmissionMode transmissionMode, PipeOptions options, Int32 inBufferSize, Int32 outBufferSize, PipeSecurity pipeSecurity, HandleInheritability inheritability, PipeAccessRights additionalAccessRights)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.Disconnect">
            <summary>Sets the shim of NamedPipeServerStream.Disconnect()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.EndWaitForConnectionIAsyncResult">
            <summary>Sets the shim of NamedPipeServerStream.EndWaitForConnection(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.GetImpersonationUserName">
            <summary>Sets the shim of NamedPipeServerStream.GetImpersonationUserName()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.RunAsClientPipeStreamImpersonationWorker">
            <summary>Sets the shim of NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker impersonationWorker)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.StaticConstructor">
            <summary>Sets the shim of NamedPipeServerStream.NamedPipeServerStream()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.WaitForConnection">
            <summary>Sets the shim of NamedPipeServerStream.WaitForConnection()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.AllInstances.BeginWaitForConnectionAsyncCallbackObject">
            <summary>Sets the shim of NamedPipeServerStream.BeginWaitForConnection(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.AllInstances.Disconnect">
            <summary>Sets the shim of NamedPipeServerStream.Disconnect()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.AllInstances.EndWaitForConnectionIAsyncResult">
            <summary>Sets the shim of NamedPipeServerStream.EndWaitForConnection(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.AllInstances.GetImpersonationUserName">
            <summary>Sets the shim of NamedPipeServerStream.GetImpersonationUserName()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.AllInstances.RunAsClientPipeStreamImpersonationWorker">
            <summary>Sets the shim of NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker impersonationWorker)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimNamedPipeServerStream.AllInstances.WaitForConnection">
            <summary>Sets the shim of NamedPipeServerStream.WaitForConnection()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimPipeAccessRule">
            <summary>Shim type of System.IO.Pipes.PipeAccessRule</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeAccessRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeAccessRule.#ctor(System.IO.Pipes.PipeAccessRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeAccessRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeAccessRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAccessRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAccessRule.ConstructorIdentityReferencePipeAccessRightsAccessControlType">
            <summary>Sets the shim of PipeAccessRule.PipeAccessRule(IdentityReference identity, PipeAccessRights rights, AccessControlType type)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAccessRule.ConstructorStringPipeAccessRightsAccessControlType">
            <summary>Sets the shim of PipeAccessRule.PipeAccessRule(String identity, PipeAccessRights rights, AccessControlType type)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAccessRule.PipeAccessRightsGet">
            <summary>Sets the shim of PipeAccessRule.get_PipeAccessRights()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimPipeAccessRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAccessRule.AllInstances.PipeAccessRightsGet">
            <summary>Sets the shim of PipeAccessRule.get_PipeAccessRights()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimPipeAuditRule">
            <summary>Shim type of System.IO.Pipes.PipeAuditRule</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeAuditRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeAuditRule.#ctor(System.IO.Pipes.PipeAuditRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeAuditRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeAuditRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAuditRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAuditRule.ConstructorIdentityReferencePipeAccessRightsAuditFlags">
            <summary>Sets the shim of PipeAuditRule.PipeAuditRule(IdentityReference identity, PipeAccessRights rights, AuditFlags flags)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAuditRule.ConstructorStringPipeAccessRightsAuditFlags">
            <summary>Sets the shim of PipeAuditRule.PipeAuditRule(String identity, PipeAccessRights rights, AuditFlags flags)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAuditRule.PipeAccessRightsGet">
            <summary>Sets the shim of PipeAuditRule.get_PipeAccessRights()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimPipeAuditRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeAuditRule.AllInstances.PipeAccessRightsGet">
            <summary>Sets the shim of PipeAuditRule.get_PipeAccessRights()</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimPipeSecurity">
            <summary>Shim type of System.IO.Pipes.PipeSecurity</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeSecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeSecurity.#ctor(System.IO.Pipes.PipeSecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeSecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeSecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AccessRightTypeGet">
            <summary>Sets the shim of PipeSecurity.get_AccessRightType()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AccessRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAccessControlType">
            <summary>Sets the shim of PipeSecurity.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AccessRuleTypeGet">
            <summary>Sets the shim of PipeSecurity.get_AccessRuleType()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AddAccessRulePipeAccessRule">
            <summary>Sets the shim of PipeSecurity.AddAccessRule(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AddAuditRulePipeAuditRule">
            <summary>Sets the shim of PipeSecurity.AddAuditRule(PipeAuditRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AuditRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAuditFlags">
            <summary>Sets the shim of PipeSecurity.AuditRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AuditRuleTypeGet">
            <summary>Sets the shim of PipeSecurity.get_AuditRuleType()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.Constructor">
            <summary>Sets the shim of PipeSecurity.PipeSecurity()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.PersistSafeHandle">
            <summary>Sets the shim of PipeSecurity.Persist(SafeHandle handle)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.PersistString">
            <summary>Sets the shim of PipeSecurity.Persist(String name)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.RemoveAccessRulePipeAccessRule">
            <summary>Sets the shim of PipeSecurity.RemoveAccessRule(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.RemoveAccessRuleSpecificPipeAccessRule">
            <summary>Sets the shim of PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.RemoveAuditRuleAllPipeAuditRule">
            <summary>Sets the shim of PipeSecurity.RemoveAuditRuleAll(PipeAuditRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.RemoveAuditRulePipeAuditRule">
            <summary>Sets the shim of PipeSecurity.RemoveAuditRule(PipeAuditRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.RemoveAuditRuleSpecificPipeAuditRule">
            <summary>Sets the shim of PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.ResetAccessRulePipeAccessRule">
            <summary>Sets the shim of PipeSecurity.ResetAccessRule(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.SetAccessRulePipeAccessRule">
            <summary>Sets the shim of PipeSecurity.SetAccessRule(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.SetAuditRulePipeAuditRule">
            <summary>Sets the shim of PipeSecurity.SetAuditRule(PipeAuditRule rule)</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.AccessRightTypeGet">
            <summary>Sets the shim of PipeSecurity.get_AccessRightType()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.AccessRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAccessControlType">
            <summary>Sets the shim of PipeSecurity.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.AccessRuleTypeGet">
            <summary>Sets the shim of PipeSecurity.get_AccessRuleType()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.AddAccessRulePipeAccessRule">
            <summary>Sets the shim of PipeSecurity.AddAccessRule(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.AddAuditRulePipeAuditRule">
            <summary>Sets the shim of PipeSecurity.AddAuditRule(PipeAuditRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.AuditRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAuditFlags">
            <summary>Sets the shim of PipeSecurity.AuditRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.AuditRuleTypeGet">
            <summary>Sets the shim of PipeSecurity.get_AuditRuleType()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.PersistSafeHandle">
            <summary>Sets the shim of PipeSecurity.Persist(SafeHandle handle)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.PersistString">
            <summary>Sets the shim of PipeSecurity.Persist(String name)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.RemoveAccessRulePipeAccessRule">
            <summary>Sets the shim of PipeSecurity.RemoveAccessRule(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.RemoveAccessRuleSpecificPipeAccessRule">
            <summary>Sets the shim of PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.RemoveAuditRuleAllPipeAuditRule">
            <summary>Sets the shim of PipeSecurity.RemoveAuditRuleAll(PipeAuditRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.RemoveAuditRulePipeAuditRule">
            <summary>Sets the shim of PipeSecurity.RemoveAuditRule(PipeAuditRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.RemoveAuditRuleSpecificPipeAuditRule">
            <summary>Sets the shim of PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.ResetAccessRulePipeAccessRule">
            <summary>Sets the shim of PipeSecurity.ResetAccessRule(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.SetAccessRulePipeAccessRule">
            <summary>Sets the shim of PipeSecurity.SetAccessRule(PipeAccessRule rule)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeSecurity.AllInstances.SetAuditRulePipeAuditRule">
            <summary>Sets the shim of PipeSecurity.SetAuditRule(PipeAuditRule rule)</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimPipeStream">
            <summary>Shim type of System.IO.Pipes.PipeStream</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeStream.#ctor(System.IO.Pipes.PipeStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.ShimPipeStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of PipeStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of PipeStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.CanReadGet">
            <summary>Sets the shim of PipeStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.CanSeekGet">
            <summary>Sets the shim of PipeStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.CanWriteGet">
            <summary>Sets the shim of PipeStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.CheckPipePropertyOperations">
            <summary>Sets the shim of PipeStream.CheckPipePropertyOperations()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.CheckReadOperations">
            <summary>Sets the shim of PipeStream.CheckReadOperations()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.CheckWriteOperations">
            <summary>Sets the shim of PipeStream.CheckWriteOperations()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.ConstructorPipeDirectionInt32">
            <summary>Sets the shim of PipeStream.PipeStream(PipeDirection direction, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.ConstructorPipeDirectionPipeTransmissionModeInt32">
            <summary>Sets the shim of PipeStream.PipeStream(PipeDirection direction, PipeTransmissionMode transmissionMode, Int32 outBufferSize)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.DisposeBoolean">
            <summary>Sets the shim of PipeStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.EndReadIAsyncResult">
            <summary>Sets the shim of PipeStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.EndWriteIAsyncResult">
            <summary>Sets the shim of PipeStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.Flush">
            <summary>Sets the shim of PipeStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.GetAccessControl">
            <summary>Sets the shim of PipeStream.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.InBufferSizeGet">
            <summary>Sets the shim of PipeStream.get_InBufferSize()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.InitializeHandleSafePipeHandleBooleanBoolean">
            <summary>Sets the shim of PipeStream.InitializeHandle(SafePipeHandle handle, Boolean isExposed, Boolean isAsync)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.IsAsyncGet">
            <summary>Sets the shim of PipeStream.get_IsAsync()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.IsConnectedGet">
            <summary>Sets the shim of PipeStream.get_IsConnected()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.IsConnectedSetBoolean">
            <summary>Sets the shim of PipeStream.set_IsConnected(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.IsHandleExposedGet">
            <summary>Sets the shim of PipeStream.get_IsHandleExposed()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.IsMessageCompleteGet">
            <summary>Sets the shim of PipeStream.get_IsMessageComplete()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.LengthGet">
            <summary>Sets the shim of PipeStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.OutBufferSizeGet">
            <summary>Sets the shim of PipeStream.get_OutBufferSize()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.PositionGet">
            <summary>Sets the shim of PipeStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.PositionSetInt64">
            <summary>Sets the shim of PipeStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.ReadByte">
            <summary>Sets the shim of PipeStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of PipeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.ReadModeGet">
            <summary>Sets the shim of PipeStream.get_ReadMode()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.ReadModeSetPipeTransmissionMode">
            <summary>Sets the shim of PipeStream.set_ReadMode(PipeTransmissionMode value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.SafePipeHandleGet">
            <summary>Sets the shim of PipeStream.get_SafePipeHandle()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of PipeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.SetAccessControlPipeSecurity">
            <summary>Sets the shim of PipeStream.SetAccessControl(PipeSecurity pipeSecurity)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.SetLengthInt64">
            <summary>Sets the shim of PipeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.StaticConstructor">
            <summary>Sets the shim of PipeStream.PipeStream()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.TransmissionModeGet">
            <summary>Sets the shim of PipeStream.get_TransmissionMode()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.WaitForPipeDrain">
            <summary>Sets the shim of PipeStream.WaitForPipeDrain()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.WriteByteByte">
            <summary>Sets the shim of PipeStream.WriteByte(Byte value)</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of PipeStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of PipeStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.CanReadGet">
            <summary>Sets the shim of PipeStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of PipeStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of PipeStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.CheckPipePropertyOperations">
            <summary>Sets the shim of PipeStream.CheckPipePropertyOperations()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.CheckReadOperations">
            <summary>Sets the shim of PipeStream.CheckReadOperations()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.CheckWriteOperations">
            <summary>Sets the shim of PipeStream.CheckWriteOperations()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PipeStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.EndReadIAsyncResult">
            <summary>Sets the shim of PipeStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the shim of PipeStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.Flush">
            <summary>Sets the shim of PipeStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.GetAccessControl">
            <summary>Sets the shim of PipeStream.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.InBufferSizeGet">
            <summary>Sets the shim of PipeStream.get_InBufferSize()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.InitializeHandleSafePipeHandleBooleanBoolean">
            <summary>Sets the shim of PipeStream.InitializeHandle(SafePipeHandle handle, Boolean isExposed, Boolean isAsync)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.IsAsyncGet">
            <summary>Sets the shim of PipeStream.get_IsAsync()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.IsConnectedGet">
            <summary>Sets the shim of PipeStream.get_IsConnected()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.IsConnectedSetBoolean">
            <summary>Sets the shim of PipeStream.set_IsConnected(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.IsHandleExposedGet">
            <summary>Sets the shim of PipeStream.get_IsHandleExposed()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.IsMessageCompleteGet">
            <summary>Sets the shim of PipeStream.get_IsMessageComplete()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.LengthGet">
            <summary>Sets the shim of PipeStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.OutBufferSizeGet">
            <summary>Sets the shim of PipeStream.get_OutBufferSize()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.PositionGet">
            <summary>Sets the shim of PipeStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of PipeStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.ReadByte">
            <summary>Sets the shim of PipeStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of PipeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.ReadModeGet">
            <summary>Sets the shim of PipeStream.get_ReadMode()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.ReadModeSetPipeTransmissionMode">
            <summary>Sets the shim of PipeStream.set_ReadMode(PipeTransmissionMode value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.SafePipeHandleGet">
            <summary>Sets the shim of PipeStream.get_SafePipeHandle()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of PipeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.SetAccessControlPipeSecurity">
            <summary>Sets the shim of PipeStream.SetAccessControl(PipeSecurity pipeSecurity)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of PipeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.TransmissionModeGet">
            <summary>Sets the shim of PipeStream.get_TransmissionMode()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.WaitForPipeDrain">
            <summary>Sets the shim of PipeStream.WaitForPipeDrain()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.ShimPipeStream.AllInstances.WriteByteByte">
            <summary>Sets the shim of PipeStream.WriteByte(Byte value)</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.StubPipeSecurity">
            <summary>Stub type of System.IO.Pipes.PipeSecurity</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.AccessRightTypeGet">
            <summary>Sets the stub of PipeSecurity.get_AccessRightType()</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Sets the stub of PipeSecurity.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.AccessRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAccessControlType">
            <summary>Sets the stub of PipeSecurity.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.AccessRuleTypeGet">
            <summary>Sets the stub of PipeSecurity.get_AccessRuleType()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.AuditRuleTypeGet">
            <summary>Sets the stub of PipeSecurity.get_AuditRuleType()</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.InitializeStub">
            <summary>Initializes a new instance of type StubPipeSecurity</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
            <summary>Sets the stub of CommonObjectSecurity.ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.ModifyAccessAccessControlModificationAccessRuleBooleanOut">
            <summary>Sets the stub of CommonObjectSecurity.ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
            <summary>Sets the stub of ObjectSecurity.ModifyAccessRule(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.ModifyAccessRuleAccessControlModificationAccessRuleBooleanOut">
            <summary>Sets the stub of ObjectSecurity.ModifyAccessRule(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
            <summary>Sets the stub of CommonObjectSecurity.ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.ModifyAuditAccessControlModificationAuditRuleBooleanOut">
            <summary>Sets the stub of CommonObjectSecurity.ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
            <summary>Sets the stub of ObjectSecurity.ModifyAuditRule(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.ModifyAuditRuleAccessControlModificationAuditRuleBooleanOut">
            <summary>Sets the stub of ObjectSecurity.ModifyAuditRule(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Sets the stub of ObjectSecurity.Persist(Boolean enableOwnershipPrivilege, String name, AccessControlSections includeSections)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.PersistBooleanStringAccessControlSections">
            <summary>Sets the stub of ObjectSecurity.Persist(Boolean enableOwnershipPrivilege, String name, AccessControlSections includeSections)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
            <summary>Sets the stub of ObjectSecurity.PurgeAccessRules(IdentityReference identity)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.PurgeAccessRulesIdentityReference">
            <summary>Sets the stub of ObjectSecurity.PurgeAccessRules(IdentityReference identity)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
            <summary>Sets the stub of ObjectSecurity.PurgeAuditRules(IdentityReference identity)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeSecurity.PurgeAuditRulesIdentityReference">
            <summary>Sets the stub of ObjectSecurity.PurgeAuditRules(IdentityReference identity)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeSecurity.AccessRightType">
            <summary>Sets the stub of PipeSecurity.get_AccessRightType()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeSecurity.AccessRuleType">
            <summary>Sets the stub of PipeSecurity.get_AccessRuleType()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeSecurity.AuditRuleType">
            <summary>Sets the stub of PipeSecurity.get_AuditRuleType()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeSecurity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeSecurity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeSecurity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.IO.Pipes.Fakes.StubPipeStream">
            <summary>Stub type of System.IO.Pipes.PipeStream</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubPipeStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.AttachBackingFieldToReadMode">
            <summary>Attaches delegates to emulate StubPipeStream.ReadMode as a property with a backing field.</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubPipeStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubPipeStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of PipeStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of PipeStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of PipeStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of PipeStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.CanReadGet">
            <summary>Sets the stub of PipeStream.get_CanRead()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.CanSeekGet">
            <summary>Sets the stub of PipeStream.get_CanSeek()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.CanWriteGet">
            <summary>Sets the stub of PipeStream.get_CanWrite()</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.CheckPipePropertyOperations">
            <summary>Sets the stub of PipeStream.CheckPipePropertyOperations()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.CheckPipePropertyOperations01">
            <summary>Sets the stub of PipeStream.CheckPipePropertyOperations()</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.Dispose(System.Boolean)">
            <summary>Sets the stub of PipeStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.DisposeBoolean">
            <summary>Sets the stub of PipeStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of PipeStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.EndReadIAsyncResult">
            <summary>Sets the stub of PipeStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of PipeStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.EndWriteIAsyncResult">
            <summary>Sets the stub of PipeStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.Flush">
            <summary>Sets the stub of PipeStream.Flush()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.Flush01">
            <summary>Sets the stub of PipeStream.Flush()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.InBufferSizeGet">
            <summary>Sets the stub of PipeStream.get_InBufferSize()</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.InitializeStub">
            <summary>Initializes a new instance of type StubPipeStream</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.LengthGet">
            <summary>Sets the stub of PipeStream.get_Length()</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.OutBufferSizeGet">
            <summary>Sets the stub of PipeStream.get_OutBufferSize()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.PositionGet">
            <summary>Sets the stub of PipeStream.get_Position()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.PositionSetInt64">
            <summary>Sets the stub of PipeStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of PipeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.ReadByte">
            <summary>Sets the stub of PipeStream.ReadByte()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.ReadByte01">
            <summary>Sets the stub of PipeStream.ReadByte()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of PipeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.ReadModeGet">
            <summary>Sets the stub of PipeStream.get_ReadMode()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.ReadModeSetPipeTransmissionMode">
            <summary>Sets the stub of PipeStream.set_ReadMode(PipeTransmissionMode value)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of PipeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of PipeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.SetLength(System.Int64)">
            <summary>Sets the stub of PipeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.SetLengthInt64">
            <summary>Sets the stub of PipeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.TransmissionModeGet">
            <summary>Sets the stub of PipeStream.get_TransmissionMode()</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.IO.Pipes.Fakes.StubPipeStream.WriteByte(System.Byte)">
            <summary>Sets the stub of PipeStream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.WriteByteByte">
            <summary>Sets the stub of PipeStream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.IO.Pipes.Fakes.StubPipeStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.CanRead">
            <summary>Sets the stub of PipeStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.CanSeek">
            <summary>Sets the stub of PipeStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.CanWrite">
            <summary>Sets the stub of PipeStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.InBufferSize">
            <summary>Sets the stub of PipeStream.get_InBufferSize()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.Length">
            <summary>Sets the stub of PipeStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.OutBufferSize">
            <summary>Sets the stub of PipeStream.get_OutBufferSize()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.Position">
            <summary>Sets the stub of PipeStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.ReadMode">
            <summary>Sets the stub of PipeStream.get_ReadMode()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.TransmissionMode">
            <summary>Sets the stub of PipeStream.get_TransmissionMode()</summary>
        </member>
        <member name="P:System.IO.Pipes.Fakes.StubPipeStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimBinaryExpression">
            <summary>Shim type of System.Linq.Expressions.BinaryExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimBinaryExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimBinaryExpression.#ctor(System.Linq.Expressions.BinaryExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimBinaryExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimBinaryExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of BinaryExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.CanReduceGet">
            <summary>Sets the shim of BinaryExpression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.Constructor">
            <summary>Sets the shim of BinaryExpression.BinaryExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.ConversionGet">
            <summary>Sets the shim of BinaryExpression.get_Conversion()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.IsLiftedGet">
            <summary>Sets the shim of BinaryExpression.get_IsLifted()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.IsLiftedToNullGet">
            <summary>Sets the shim of BinaryExpression.get_IsLiftedToNull()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.LeftGet">
            <summary>Sets the shim of BinaryExpression.get_Left()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.MethodGet">
            <summary>Sets the shim of BinaryExpression.get_Method()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.Reduce">
            <summary>Sets the shim of BinaryExpression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.RightGet">
            <summary>Sets the shim of BinaryExpression.get_Right()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.UpdateExpressionLambdaExpressionExpression">
            <summary>Sets the shim of BinaryExpression.Update(Expression left, LambdaExpression conversion, Expression right)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of BinaryExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.CanReduceGet">
            <summary>Sets the shim of BinaryExpression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.Constructor">
            <summary>Sets the shim of BinaryExpression.BinaryExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.ConversionGet">
            <summary>Sets the shim of BinaryExpression.get_Conversion()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.IsLiftedGet">
            <summary>Sets the shim of BinaryExpression.get_IsLifted()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.IsLiftedToNullGet">
            <summary>Sets the shim of BinaryExpression.get_IsLiftedToNull()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.LeftGet">
            <summary>Sets the shim of BinaryExpression.get_Left()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.MethodGet">
            <summary>Sets the shim of BinaryExpression.get_Method()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.Reduce">
            <summary>Sets the shim of BinaryExpression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.RightGet">
            <summary>Sets the shim of BinaryExpression.get_Right()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBinaryExpression.AllInstances.UpdateExpressionLambdaExpressionExpression">
            <summary>Sets the shim of BinaryExpression.Update(Expression left, LambdaExpression conversion, Expression right)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimBlockExpression">
            <summary>Shim type of System.Linq.Expressions.BlockExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimBlockExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimBlockExpression.#ctor(System.Linq.Expressions.BlockExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimBlockExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimBlockExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of BlockExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.Constructor">
            <summary>Sets the shim of BlockExpression.BlockExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.ExpressionsGet">
            <summary>Sets the shim of BlockExpression.get_Expressions()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.NodeTypeGet">
            <summary>Sets the shim of BlockExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.ResultGet">
            <summary>Sets the shim of BlockExpression.get_Result()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.TypeGet">
            <summary>Sets the shim of BlockExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.UpdateIEnumerableOfParameterExpressionIEnumerableOfExpression">
            <summary>Sets the shim of BlockExpression.Update(IEnumerable`1&lt;ParameterExpression&gt; variables, IEnumerable`1&lt;Expression&gt; expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.VariablesGet">
            <summary>Sets the shim of BlockExpression.get_Variables()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimBlockExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of BlockExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.AllInstances.ExpressionsGet">
            <summary>Sets the shim of BlockExpression.get_Expressions()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of BlockExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.AllInstances.ResultGet">
            <summary>Sets the shim of BlockExpression.get_Result()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.AllInstances.TypeGet">
            <summary>Sets the shim of BlockExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.AllInstances.UpdateIEnumerableOfParameterExpressionIEnumerableOfExpression">
            <summary>Sets the shim of BlockExpression.Update(IEnumerable`1&lt;ParameterExpression&gt; variables, IEnumerable`1&lt;Expression&gt; expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimBlockExpression.AllInstances.VariablesGet">
            <summary>Sets the shim of BlockExpression.get_Variables()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimCatchBlock">
            <summary>Shim type of System.Linq.Expressions.CatchBlock</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimCatchBlock.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimCatchBlock.#ctor(System.Linq.Expressions.CatchBlock)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimCatchBlock.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimCatchBlock.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.BodyGet">
            <summary>Sets the shim of CatchBlock.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.Constructor">
            <summary>Sets the shim of CatchBlock.CatchBlock()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.FilterGet">
            <summary>Sets the shim of CatchBlock.get_Filter()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.TestGet">
            <summary>Sets the shim of CatchBlock.get_Test()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.ToString">
            <summary>Sets the shim of CatchBlock.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.UpdateParameterExpressionExpressionExpression">
            <summary>Sets the shim of CatchBlock.Update(ParameterExpression variable, Expression filter, Expression body)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.VariableGet">
            <summary>Sets the shim of CatchBlock.get_Variable()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimCatchBlock.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.AllInstances.BodyGet">
            <summary>Sets the shim of CatchBlock.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.AllInstances.Constructor">
            <summary>Sets the shim of CatchBlock.CatchBlock()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.AllInstances.FilterGet">
            <summary>Sets the shim of CatchBlock.get_Filter()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.AllInstances.TestGet">
            <summary>Sets the shim of CatchBlock.get_Test()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.AllInstances.ToString01">
            <summary>Sets the shim of CatchBlock.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.AllInstances.UpdateParameterExpressionExpressionExpression">
            <summary>Sets the shim of CatchBlock.Update(ParameterExpression variable, Expression filter, Expression body)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimCatchBlock.AllInstances.VariableGet">
            <summary>Sets the shim of CatchBlock.get_Variable()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimConditionalExpression">
            <summary>Shim type of System.Linq.Expressions.ConditionalExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimConditionalExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimConditionalExpression.#ctor(System.Linq.Expressions.ConditionalExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimConditionalExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimConditionalExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of ConditionalExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.Constructor">
            <summary>Sets the shim of ConditionalExpression.ConditionalExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.IfFalseGet">
            <summary>Sets the shim of ConditionalExpression.get_IfFalse()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.IfTrueGet">
            <summary>Sets the shim of ConditionalExpression.get_IfTrue()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.NodeTypeGet">
            <summary>Sets the shim of ConditionalExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.TestGet">
            <summary>Sets the shim of ConditionalExpression.get_Test()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.TypeGet">
            <summary>Sets the shim of ConditionalExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.UpdateExpressionExpressionExpression">
            <summary>Sets the shim of ConditionalExpression.Update(Expression test, Expression ifTrue, Expression ifFalse)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimConditionalExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of ConditionalExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.AllInstances.Constructor">
            <summary>Sets the shim of ConditionalExpression.ConditionalExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.AllInstances.IfFalseGet">
            <summary>Sets the shim of ConditionalExpression.get_IfFalse()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.AllInstances.IfTrueGet">
            <summary>Sets the shim of ConditionalExpression.get_IfTrue()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of ConditionalExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.AllInstances.TestGet">
            <summary>Sets the shim of ConditionalExpression.get_Test()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.AllInstances.TypeGet">
            <summary>Sets the shim of ConditionalExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConditionalExpression.AllInstances.UpdateExpressionExpressionExpression">
            <summary>Sets the shim of ConditionalExpression.Update(Expression test, Expression ifTrue, Expression ifFalse)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimConstantExpression">
            <summary>Shim type of System.Linq.Expressions.ConstantExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimConstantExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimConstantExpression.#ctor(System.Linq.Expressions.ConstantExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimConstantExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimConstantExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of ConstantExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.Constructor">
            <summary>Sets the shim of ConstantExpression.ConstantExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.NodeTypeGet">
            <summary>Sets the shim of ConstantExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.TypeGet">
            <summary>Sets the shim of ConstantExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.ValueGet">
            <summary>Sets the shim of ConstantExpression.get_Value()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimConstantExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of ConstantExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.AllInstances.Constructor">
            <summary>Sets the shim of ConstantExpression.ConstantExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of ConstantExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.AllInstances.TypeGet">
            <summary>Sets the shim of ConstantExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimConstantExpression.AllInstances.ValueGet">
            <summary>Sets the shim of ConstantExpression.get_Value()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimDebugInfoExpression">
            <summary>Shim type of System.Linq.Expressions.DebugInfoExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.#ctor(System.Linq.Expressions.DebugInfoExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of DebugInfoExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.Constructor">
            <summary>Sets the shim of DebugInfoExpression.DebugInfoExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.DocumentGet">
            <summary>Sets the shim of DebugInfoExpression.get_Document()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.EndColumnGet">
            <summary>Sets the shim of DebugInfoExpression.get_EndColumn()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.EndLineGet">
            <summary>Sets the shim of DebugInfoExpression.get_EndLine()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.IsClearGet">
            <summary>Sets the shim of DebugInfoExpression.get_IsClear()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.NodeTypeGet">
            <summary>Sets the shim of DebugInfoExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.StartColumnGet">
            <summary>Sets the shim of DebugInfoExpression.get_StartColumn()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.StartLineGet">
            <summary>Sets the shim of DebugInfoExpression.get_StartLine()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.TypeGet">
            <summary>Sets the shim of DebugInfoExpression.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of DebugInfoExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.Constructor">
            <summary>Sets the shim of DebugInfoExpression.DebugInfoExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.DocumentGet">
            <summary>Sets the shim of DebugInfoExpression.get_Document()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.EndColumnGet">
            <summary>Sets the shim of DebugInfoExpression.get_EndColumn()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.EndLineGet">
            <summary>Sets the shim of DebugInfoExpression.get_EndLine()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.IsClearGet">
            <summary>Sets the shim of DebugInfoExpression.get_IsClear()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of DebugInfoExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.StartColumnGet">
            <summary>Sets the shim of DebugInfoExpression.get_StartColumn()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.StartLineGet">
            <summary>Sets the shim of DebugInfoExpression.get_StartLine()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDebugInfoExpression.AllInstances.TypeGet">
            <summary>Sets the shim of DebugInfoExpression.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimDefaultExpression">
            <summary>Shim type of System.Linq.Expressions.DefaultExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDefaultExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDefaultExpression.#ctor(System.Linq.Expressions.DefaultExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDefaultExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDefaultExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDefaultExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of DefaultExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDefaultExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDefaultExpression.Constructor">
            <summary>Sets the shim of DefaultExpression.DefaultExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDefaultExpression.NodeTypeGet">
            <summary>Sets the shim of DefaultExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDefaultExpression.TypeGet">
            <summary>Sets the shim of DefaultExpression.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimDefaultExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDefaultExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of DefaultExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDefaultExpression.AllInstances.Constructor">
            <summary>Sets the shim of DefaultExpression.DefaultExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDefaultExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of DefaultExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDefaultExpression.AllInstances.TypeGet">
            <summary>Sets the shim of DefaultExpression.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimDynamicExpression">
            <summary>Shim type of System.Linq.Expressions.DynamicExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDynamicExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDynamicExpression.#ctor(System.Linq.Expressions.DynamicExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDynamicExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimDynamicExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of DynamicExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.ArgumentsGet">
            <summary>Sets the shim of DynamicExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.BinderGet">
            <summary>Sets the shim of DynamicExpression.get_Binder()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.Constructor">
            <summary>Sets the shim of DynamicExpression.DynamicExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.DelegateTypeGet">
            <summary>Sets the shim of DynamicExpression.get_DelegateType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.DynamicCallSiteBinderTypeExpression">
            <summary>Sets the shim of DynamicExpression.Dynamic(CallSiteBinder binder, Type returnType, Expression arg0)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.DynamicCallSiteBinderTypeExpressionArray">
            <summary>Sets the shim of DynamicExpression.Dynamic(CallSiteBinder binder, Type returnType, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.DynamicCallSiteBinderTypeExpressionExpression">
            <summary>Sets the shim of DynamicExpression.Dynamic(CallSiteBinder binder, Type returnType, Expression arg0, Expression arg1)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.DynamicCallSiteBinderTypeExpressionExpressionExpression">
            <summary>Sets the shim of DynamicExpression.Dynamic(CallSiteBinder binder, Type returnType, Expression arg0, Expression arg1, Expression arg2)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.DynamicCallSiteBinderTypeExpressionExpressionExpressionExpression">
            <summary>Sets the shim of DynamicExpression.Dynamic(CallSiteBinder binder, Type returnType, Expression arg0, Expression arg1, Expression arg2, Expression arg3)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.DynamicCallSiteBinderTypeIEnumerableOfExpression">
            <summary>Sets the shim of DynamicExpression.Dynamic(CallSiteBinder binder, Type returnType, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.MakeDynamicTypeCallSiteBinderExpression">
            <summary>Sets the shim of DynamicExpression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.MakeDynamicTypeCallSiteBinderExpressionArray">
            <summary>Sets the shim of DynamicExpression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.MakeDynamicTypeCallSiteBinderExpressionExpression">
            <summary>Sets the shim of DynamicExpression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0, Expression arg1)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.MakeDynamicTypeCallSiteBinderExpressionExpressionExpression">
            <summary>Sets the shim of DynamicExpression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0, Expression arg1, Expression arg2)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.MakeDynamicTypeCallSiteBinderExpressionExpressionExpressionExpression">
            <summary>Sets the shim of DynamicExpression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0, Expression arg1, Expression arg2, Expression arg3)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.MakeDynamicTypeCallSiteBinderIEnumerableOfExpression">
            <summary>Sets the shim of DynamicExpression.MakeDynamic(Type delegateType, CallSiteBinder binder, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.NodeTypeGet">
            <summary>Sets the shim of DynamicExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.TypeGet">
            <summary>Sets the shim of DynamicExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.UpdateIEnumerableOfExpression">
            <summary>Sets the shim of DynamicExpression.Update(IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimDynamicExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of DynamicExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DynamicExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.AllInstances.BinderGet">
            <summary>Sets the shim of DynamicExpression.get_Binder()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.AllInstances.Constructor">
            <summary>Sets the shim of DynamicExpression.DynamicExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.AllInstances.DelegateTypeGet">
            <summary>Sets the shim of DynamicExpression.get_DelegateType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of DynamicExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.AllInstances.TypeGet">
            <summary>Sets the shim of DynamicExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimDynamicExpression.AllInstances.UpdateIEnumerableOfExpression">
            <summary>Sets the shim of DynamicExpression.Update(IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimElementInit">
            <summary>Shim type of System.Linq.Expressions.ElementInit</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimElementInit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimElementInit.#ctor(System.Linq.Expressions.ElementInit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimElementInit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimElementInit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.AddMethodGet">
            <summary>Sets the shim of ElementInit.get_AddMethod()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.ArgumentsGet">
            <summary>Sets the shim of ElementInit.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.Constructor">
            <summary>Sets the shim of ElementInit.ElementInit()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.ToString">
            <summary>Sets the shim of ElementInit.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.UpdateIEnumerableOfExpression">
            <summary>Sets the shim of ElementInit.Update(IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimElementInit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.AllInstances.AddMethodGet">
            <summary>Sets the shim of ElementInit.get_AddMethod()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.AllInstances.ArgumentsGet">
            <summary>Sets the shim of ElementInit.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.AllInstances.Constructor">
            <summary>Sets the shim of ElementInit.ElementInit()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.AllInstances.ToString01">
            <summary>Sets the shim of ElementInit.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimElementInit.AllInstances.UpdateIEnumerableOfExpression">
            <summary>Sets the shim of ElementInit.Update(IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimExpression">
            <summary>Shim type of System.Linq.Expressions.Expression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression.LambdaOf1ExpressionBooleanIEnumerableOfParameterExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression{``0}})">
            <summary>Sets the shim of Expression.Lambda(Expression body, Boolean tailCall, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression.LambdaOf1ExpressionBooleanParameterExpressionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[],System.Linq.Expressions.Expression{``0}})">
            <summary>Sets the shim of Expression.Lambda(Expression body, Boolean tailCall, ParameterExpression[] parameters)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression.LambdaOf1ExpressionIEnumerableOfParameterExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression{``0}})">
            <summary>Sets the shim of Expression.Lambda(Expression body, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression.LambdaOf1ExpressionParameterExpressionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[],System.Linq.Expressions.Expression{``0}})">
            <summary>Sets the shim of Expression.Lambda(Expression body, ParameterExpression[] parameters)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression.LambdaOf1ExpressionStringBooleanIEnumerableOfParameterExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression{``0}})">
            <summary>Sets the shim of Expression.Lambda(Expression body, String name, Boolean tailCall, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression.LambdaOf1ExpressionStringIEnumerableOfParameterExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression{``0}})">
            <summary>Sets the shim of Expression.Lambda(Expression body, String name, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of Expression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddAssignCheckedExpressionExpression">
            <summary>Sets the shim of Expression.AddAssignChecked(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddAssignCheckedExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.AddAssignChecked(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddAssignCheckedExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.AddAssignChecked(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddAssignExpressionExpression">
            <summary>Sets the shim of Expression.AddAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.AddAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.AddAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddCheckedExpressionExpression">
            <summary>Sets the shim of Expression.AddChecked(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddCheckedExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.AddChecked(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddExpressionExpression">
            <summary>Sets the shim of Expression.Add(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AddExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.Add(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AndAlsoExpressionExpression">
            <summary>Sets the shim of Expression.AndAlso(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AndAlsoExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.AndAlso(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AndAssignExpressionExpression">
            <summary>Sets the shim of Expression.AndAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AndAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.AndAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AndAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.AndAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AndExpressionExpression">
            <summary>Sets the shim of Expression.And(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AndExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.And(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ArrayAccessExpressionExpressionArray">
            <summary>Sets the shim of Expression.ArrayAccess(Expression array, Expression[] indexes)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ArrayAccessExpressionIEnumerableOfExpression">
            <summary>Sets the shim of Expression.ArrayAccess(Expression array, IEnumerable`1&lt;Expression&gt; indexes)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ArrayIndexExpressionExpression">
            <summary>Sets the shim of Expression.ArrayIndex(Expression array, Expression index)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ArrayIndexExpressionExpressionArray">
            <summary>Sets the shim of Expression.ArrayIndex(Expression array, Expression[] indexes)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ArrayIndexExpressionIEnumerableOfExpression">
            <summary>Sets the shim of Expression.ArrayIndex(Expression array, IEnumerable`1&lt;Expression&gt; indexes)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ArrayLengthExpression">
            <summary>Sets the shim of Expression.ArrayLength(Expression array)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AssignExpressionExpression">
            <summary>Sets the shim of Expression.Assign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BindMemberInfoExpression">
            <summary>Sets the shim of Expression.Bind(MemberInfo member, Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BindMethodInfoExpression">
            <summary>Sets the shim of Expression.Bind(MethodInfo propertyAccessor, Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockExpressionArray">
            <summary>Sets the shim of Expression.Block(Expression[] expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockExpressionExpression">
            <summary>Sets the shim of Expression.Block(Expression arg0, Expression arg1)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Block(Expression arg0, Expression arg1, Expression arg2)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockExpressionExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Block(Expression arg0, Expression arg1, Expression arg2, Expression arg3)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockExpressionExpressionExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Block(Expression arg0, Expression arg1, Expression arg2, Expression arg3, Expression arg4)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockIEnumerableOfExpression">
            <summary>Sets the shim of Expression.Block(IEnumerable`1&lt;Expression&gt; expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockIEnumerableOfParameterExpressionExpressionArray">
            <summary>Sets the shim of Expression.Block(IEnumerable`1&lt;ParameterExpression&gt; variables, Expression[] expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockIEnumerableOfParameterExpressionIEnumerableOfExpression">
            <summary>Sets the shim of Expression.Block(IEnumerable`1&lt;ParameterExpression&gt; variables, IEnumerable`1&lt;Expression&gt; expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockTypeExpressionArray">
            <summary>Sets the shim of Expression.Block(Type type, Expression[] expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockTypeIEnumerableOfExpression">
            <summary>Sets the shim of Expression.Block(Type type, IEnumerable`1&lt;Expression&gt; expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockTypeIEnumerableOfParameterExpressionExpressionArray">
            <summary>Sets the shim of Expression.Block(Type type, IEnumerable`1&lt;ParameterExpression&gt; variables, Expression[] expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BlockTypeIEnumerableOfParameterExpressionIEnumerableOfExpression">
            <summary>Sets the shim of Expression.Block(Type type, IEnumerable`1&lt;ParameterExpression&gt; variables, IEnumerable`1&lt;Expression&gt; expressions)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BreakLabelTarget">
            <summary>Sets the shim of Expression.Break(LabelTarget target)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BreakLabelTargetExpression">
            <summary>Sets the shim of Expression.Break(LabelTarget target, Expression value)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BreakLabelTargetExpressionType">
            <summary>Sets the shim of Expression.Break(LabelTarget target, Expression value, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.BreakLabelTargetType">
            <summary>Sets the shim of Expression.Break(LabelTarget target, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallExpressionMethodInfo">
            <summary>Sets the shim of Expression.Call(Expression instance, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallExpressionMethodInfoExpressionArray">
            <summary>Sets the shim of Expression.Call(Expression instance, MethodInfo method, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallExpressionMethodInfoExpressionExpression">
            <summary>Sets the shim of Expression.Call(Expression instance, MethodInfo method, Expression arg0, Expression arg1)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallExpressionMethodInfoExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Call(Expression instance, MethodInfo method, Expression arg0, Expression arg1, Expression arg2)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallExpressionMethodInfoIEnumerableOfExpression">
            <summary>Sets the shim of Expression.Call(Expression instance, MethodInfo method, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallExpressionStringTypeArrayExpressionArray">
            <summary>Sets the shim of Expression.Call(Expression instance, String methodName, Type[] typeArguments, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallMethodInfoExpression">
            <summary>Sets the shim of Expression.Call(MethodInfo method, Expression arg0)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallMethodInfoExpressionArray">
            <summary>Sets the shim of Expression.Call(MethodInfo method, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallMethodInfoExpressionExpression">
            <summary>Sets the shim of Expression.Call(MethodInfo method, Expression arg0, Expression arg1)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallMethodInfoExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Call(MethodInfo method, Expression arg0, Expression arg1, Expression arg2)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallMethodInfoExpressionExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Call(MethodInfo method, Expression arg0, Expression arg1, Expression arg2, Expression arg3)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallMethodInfoExpressionExpressionExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Call(MethodInfo method, Expression arg0, Expression arg1, Expression arg2, Expression arg3, Expression arg4)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallMethodInfoIEnumerableOfExpression">
            <summary>Sets the shim of Expression.Call(MethodInfo method, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CallTypeStringTypeArrayExpressionArray">
            <summary>Sets the shim of Expression.Call(Type type, String methodName, Type[] typeArguments, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CanReduceGet">
            <summary>Sets the shim of Expression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CatchParameterExpressionExpression">
            <summary>Sets the shim of Expression.Catch(ParameterExpression variable, Expression body)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CatchParameterExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Catch(ParameterExpression variable, Expression body, Expression filter)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CatchTypeExpression">
            <summary>Sets the shim of Expression.Catch(Type type, Expression body)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CatchTypeExpressionExpression">
            <summary>Sets the shim of Expression.Catch(Type type, Expression body, Expression filter)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ClearDebugInfoSymbolDocumentInfo">
            <summary>Sets the shim of Expression.ClearDebugInfo(SymbolDocumentInfo document)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CoalesceExpressionExpression">
            <summary>Sets the shim of Expression.Coalesce(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.CoalesceExpressionExpressionLambdaExpression">
            <summary>Sets the shim of Expression.Coalesce(Expression left, Expression right, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ConditionExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Condition(Expression test, Expression ifTrue, Expression ifFalse)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ConditionExpressionExpressionExpressionType">
            <summary>Sets the shim of Expression.Condition(Expression test, Expression ifTrue, Expression ifFalse, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ConstantObject">
            <summary>Sets the shim of Expression.Constant(Object value)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ConstantObjectType">
            <summary>Sets the shim of Expression.Constant(Object value, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.Constructor">
            <summary>Sets the shim of Expression.Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ConstructorExpressionTypeType">
            <summary>Sets the shim of Expression.Expression(ExpressionType nodeType, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ContinueLabelTarget">
            <summary>Sets the shim of Expression.Continue(LabelTarget target)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ContinueLabelTargetType">
            <summary>Sets the shim of Expression.Continue(LabelTarget target, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ConvertCheckedExpressionType">
            <summary>Sets the shim of Expression.ConvertChecked(Expression expression, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ConvertCheckedExpressionTypeMethodInfo">
            <summary>Sets the shim of Expression.ConvertChecked(Expression expression, Type type, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ConvertExpressionType">
            <summary>Sets the shim of Expression.Convert(Expression expression, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ConvertExpressionTypeMethodInfo">
            <summary>Sets the shim of Expression.Convert(Expression expression, Type type, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DebugInfoSymbolDocumentInfoInt32Int32Int32Int32">
            <summary>Sets the shim of Expression.DebugInfo(SymbolDocumentInfo document, Int32 startLine, Int32 startColumn, Int32 endLine, Int32 endColumn)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DecrementExpression">
            <summary>Sets the shim of Expression.Decrement(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DecrementExpressionMethodInfo">
            <summary>Sets the shim of Expression.Decrement(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DefaultType">
            <summary>Sets the shim of Expression.Default(Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DivideAssignExpressionExpression">
            <summary>Sets the shim of Expression.DivideAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DivideAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.DivideAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DivideAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.DivideAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DivideExpressionExpression">
            <summary>Sets the shim of Expression.Divide(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DivideExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.Divide(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DynamicCallSiteBinderTypeExpression">
            <summary>Sets the shim of Expression.Dynamic(CallSiteBinder binder, Type returnType, Expression arg0)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DynamicCallSiteBinderTypeExpressionArray">
            <summary>Sets the shim of Expression.Dynamic(CallSiteBinder binder, Type returnType, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DynamicCallSiteBinderTypeExpressionExpression">
            <summary>Sets the shim of Expression.Dynamic(CallSiteBinder binder, Type returnType, Expression arg0, Expression arg1)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DynamicCallSiteBinderTypeExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Dynamic(CallSiteBinder binder, Type returnType, Expression arg0, Expression arg1, Expression arg2)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DynamicCallSiteBinderTypeExpressionExpressionExpressionExpression">
            <summary>Sets the shim of Expression.Dynamic(CallSiteBinder binder, Type returnType, Expression arg0, Expression arg1, Expression arg2, Expression arg3)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.DynamicCallSiteBinderTypeIEnumerableOfExpression">
            <summary>Sets the shim of Expression.Dynamic(CallSiteBinder binder, Type returnType, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ElementInitMethodInfoExpressionArray">
            <summary>Sets the shim of Expression.ElementInit(MethodInfo addMethod, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ElementInitMethodInfoIEnumerableOfExpression">
            <summary>Sets the shim of Expression.ElementInit(MethodInfo addMethod, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.Empty">
            <summary>Sets the shim of Expression.Empty()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.EqualExpressionExpression">
            <summary>Sets the shim of Expression.Equal(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.EqualExpressionExpressionBooleanMethodInfo">
            <summary>Sets the shim of Expression.Equal(Expression left, Expression right, Boolean liftToNull, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ExclusiveOrAssignExpressionExpression">
            <summary>Sets the shim of Expression.ExclusiveOrAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ExclusiveOrAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.ExclusiveOrAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ExclusiveOrAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.ExclusiveOrAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ExclusiveOrExpressionExpression">
            <summary>Sets the shim of Expression.ExclusiveOr(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ExclusiveOrExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.ExclusiveOr(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.FieldExpressionFieldInfo">
            <summary>Sets the shim of Expression.Field(Expression expression, FieldInfo field)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.FieldExpressionString">
            <summary>Sets the shim of Expression.Field(Expression expression, String fieldName)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.FieldExpressionTypeString">
            <summary>Sets the shim of Expression.Field(Expression expression, Type type, String fieldName)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GetActionTypeTypeArray">
            <summary>Sets the shim of Expression.GetActionType(Type[] typeArgs)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GetDelegateTypeTypeArray">
            <summary>Sets the shim of Expression.GetDelegateType(Type[] typeArgs)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GetFuncTypeTypeArray">
            <summary>Sets the shim of Expression.GetFuncType(Type[] typeArgs)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GotoLabelTarget">
            <summary>Sets the shim of Expression.Goto(LabelTarget target)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GotoLabelTargetExpression">
            <summary>Sets the shim of Expression.Goto(LabelTarget target, Expression value)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GotoLabelTargetExpressionType">
            <summary>Sets the shim of Expression.Goto(LabelTarget target, Expression value, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GotoLabelTargetType">
            <summary>Sets the shim of Expression.Goto(LabelTarget target, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GreaterThanExpressionExpression">
            <summary>Sets the shim of Expression.GreaterThan(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GreaterThanExpressionExpressionBooleanMethodInfo">
            <summary>Sets the shim of Expression.GreaterThan(Expression left, Expression right, Boolean liftToNull, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GreaterThanOrEqualExpressionExpression">
            <summary>Sets the shim of Expression.GreaterThanOrEqual(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.GreaterThanOrEqualExpressionExpressionBooleanMethodInfo">
            <summary>Sets the shim of Expression.GreaterThanOrEqual(Expression left, Expression right, Boolean liftToNull, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.IfThenElseExpressionExpressionExpression">
            <summary>Sets the shim of Expression.IfThenElse(Expression test, Expression ifTrue, Expression ifFalse)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.IfThenExpressionExpression">
            <summary>Sets the shim of Expression.IfThen(Expression test, Expression ifTrue)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.IncrementExpression">
            <summary>Sets the shim of Expression.Increment(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.IncrementExpressionMethodInfo">
            <summary>Sets the shim of Expression.Increment(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.InvokeExpressionExpressionArray">
            <summary>Sets the shim of Expression.Invoke(Expression expression, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.InvokeExpressionIEnumerableOfExpression">
            <summary>Sets the shim of Expression.Invoke(Expression expression, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.IsFalseExpression">
            <summary>Sets the shim of Expression.IsFalse(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.IsFalseExpressionMethodInfo">
            <summary>Sets the shim of Expression.IsFalse(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.IsTrueExpression">
            <summary>Sets the shim of Expression.IsTrue(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.IsTrueExpressionMethodInfo">
            <summary>Sets the shim of Expression.IsTrue(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.Label">
            <summary>Sets the shim of Expression.Label()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LabelLabelTarget">
            <summary>Sets the shim of Expression.Label(LabelTarget target)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LabelLabelTargetExpression">
            <summary>Sets the shim of Expression.Label(LabelTarget target, Expression defaultValue)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LabelString">
            <summary>Sets the shim of Expression.Label(String name)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LabelType">
            <summary>Sets the shim of Expression.Label(Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LabelTypeString">
            <summary>Sets the shim of Expression.Label(Type type, String name)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaExpressionBooleanIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression.Lambda(Expression body, Boolean tailCall, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaExpressionBooleanParameterExpressionArray">
            <summary>Sets the shim of Expression.Lambda(Expression body, Boolean tailCall, ParameterExpression[] parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaExpressionIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression.Lambda(Expression body, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaExpressionParameterExpressionArray">
            <summary>Sets the shim of Expression.Lambda(Expression body, ParameterExpression[] parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaExpressionStringBooleanIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression.Lambda(Expression body, String name, Boolean tailCall, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaExpressionStringIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression.Lambda(Expression body, String name, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaTypeExpressionBooleanIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression.Lambda(Type delegateType, Expression body, Boolean tailCall, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaTypeExpressionBooleanParameterExpressionArray">
            <summary>Sets the shim of Expression.Lambda(Type delegateType, Expression body, Boolean tailCall, ParameterExpression[] parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaTypeExpressionIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression.Lambda(Type delegateType, Expression body, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaTypeExpressionParameterExpressionArray">
            <summary>Sets the shim of Expression.Lambda(Type delegateType, Expression body, ParameterExpression[] parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaTypeExpressionStringBooleanIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression.Lambda(Type delegateType, Expression body, String name, Boolean tailCall, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LambdaTypeExpressionStringIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression.Lambda(Type delegateType, Expression body, String name, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LeftShiftAssignExpressionExpression">
            <summary>Sets the shim of Expression.LeftShiftAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LeftShiftAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.LeftShiftAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LeftShiftAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.LeftShiftAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LeftShiftExpressionExpression">
            <summary>Sets the shim of Expression.LeftShift(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LeftShiftExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.LeftShift(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LessThanExpressionExpression">
            <summary>Sets the shim of Expression.LessThan(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LessThanExpressionExpressionBooleanMethodInfo">
            <summary>Sets the shim of Expression.LessThan(Expression left, Expression right, Boolean liftToNull, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LessThanOrEqualExpressionExpression">
            <summary>Sets the shim of Expression.LessThanOrEqual(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LessThanOrEqualExpressionExpressionBooleanMethodInfo">
            <summary>Sets the shim of Expression.LessThanOrEqual(Expression left, Expression right, Boolean liftToNull, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListBindMemberInfoElementInitArray">
            <summary>Sets the shim of Expression.ListBind(MemberInfo member, ElementInit[] initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListBindMemberInfoIEnumerableOfElementInit">
            <summary>Sets the shim of Expression.ListBind(MemberInfo member, IEnumerable`1&lt;ElementInit&gt; initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListBindMethodInfoElementInitArray">
            <summary>Sets the shim of Expression.ListBind(MethodInfo propertyAccessor, ElementInit[] initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListBindMethodInfoIEnumerableOfElementInit">
            <summary>Sets the shim of Expression.ListBind(MethodInfo propertyAccessor, IEnumerable`1&lt;ElementInit&gt; initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListInitNewExpressionElementInitArray">
            <summary>Sets the shim of Expression.ListInit(NewExpression newExpression, ElementInit[] initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListInitNewExpressionExpressionArray">
            <summary>Sets the shim of Expression.ListInit(NewExpression newExpression, Expression[] initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListInitNewExpressionIEnumerableOfElementInit">
            <summary>Sets the shim of Expression.ListInit(NewExpression newExpression, IEnumerable`1&lt;ElementInit&gt; initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListInitNewExpressionIEnumerableOfExpression">
            <summary>Sets the shim of Expression.ListInit(NewExpression newExpression, IEnumerable`1&lt;Expression&gt; initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListInitNewExpressionMethodInfoExpressionArray">
            <summary>Sets the shim of Expression.ListInit(NewExpression newExpression, MethodInfo addMethod, Expression[] initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ListInitNewExpressionMethodInfoIEnumerableOfExpression">
            <summary>Sets the shim of Expression.ListInit(NewExpression newExpression, MethodInfo addMethod, IEnumerable`1&lt;Expression&gt; initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LoopExpression">
            <summary>Sets the shim of Expression.Loop(Expression body)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LoopExpressionLabelTarget">
            <summary>Sets the shim of Expression.Loop(Expression body, LabelTarget break)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.LoopExpressionLabelTargetLabelTarget">
            <summary>Sets the shim of Expression.Loop(Expression body, LabelTarget break, LabelTarget continue)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeBinaryExpressionTypeExpressionExpression">
            <summary>Sets the shim of Expression.MakeBinary(ExpressionType binaryType, Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeBinaryExpressionTypeExpressionExpressionBooleanMethodInfo">
            <summary>Sets the shim of Expression.MakeBinary(ExpressionType binaryType, Expression left, Expression right, Boolean liftToNull, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeBinaryExpressionTypeExpressionExpressionBooleanMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.MakeBinary(ExpressionType binaryType, Expression left, Expression right, Boolean liftToNull, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeCatchBlockTypeParameterExpressionExpressionExpression">
            <summary>Sets the shim of Expression.MakeCatchBlock(Type type, ParameterExpression variable, Expression body, Expression filter)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeDynamicTypeCallSiteBinderExpression">
            <summary>Sets the shim of Expression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeDynamicTypeCallSiteBinderExpressionArray">
            <summary>Sets the shim of Expression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeDynamicTypeCallSiteBinderExpressionExpression">
            <summary>Sets the shim of Expression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0, Expression arg1)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeDynamicTypeCallSiteBinderExpressionExpressionExpression">
            <summary>Sets the shim of Expression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0, Expression arg1, Expression arg2)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeDynamicTypeCallSiteBinderExpressionExpressionExpressionExpression">
            <summary>Sets the shim of Expression.MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0, Expression arg1, Expression arg2, Expression arg3)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeDynamicTypeCallSiteBinderIEnumerableOfExpression">
            <summary>Sets the shim of Expression.MakeDynamic(Type delegateType, CallSiteBinder binder, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeGotoGotoExpressionKindLabelTargetExpressionType">
            <summary>Sets the shim of Expression.MakeGoto(GotoExpressionKind kind, LabelTarget target, Expression value, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeIndexExpressionPropertyInfoIEnumerableOfExpression">
            <summary>Sets the shim of Expression.MakeIndex(Expression instance, PropertyInfo indexer, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeMemberAccessExpressionMemberInfo">
            <summary>Sets the shim of Expression.MakeMemberAccess(Expression expression, MemberInfo member)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeTryTypeExpressionExpressionExpressionIEnumerableOfCatchBlock">
            <summary>Sets the shim of Expression.MakeTry(Type type, Expression body, Expression finally, Expression fault, IEnumerable`1&lt;CatchBlock&gt; handlers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeUnaryExpressionTypeExpressionType">
            <summary>Sets the shim of Expression.MakeUnary(ExpressionType unaryType, Expression operand, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MakeUnaryExpressionTypeExpressionTypeMethodInfo">
            <summary>Sets the shim of Expression.MakeUnary(ExpressionType unaryType, Expression operand, Type type, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MemberBindMemberInfoIEnumerableOfMemberBinding">
            <summary>Sets the shim of Expression.MemberBind(MemberInfo member, IEnumerable`1&lt;MemberBinding&gt; bindings)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MemberBindMemberInfoMemberBindingArray">
            <summary>Sets the shim of Expression.MemberBind(MemberInfo member, MemberBinding[] bindings)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MemberBindMethodInfoIEnumerableOfMemberBinding">
            <summary>Sets the shim of Expression.MemberBind(MethodInfo propertyAccessor, IEnumerable`1&lt;MemberBinding&gt; bindings)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MemberBindMethodInfoMemberBindingArray">
            <summary>Sets the shim of Expression.MemberBind(MethodInfo propertyAccessor, MemberBinding[] bindings)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MemberInitNewExpressionIEnumerableOfMemberBinding">
            <summary>Sets the shim of Expression.MemberInit(NewExpression newExpression, IEnumerable`1&lt;MemberBinding&gt; bindings)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MemberInitNewExpressionMemberBindingArray">
            <summary>Sets the shim of Expression.MemberInit(NewExpression newExpression, MemberBinding[] bindings)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ModuloAssignExpressionExpression">
            <summary>Sets the shim of Expression.ModuloAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ModuloAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.ModuloAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ModuloAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.ModuloAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ModuloExpressionExpression">
            <summary>Sets the shim of Expression.Modulo(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ModuloExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.Modulo(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyAssignCheckedExpressionExpression">
            <summary>Sets the shim of Expression.MultiplyAssignChecked(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyAssignCheckedExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.MultiplyAssignChecked(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyAssignCheckedExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.MultiplyAssignChecked(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyAssignExpressionExpression">
            <summary>Sets the shim of Expression.MultiplyAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.MultiplyAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.MultiplyAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyCheckedExpressionExpression">
            <summary>Sets the shim of Expression.MultiplyChecked(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyCheckedExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.MultiplyChecked(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyExpressionExpression">
            <summary>Sets the shim of Expression.Multiply(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.MultiplyExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.Multiply(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NegateCheckedExpression">
            <summary>Sets the shim of Expression.NegateChecked(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NegateCheckedExpressionMethodInfo">
            <summary>Sets the shim of Expression.NegateChecked(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NegateExpression">
            <summary>Sets the shim of Expression.Negate(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NegateExpressionMethodInfo">
            <summary>Sets the shim of Expression.Negate(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewArrayBoundsTypeExpressionArray">
            <summary>Sets the shim of Expression.NewArrayBounds(Type type, Expression[] bounds)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewArrayBoundsTypeIEnumerableOfExpression">
            <summary>Sets the shim of Expression.NewArrayBounds(Type type, IEnumerable`1&lt;Expression&gt; bounds)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewArrayInitTypeExpressionArray">
            <summary>Sets the shim of Expression.NewArrayInit(Type type, Expression[] initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewArrayInitTypeIEnumerableOfExpression">
            <summary>Sets the shim of Expression.NewArrayInit(Type type, IEnumerable`1&lt;Expression&gt; initializers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewConstructorInfo">
            <summary>Sets the shim of Expression.New(ConstructorInfo constructor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewConstructorInfoExpressionArray">
            <summary>Sets the shim of Expression.New(ConstructorInfo constructor, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewConstructorInfoIEnumerableOfExpression">
            <summary>Sets the shim of Expression.New(ConstructorInfo constructor, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewConstructorInfoIEnumerableOfExpressionIEnumerableOfMemberInfo">
            <summary>Sets the shim of Expression.New(ConstructorInfo constructor, IEnumerable`1&lt;Expression&gt; arguments, IEnumerable`1&lt;MemberInfo&gt; members)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewConstructorInfoIEnumerableOfExpressionMemberInfoArray">
            <summary>Sets the shim of Expression.New(ConstructorInfo constructor, IEnumerable`1&lt;Expression&gt; arguments, MemberInfo[] members)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NewType">
            <summary>Sets the shim of Expression.New(Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NodeTypeGet">
            <summary>Sets the shim of Expression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NotEqualExpressionExpression">
            <summary>Sets the shim of Expression.NotEqual(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NotEqualExpressionExpressionBooleanMethodInfo">
            <summary>Sets the shim of Expression.NotEqual(Expression left, Expression right, Boolean liftToNull, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NotExpression">
            <summary>Sets the shim of Expression.Not(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.NotExpressionMethodInfo">
            <summary>Sets the shim of Expression.Not(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.OnesComplementExpression">
            <summary>Sets the shim of Expression.OnesComplement(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.OnesComplementExpressionMethodInfo">
            <summary>Sets the shim of Expression.OnesComplement(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.OrAssignExpressionExpression">
            <summary>Sets the shim of Expression.OrAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.OrAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.OrAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.OrAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.OrAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.OrElseExpressionExpression">
            <summary>Sets the shim of Expression.OrElse(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.OrElseExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.OrElse(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.OrExpressionExpression">
            <summary>Sets the shim of Expression.Or(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.OrExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.Or(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ParameterType">
            <summary>Sets the shim of Expression.Parameter(Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ParameterTypeString">
            <summary>Sets the shim of Expression.Parameter(Type type, String name)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PostDecrementAssignExpression">
            <summary>Sets the shim of Expression.PostDecrementAssign(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PostDecrementAssignExpressionMethodInfo">
            <summary>Sets the shim of Expression.PostDecrementAssign(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PostIncrementAssignExpression">
            <summary>Sets the shim of Expression.PostIncrementAssign(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PostIncrementAssignExpressionMethodInfo">
            <summary>Sets the shim of Expression.PostIncrementAssign(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PowerAssignExpressionExpression">
            <summary>Sets the shim of Expression.PowerAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PowerAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.PowerAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PowerAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.PowerAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PowerExpressionExpression">
            <summary>Sets the shim of Expression.Power(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PowerExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.Power(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PreDecrementAssignExpression">
            <summary>Sets the shim of Expression.PreDecrementAssign(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PreDecrementAssignExpressionMethodInfo">
            <summary>Sets the shim of Expression.PreDecrementAssign(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PreIncrementAssignExpression">
            <summary>Sets the shim of Expression.PreIncrementAssign(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PreIncrementAssignExpressionMethodInfo">
            <summary>Sets the shim of Expression.PreIncrementAssign(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PropertyExpressionMethodInfo">
            <summary>Sets the shim of Expression.Property(Expression expression, MethodInfo propertyAccessor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PropertyExpressionPropertyInfo">
            <summary>Sets the shim of Expression.Property(Expression expression, PropertyInfo property)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PropertyExpressionPropertyInfoExpressionArray">
            <summary>Sets the shim of Expression.Property(Expression instance, PropertyInfo indexer, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PropertyExpressionPropertyInfoIEnumerableOfExpression">
            <summary>Sets the shim of Expression.Property(Expression instance, PropertyInfo indexer, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PropertyExpressionString">
            <summary>Sets the shim of Expression.Property(Expression expression, String propertyName)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PropertyExpressionStringExpressionArray">
            <summary>Sets the shim of Expression.Property(Expression instance, String propertyName, Expression[] arguments)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PropertyExpressionTypeString">
            <summary>Sets the shim of Expression.Property(Expression expression, Type type, String propertyName)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.PropertyOrFieldExpressionString">
            <summary>Sets the shim of Expression.PropertyOrField(Expression expression, String propertyOrFieldName)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.QuoteExpression">
            <summary>Sets the shim of Expression.Quote(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.Reduce">
            <summary>Sets the shim of Expression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ReduceAndCheck">
            <summary>Sets the shim of Expression.ReduceAndCheck()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ReduceExtensions">
            <summary>Sets the shim of Expression.ReduceExtensions()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ReferenceEqualExpressionExpression">
            <summary>Sets the shim of Expression.ReferenceEqual(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ReferenceNotEqualExpressionExpression">
            <summary>Sets the shim of Expression.ReferenceNotEqual(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.Rethrow">
            <summary>Sets the shim of Expression.Rethrow()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.RethrowType">
            <summary>Sets the shim of Expression.Rethrow(Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ReturnLabelTarget">
            <summary>Sets the shim of Expression.Return(LabelTarget target)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ReturnLabelTargetExpression">
            <summary>Sets the shim of Expression.Return(LabelTarget target, Expression value)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ReturnLabelTargetExpressionType">
            <summary>Sets the shim of Expression.Return(LabelTarget target, Expression value, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ReturnLabelTargetType">
            <summary>Sets the shim of Expression.Return(LabelTarget target, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.RightShiftAssignExpressionExpression">
            <summary>Sets the shim of Expression.RightShiftAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.RightShiftAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.RightShiftAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.RightShiftAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.RightShiftAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.RightShiftExpressionExpression">
            <summary>Sets the shim of Expression.RightShift(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.RightShiftExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.RightShift(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.RuntimeVariablesIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression.RuntimeVariables(IEnumerable`1&lt;ParameterExpression&gt; variables)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.RuntimeVariablesParameterExpressionArray">
            <summary>Sets the shim of Expression.RuntimeVariables(ParameterExpression[] variables)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.StaticConstructor">
            <summary>Sets the shim of Expression.Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractAssignCheckedExpressionExpression">
            <summary>Sets the shim of Expression.SubtractAssignChecked(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractAssignCheckedExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.SubtractAssignChecked(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractAssignCheckedExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.SubtractAssignChecked(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractAssignExpressionExpression">
            <summary>Sets the shim of Expression.SubtractAssign(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractAssignExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.SubtractAssign(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractAssignExpressionExpressionMethodInfoLambdaExpression">
            <summary>Sets the shim of Expression.SubtractAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractCheckedExpressionExpression">
            <summary>Sets the shim of Expression.SubtractChecked(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractCheckedExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.SubtractChecked(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractExpressionExpression">
            <summary>Sets the shim of Expression.Subtract(Expression left, Expression right)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SubtractExpressionExpressionMethodInfo">
            <summary>Sets the shim of Expression.Subtract(Expression left, Expression right, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SwitchCaseExpressionExpressionArray">
            <summary>Sets the shim of Expression.SwitchCase(Expression body, Expression[] testValues)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SwitchCaseExpressionIEnumerableOfExpression">
            <summary>Sets the shim of Expression.SwitchCase(Expression body, IEnumerable`1&lt;Expression&gt; testValues)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SwitchExpressionExpressionMethodInfoIEnumerableOfSwitchCase">
            <summary>Sets the shim of Expression.Switch(Expression switchValue, Expression defaultBody, MethodInfo comparison, IEnumerable`1&lt;SwitchCase&gt; cases)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SwitchExpressionExpressionMethodInfoSwitchCaseArray">
            <summary>Sets the shim of Expression.Switch(Expression switchValue, Expression defaultBody, MethodInfo comparison, SwitchCase[] cases)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SwitchExpressionExpressionSwitchCaseArray">
            <summary>Sets the shim of Expression.Switch(Expression switchValue, Expression defaultBody, SwitchCase[] cases)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SwitchExpressionSwitchCaseArray">
            <summary>Sets the shim of Expression.Switch(Expression switchValue, SwitchCase[] cases)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SwitchTypeExpressionExpressionMethodInfoIEnumerableOfSwitchCase">
            <summary>Sets the shim of Expression.Switch(Type type, Expression switchValue, Expression defaultBody, MethodInfo comparison, IEnumerable`1&lt;SwitchCase&gt; cases)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SwitchTypeExpressionExpressionMethodInfoSwitchCaseArray">
            <summary>Sets the shim of Expression.Switch(Type type, Expression switchValue, Expression defaultBody, MethodInfo comparison, SwitchCase[] cases)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SymbolDocumentString">
            <summary>Sets the shim of Expression.SymbolDocument(String fileName)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SymbolDocumentStringGuid">
            <summary>Sets the shim of Expression.SymbolDocument(String fileName, Guid language)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SymbolDocumentStringGuidGuid">
            <summary>Sets the shim of Expression.SymbolDocument(String fileName, Guid language, Guid languageVendor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.SymbolDocumentStringGuidGuidGuid">
            <summary>Sets the shim of Expression.SymbolDocument(String fileName, Guid language, Guid languageVendor, Guid documentType)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ThrowExpression">
            <summary>Sets the shim of Expression.Throw(Expression value)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ThrowExpressionType">
            <summary>Sets the shim of Expression.Throw(Expression value, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.ToString">
            <summary>Sets the shim of Expression.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TryCatchExpressionCatchBlockArray">
            <summary>Sets the shim of Expression.TryCatch(Expression body, CatchBlock[] handlers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TryCatchFinallyExpressionExpressionCatchBlockArray">
            <summary>Sets the shim of Expression.TryCatchFinally(Expression body, Expression finally, CatchBlock[] handlers)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TryFaultExpressionExpression">
            <summary>Sets the shim of Expression.TryFault(Expression body, Expression fault)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TryFinallyExpressionExpression">
            <summary>Sets the shim of Expression.TryFinally(Expression body, Expression finally)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TryGetActionTypeTypeArrayTypeOut">
            <summary>Sets the shim of Expression.TryGetActionType(Type[] typeArgs, Type&amp; actionType)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TryGetFuncTypeTypeArrayTypeOut">
            <summary>Sets the shim of Expression.TryGetFuncType(Type[] typeArgs, Type&amp; funcType)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TypeAsExpressionType">
            <summary>Sets the shim of Expression.TypeAs(Expression expression, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TypeEqualExpressionType">
            <summary>Sets the shim of Expression.TypeEqual(Expression expression, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TypeGet">
            <summary>Sets the shim of Expression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.TypeIsExpressionType">
            <summary>Sets the shim of Expression.TypeIs(Expression expression, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.UnaryPlusExpression">
            <summary>Sets the shim of Expression.UnaryPlus(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.UnaryPlusExpressionMethodInfo">
            <summary>Sets the shim of Expression.UnaryPlus(Expression expression, MethodInfo method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.UnboxExpressionType">
            <summary>Sets the shim of Expression.Unbox(Expression expression, Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.VariableType">
            <summary>Sets the shim of Expression.Variable(Type type)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.VariableTypeString">
            <summary>Sets the shim of Expression.Variable(Type type, String name)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.VisitChildrenExpressionVisitor">
            <summary>Sets the shim of Expression.VisitChildren(ExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of Expression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AllInstances.CanReduceGet">
            <summary>Sets the shim of Expression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of Expression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AllInstances.Reduce">
            <summary>Sets the shim of Expression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AllInstances.ReduceAndCheck">
            <summary>Sets the shim of Expression.ReduceAndCheck()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AllInstances.ReduceExtensions">
            <summary>Sets the shim of Expression.ReduceExtensions()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AllInstances.ToString01">
            <summary>Sets the shim of Expression.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AllInstances.TypeGet">
            <summary>Sets the shim of Expression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression.AllInstances.VisitChildrenExpressionVisitor">
            <summary>Sets the shim of Expression.VisitChildren(ExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimExpression`1">
            <summary>Shim type of System.Linq.Expressions.Expression`1</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression`1.#ctor(System.Linq.Expressions.Expression{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpression`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.AcceptExpressionVisitor">
            <summary>Sets the shim of Expression`1.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.Compile">
            <summary>Sets the shim of Expression`1.Compile()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.CompileDebugInfoGenerator">
            <summary>Sets the shim of Expression`1.Compile(DebugInfoGenerator debugInfoGenerator)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.Constructor">
            <summary>Sets the shim of Expression`1.Expression`1()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.UpdateExpressionIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression`1.Update(Expression body, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimExpression`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of Expression`1.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.AllInstances.Compile">
            <summary>Sets the shim of Expression`1.Compile()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.AllInstances.CompileDebugInfoGenerator">
            <summary>Sets the shim of Expression`1.Compile(DebugInfoGenerator debugInfoGenerator)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.AllInstances.Constructor">
            <summary>Sets the shim of Expression`1.Expression`1()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpression`1.AllInstances.UpdateExpressionIEnumerableOfParameterExpression">
            <summary>Sets the shim of Expression`1.Update(Expression body, IEnumerable`1&lt;ParameterExpression&gt; parameters)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimExpressionVisitor">
            <summary>Shim type of System.Linq.Expressions.ExpressionVisitor</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.#ctor(System.Linq.Expressions.ExpressionVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitAndConvertOf1M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,``0})">
            <summary>Sets the shim of ExpressionVisitor.VisitAndConvert(!!0 node, String callerName)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitAndConvertOf1ReadOnlyCollectionOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ExpressionVisitor.VisitAndConvert(ReadOnlyCollection`1&lt;!!0&gt; nodes, String callerName)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitLambdaOf1ExpressionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression})">
            <summary>Sets the shim of ExpressionVisitor.VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitOf1ReadOnlyCollectionOfM0FuncOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0},System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ExpressionVisitor.Visit(ReadOnlyCollection`1&lt;!!0&gt; nodes, Func`2&lt;!!0,!!0&gt; elementVisitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.Constructor">
            <summary>Sets the shim of ExpressionVisitor.ExpressionVisitor()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitBinaryBinaryExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitBlockBlockExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitCatchBlockCatchBlock">
            <summary>Sets the shim of ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitConditionalConditionalExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitConstantConstantExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitDebugInfoDebugInfoExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitDefaultDefaultExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitDynamicDynamicExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitElementInitElementInit">
            <summary>Sets the shim of ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitExpression">
            <summary>Sets the shim of ExpressionVisitor.Visit(Expression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitExtensionExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitGotoGotoExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitIndexIndexExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitInvocationInvocationExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitLabelLabelExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitLabelTargetLabelTarget">
            <summary>Sets the shim of ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitListInitListInitExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitLoopLoopExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitMemberAssignmentMemberAssignment">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitMemberBindingMemberBinding">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitMemberInitMemberInitExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitMemberListBindingMemberListBinding">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitMemberMemberExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitMethodCallMethodCallExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitNewArrayNewArrayExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitNewNewExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitParameterParameterExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitReadOnlyCollectionOfExpression">
            <summary>Sets the shim of ExpressionVisitor.Visit(ReadOnlyCollection`1&lt;Expression&gt; nodes)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitRuntimeVariablesRuntimeVariablesExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitSwitchCaseSwitchCase">
            <summary>Sets the shim of ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitSwitchSwitchExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitTryTryExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitTypeBinaryTypeBinaryExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.VisitUnaryUnaryExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitAndConvertOf1M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.ExpressionVisitor,``0,System.String,``0})">
            <summary>Sets the shim of ExpressionVisitor.VisitAndConvert(!!0 node, String callerName)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitAndConvertOf1ReadOnlyCollectionOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.ExpressionVisitor,System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ExpressionVisitor.VisitAndConvert(ReadOnlyCollection`1&lt;!!0&gt; nodes, String callerName)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitLambdaOf1ExpressionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.ExpressionVisitor,System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression})">
            <summary>Sets the shim of ExpressionVisitor.VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitBinaryBinaryExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitBlockBlockExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitCatchBlockCatchBlock">
            <summary>Sets the shim of ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitConditionalConditionalExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitConstantConstantExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitDebugInfoDebugInfoExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitDefaultDefaultExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitDynamicDynamicExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitElementInitElementInit">
            <summary>Sets the shim of ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitExpression">
            <summary>Sets the shim of ExpressionVisitor.Visit(Expression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitExtensionExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitGotoGotoExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitIndexIndexExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitInvocationInvocationExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitLabelLabelExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitLabelTargetLabelTarget">
            <summary>Sets the shim of ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitListInitListInitExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitLoopLoopExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberAssignmentMemberAssignment">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberBindingMemberBinding">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberInitMemberInitExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberListBindingMemberListBinding">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Sets the shim of ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberMemberExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMethodCallMethodCallExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitNewArrayNewArrayExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitNewNewExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitParameterParameterExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitReadOnlyCollectionOfExpression">
            <summary>Sets the shim of ExpressionVisitor.Visit(ReadOnlyCollection`1&lt;Expression&gt; nodes)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitRuntimeVariablesRuntimeVariablesExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitSwitchCaseSwitchCase">
            <summary>Sets the shim of ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitSwitchSwitchExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitTryTryExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitTypeBinaryTypeBinaryExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitUnaryUnaryExpression">
            <summary>Sets the shim of ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimGotoExpression">
            <summary>Shim type of System.Linq.Expressions.GotoExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimGotoExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimGotoExpression.#ctor(System.Linq.Expressions.GotoExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimGotoExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimGotoExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of GotoExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.Constructor">
            <summary>Sets the shim of GotoExpression.GotoExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.KindGet">
            <summary>Sets the shim of GotoExpression.get_Kind()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.NodeTypeGet">
            <summary>Sets the shim of GotoExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.TargetGet">
            <summary>Sets the shim of GotoExpression.get_Target()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.TypeGet">
            <summary>Sets the shim of GotoExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.UpdateLabelTargetExpression">
            <summary>Sets the shim of GotoExpression.Update(LabelTarget target, Expression value)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.ValueGet">
            <summary>Sets the shim of GotoExpression.get_Value()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimGotoExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of GotoExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.AllInstances.Constructor">
            <summary>Sets the shim of GotoExpression.GotoExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.AllInstances.KindGet">
            <summary>Sets the shim of GotoExpression.get_Kind()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of GotoExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.AllInstances.TargetGet">
            <summary>Sets the shim of GotoExpression.get_Target()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.AllInstances.TypeGet">
            <summary>Sets the shim of GotoExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.AllInstances.UpdateLabelTargetExpression">
            <summary>Sets the shim of GotoExpression.Update(LabelTarget target, Expression value)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimGotoExpression.AllInstances.ValueGet">
            <summary>Sets the shim of GotoExpression.get_Value()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimIndexExpression">
            <summary>Shim type of System.Linq.Expressions.IndexExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimIndexExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimIndexExpression.#ctor(System.Linq.Expressions.IndexExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimIndexExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimIndexExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of IndexExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.ArgumentsGet">
            <summary>Sets the shim of IndexExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.Constructor">
            <summary>Sets the shim of IndexExpression.IndexExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.IndexerGet">
            <summary>Sets the shim of IndexExpression.get_Indexer()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.NodeTypeGet">
            <summary>Sets the shim of IndexExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.ObjectGet">
            <summary>Sets the shim of IndexExpression.get_Object()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.TypeGet">
            <summary>Sets the shim of IndexExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.UpdateExpressionIEnumerableOfExpression">
            <summary>Sets the shim of IndexExpression.Update(Expression object, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimIndexExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of IndexExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of IndexExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.AllInstances.Constructor">
            <summary>Sets the shim of IndexExpression.IndexExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.AllInstances.IndexerGet">
            <summary>Sets the shim of IndexExpression.get_Indexer()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of IndexExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.AllInstances.ObjectGet">
            <summary>Sets the shim of IndexExpression.get_Object()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.AllInstances.TypeGet">
            <summary>Sets the shim of IndexExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimIndexExpression.AllInstances.UpdateExpressionIEnumerableOfExpression">
            <summary>Sets the shim of IndexExpression.Update(Expression object, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimInvocationExpression">
            <summary>Shim type of System.Linq.Expressions.InvocationExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimInvocationExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimInvocationExpression.#ctor(System.Linq.Expressions.InvocationExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimInvocationExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimInvocationExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of InvocationExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.ArgumentsGet">
            <summary>Sets the shim of InvocationExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.Constructor">
            <summary>Sets the shim of InvocationExpression.InvocationExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.ExpressionGet">
            <summary>Sets the shim of InvocationExpression.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.NodeTypeGet">
            <summary>Sets the shim of InvocationExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.TypeGet">
            <summary>Sets the shim of InvocationExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.UpdateExpressionIEnumerableOfExpression">
            <summary>Sets the shim of InvocationExpression.Update(Expression expression, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimInvocationExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of InvocationExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of InvocationExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.AllInstances.Constructor">
            <summary>Sets the shim of InvocationExpression.InvocationExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.AllInstances.ExpressionGet">
            <summary>Sets the shim of InvocationExpression.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of InvocationExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.AllInstances.TypeGet">
            <summary>Sets the shim of InvocationExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimInvocationExpression.AllInstances.UpdateExpressionIEnumerableOfExpression">
            <summary>Sets the shim of InvocationExpression.Update(Expression expression, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimLabelExpression">
            <summary>Shim type of System.Linq.Expressions.LabelExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLabelExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLabelExpression.#ctor(System.Linq.Expressions.LabelExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLabelExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLabelExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of LabelExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.Constructor">
            <summary>Sets the shim of LabelExpression.LabelExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.DefaultValueGet">
            <summary>Sets the shim of LabelExpression.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.NodeTypeGet">
            <summary>Sets the shim of LabelExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.TargetGet">
            <summary>Sets the shim of LabelExpression.get_Target()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.TypeGet">
            <summary>Sets the shim of LabelExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.UpdateLabelTargetExpression">
            <summary>Sets the shim of LabelExpression.Update(LabelTarget target, Expression defaultValue)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimLabelExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of LabelExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.AllInstances.Constructor">
            <summary>Sets the shim of LabelExpression.LabelExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.AllInstances.DefaultValueGet">
            <summary>Sets the shim of LabelExpression.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of LabelExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.AllInstances.TargetGet">
            <summary>Sets the shim of LabelExpression.get_Target()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.AllInstances.TypeGet">
            <summary>Sets the shim of LabelExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelExpression.AllInstances.UpdateLabelTargetExpression">
            <summary>Sets the shim of LabelExpression.Update(LabelTarget target, Expression defaultValue)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimLabelTarget">
            <summary>Shim type of System.Linq.Expressions.LabelTarget</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLabelTarget.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLabelTarget.#ctor(System.Linq.Expressions.LabelTarget)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLabelTarget.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLabelTarget.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelTarget.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelTarget.Constructor">
            <summary>Sets the shim of LabelTarget.LabelTarget()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelTarget.NameGet">
            <summary>Sets the shim of LabelTarget.get_Name()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelTarget.ToString">
            <summary>Sets the shim of LabelTarget.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelTarget.TypeGet">
            <summary>Sets the shim of LabelTarget.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimLabelTarget.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelTarget.AllInstances.Constructor">
            <summary>Sets the shim of LabelTarget.LabelTarget()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelTarget.AllInstances.NameGet">
            <summary>Sets the shim of LabelTarget.get_Name()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelTarget.AllInstances.ToString01">
            <summary>Sets the shim of LabelTarget.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLabelTarget.AllInstances.TypeGet">
            <summary>Sets the shim of LabelTarget.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimLambdaExpression">
            <summary>Shim type of System.Linq.Expressions.LambdaExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLambdaExpression.#ctor(System.Linq.Expressions.LambdaExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLambdaExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLambdaExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.BodyGet">
            <summary>Sets the shim of LambdaExpression.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.Compile">
            <summary>Sets the shim of LambdaExpression.Compile()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.CompileDebugInfoGenerator">
            <summary>Sets the shim of LambdaExpression.Compile(DebugInfoGenerator debugInfoGenerator)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.CompileToMethodMethodBuilder">
            <summary>Sets the shim of LambdaExpression.CompileToMethod(MethodBuilder method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.CompileToMethodMethodBuilderDebugInfoGenerator">
            <summary>Sets the shim of LambdaExpression.CompileToMethod(MethodBuilder method, DebugInfoGenerator debugInfoGenerator)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.Constructor">
            <summary>Sets the shim of LambdaExpression.LambdaExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.NameGet">
            <summary>Sets the shim of LambdaExpression.get_Name()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.NodeTypeGet">
            <summary>Sets the shim of LambdaExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.ParametersGet">
            <summary>Sets the shim of LambdaExpression.get_Parameters()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.ReturnTypeGet">
            <summary>Sets the shim of LambdaExpression.get_ReturnType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.TailCallGet">
            <summary>Sets the shim of LambdaExpression.get_TailCall()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.TypeGet">
            <summary>Sets the shim of LambdaExpression.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.BodyGet">
            <summary>Sets the shim of LambdaExpression.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.Compile">
            <summary>Sets the shim of LambdaExpression.Compile()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.CompileDebugInfoGenerator">
            <summary>Sets the shim of LambdaExpression.Compile(DebugInfoGenerator debugInfoGenerator)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.CompileToMethodMethodBuilder">
            <summary>Sets the shim of LambdaExpression.CompileToMethod(MethodBuilder method)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.CompileToMethodMethodBuilderDebugInfoGenerator">
            <summary>Sets the shim of LambdaExpression.CompileToMethod(MethodBuilder method, DebugInfoGenerator debugInfoGenerator)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.Constructor">
            <summary>Sets the shim of LambdaExpression.LambdaExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.NameGet">
            <summary>Sets the shim of LambdaExpression.get_Name()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of LambdaExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.ParametersGet">
            <summary>Sets the shim of LambdaExpression.get_Parameters()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of LambdaExpression.get_ReturnType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.TailCallGet">
            <summary>Sets the shim of LambdaExpression.get_TailCall()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLambdaExpression.AllInstances.TypeGet">
            <summary>Sets the shim of LambdaExpression.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimListInitExpression">
            <summary>Shim type of System.Linq.Expressions.ListInitExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimListInitExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimListInitExpression.#ctor(System.Linq.Expressions.ListInitExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimListInitExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimListInitExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of ListInitExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.CanReduceGet">
            <summary>Sets the shim of ListInitExpression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.Constructor">
            <summary>Sets the shim of ListInitExpression.ListInitExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.InitializersGet">
            <summary>Sets the shim of ListInitExpression.get_Initializers()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.NewExpressionGet">
            <summary>Sets the shim of ListInitExpression.get_NewExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.NodeTypeGet">
            <summary>Sets the shim of ListInitExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.Reduce">
            <summary>Sets the shim of ListInitExpression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.TypeGet">
            <summary>Sets the shim of ListInitExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.UpdateNewExpressionIEnumerableOfElementInit">
            <summary>Sets the shim of ListInitExpression.Update(NewExpression newExpression, IEnumerable`1&lt;ElementInit&gt; initializers)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of ListInitExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances.CanReduceGet">
            <summary>Sets the shim of ListInitExpression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances.Constructor">
            <summary>Sets the shim of ListInitExpression.ListInitExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances.InitializersGet">
            <summary>Sets the shim of ListInitExpression.get_Initializers()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances.NewExpressionGet">
            <summary>Sets the shim of ListInitExpression.get_NewExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of ListInitExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances.Reduce">
            <summary>Sets the shim of ListInitExpression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances.TypeGet">
            <summary>Sets the shim of ListInitExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimListInitExpression.AllInstances.UpdateNewExpressionIEnumerableOfElementInit">
            <summary>Sets the shim of ListInitExpression.Update(NewExpression newExpression, IEnumerable`1&lt;ElementInit&gt; initializers)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimLoopExpression">
            <summary>Shim type of System.Linq.Expressions.LoopExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLoopExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLoopExpression.#ctor(System.Linq.Expressions.LoopExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLoopExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimLoopExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of LoopExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.BodyGet">
            <summary>Sets the shim of LoopExpression.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.BreakLabelGet">
            <summary>Sets the shim of LoopExpression.get_BreakLabel()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.Constructor">
            <summary>Sets the shim of LoopExpression.LoopExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.ContinueLabelGet">
            <summary>Sets the shim of LoopExpression.get_ContinueLabel()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.NodeTypeGet">
            <summary>Sets the shim of LoopExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.TypeGet">
            <summary>Sets the shim of LoopExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.UpdateLabelTargetLabelTargetExpression">
            <summary>Sets the shim of LoopExpression.Update(LabelTarget breakLabel, LabelTarget continueLabel, Expression body)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimLoopExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of LoopExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.AllInstances.BodyGet">
            <summary>Sets the shim of LoopExpression.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.AllInstances.BreakLabelGet">
            <summary>Sets the shim of LoopExpression.get_BreakLabel()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.AllInstances.Constructor">
            <summary>Sets the shim of LoopExpression.LoopExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.AllInstances.ContinueLabelGet">
            <summary>Sets the shim of LoopExpression.get_ContinueLabel()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of LoopExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.AllInstances.TypeGet">
            <summary>Sets the shim of LoopExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimLoopExpression.AllInstances.UpdateLabelTargetLabelTargetExpression">
            <summary>Sets the shim of LoopExpression.Update(LabelTarget breakLabel, LabelTarget continueLabel, Expression body)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberAssignment">
            <summary>Shim type of System.Linq.Expressions.MemberAssignment</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberAssignment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberAssignment.#ctor(System.Linq.Expressions.MemberAssignment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberAssignment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberAssignment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberAssignment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberAssignment.Constructor">
            <summary>Sets the shim of MemberAssignment.MemberAssignment()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberAssignment.ExpressionGet">
            <summary>Sets the shim of MemberAssignment.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberAssignment.UpdateExpression">
            <summary>Sets the shim of MemberAssignment.Update(Expression expression)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberAssignment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberAssignment.AllInstances.Constructor">
            <summary>Sets the shim of MemberAssignment.MemberAssignment()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberAssignment.AllInstances.ExpressionGet">
            <summary>Sets the shim of MemberAssignment.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberAssignment.AllInstances.UpdateExpression">
            <summary>Sets the shim of MemberAssignment.Update(Expression expression)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberBinding">
            <summary>Shim type of System.Linq.Expressions.MemberBinding</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberBinding.#ctor(System.Linq.Expressions.MemberBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberBinding.BindingTypeGet">
            <summary>Sets the shim of MemberBinding.get_BindingType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberBinding.ConstructorMemberBindingTypeMemberInfo">
            <summary>Sets the shim of MemberBinding.MemberBinding(MemberBindingType type, MemberInfo member)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberBinding.MemberGet">
            <summary>Sets the shim of MemberBinding.get_Member()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberBinding.ToString">
            <summary>Sets the shim of MemberBinding.ToString()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberBinding.AllInstances.BindingTypeGet">
            <summary>Sets the shim of MemberBinding.get_BindingType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberBinding.AllInstances.MemberGet">
            <summary>Sets the shim of MemberBinding.get_Member()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberBinding.AllInstances.ToString01">
            <summary>Sets the shim of MemberBinding.ToString()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberExpression">
            <summary>Shim type of System.Linq.Expressions.MemberExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberExpression.#ctor(System.Linq.Expressions.MemberExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of MemberExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.Constructor">
            <summary>Sets the shim of MemberExpression.MemberExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.ExpressionGet">
            <summary>Sets the shim of MemberExpression.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.MemberGet">
            <summary>Sets the shim of MemberExpression.get_Member()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.NodeTypeGet">
            <summary>Sets the shim of MemberExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.UpdateExpression">
            <summary>Sets the shim of MemberExpression.Update(Expression expression)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of MemberExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.AllInstances.Constructor">
            <summary>Sets the shim of MemberExpression.MemberExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.AllInstances.ExpressionGet">
            <summary>Sets the shim of MemberExpression.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.AllInstances.MemberGet">
            <summary>Sets the shim of MemberExpression.get_Member()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of MemberExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberExpression.AllInstances.UpdateExpression">
            <summary>Sets the shim of MemberExpression.Update(Expression expression)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberInitExpression">
            <summary>Shim type of System.Linq.Expressions.MemberInitExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberInitExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberInitExpression.#ctor(System.Linq.Expressions.MemberInitExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberInitExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberInitExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of MemberInitExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.BindingsGet">
            <summary>Sets the shim of MemberInitExpression.get_Bindings()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.CanReduceGet">
            <summary>Sets the shim of MemberInitExpression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.Constructor">
            <summary>Sets the shim of MemberInitExpression.MemberInitExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.NewExpressionGet">
            <summary>Sets the shim of MemberInitExpression.get_NewExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.NodeTypeGet">
            <summary>Sets the shim of MemberInitExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.Reduce">
            <summary>Sets the shim of MemberInitExpression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.TypeGet">
            <summary>Sets the shim of MemberInitExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.UpdateNewExpressionIEnumerableOfMemberBinding">
            <summary>Sets the shim of MemberInitExpression.Update(NewExpression newExpression, IEnumerable`1&lt;MemberBinding&gt; bindings)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of MemberInitExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances.BindingsGet">
            <summary>Sets the shim of MemberInitExpression.get_Bindings()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances.CanReduceGet">
            <summary>Sets the shim of MemberInitExpression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances.Constructor">
            <summary>Sets the shim of MemberInitExpression.MemberInitExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances.NewExpressionGet">
            <summary>Sets the shim of MemberInitExpression.get_NewExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of MemberInitExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances.Reduce">
            <summary>Sets the shim of MemberInitExpression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances.TypeGet">
            <summary>Sets the shim of MemberInitExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberInitExpression.AllInstances.UpdateNewExpressionIEnumerableOfMemberBinding">
            <summary>Sets the shim of MemberInitExpression.Update(NewExpression newExpression, IEnumerable`1&lt;MemberBinding&gt; bindings)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberListBinding">
            <summary>Shim type of System.Linq.Expressions.MemberListBinding</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberListBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberListBinding.#ctor(System.Linq.Expressions.MemberListBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberListBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberListBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberListBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberListBinding.Constructor">
            <summary>Sets the shim of MemberListBinding.MemberListBinding()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberListBinding.InitializersGet">
            <summary>Sets the shim of MemberListBinding.get_Initializers()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberListBinding.UpdateIEnumerableOfElementInit">
            <summary>Sets the shim of MemberListBinding.Update(IEnumerable`1&lt;ElementInit&gt; initializers)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberListBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberListBinding.AllInstances.Constructor">
            <summary>Sets the shim of MemberListBinding.MemberListBinding()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberListBinding.AllInstances.InitializersGet">
            <summary>Sets the shim of MemberListBinding.get_Initializers()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberListBinding.AllInstances.UpdateIEnumerableOfElementInit">
            <summary>Sets the shim of MemberListBinding.Update(IEnumerable`1&lt;ElementInit&gt; initializers)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberMemberBinding">
            <summary>Shim type of System.Linq.Expressions.MemberMemberBinding</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.#ctor(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.BindingsGet">
            <summary>Sets the shim of MemberMemberBinding.get_Bindings()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.Constructor">
            <summary>Sets the shim of MemberMemberBinding.MemberMemberBinding()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.UpdateIEnumerableOfMemberBinding">
            <summary>Sets the shim of MemberMemberBinding.Update(IEnumerable`1&lt;MemberBinding&gt; bindings)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.AllInstances.BindingsGet">
            <summary>Sets the shim of MemberMemberBinding.get_Bindings()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.AllInstances.Constructor">
            <summary>Sets the shim of MemberMemberBinding.MemberMemberBinding()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMemberMemberBinding.AllInstances.UpdateIEnumerableOfMemberBinding">
            <summary>Sets the shim of MemberMemberBinding.Update(IEnumerable`1&lt;MemberBinding&gt; bindings)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMethodCallExpression">
            <summary>Shim type of System.Linq.Expressions.MethodCallExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMethodCallExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMethodCallExpression.#ctor(System.Linq.Expressions.MethodCallExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMethodCallExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimMethodCallExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of MethodCallExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.ArgumentsGet">
            <summary>Sets the shim of MethodCallExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.Constructor">
            <summary>Sets the shim of MethodCallExpression.MethodCallExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.MethodGet">
            <summary>Sets the shim of MethodCallExpression.get_Method()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.NodeTypeGet">
            <summary>Sets the shim of MethodCallExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.ObjectGet">
            <summary>Sets the shim of MethodCallExpression.get_Object()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.TypeGet">
            <summary>Sets the shim of MethodCallExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.UpdateExpressionIEnumerableOfExpression">
            <summary>Sets the shim of MethodCallExpression.Update(Expression object, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of MethodCallExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of MethodCallExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AllInstances.Constructor">
            <summary>Sets the shim of MethodCallExpression.MethodCallExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AllInstances.MethodGet">
            <summary>Sets the shim of MethodCallExpression.get_Method()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of MethodCallExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AllInstances.ObjectGet">
            <summary>Sets the shim of MethodCallExpression.get_Object()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AllInstances.TypeGet">
            <summary>Sets the shim of MethodCallExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimMethodCallExpression.AllInstances.UpdateExpressionIEnumerableOfExpression">
            <summary>Sets the shim of MethodCallExpression.Update(Expression object, IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimNewArrayExpression">
            <summary>Shim type of System.Linq.Expressions.NewArrayExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimNewArrayExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimNewArrayExpression.#ctor(System.Linq.Expressions.NewArrayExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimNewArrayExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimNewArrayExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of NewArrayExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.Constructor">
            <summary>Sets the shim of NewArrayExpression.NewArrayExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.ExpressionsGet">
            <summary>Sets the shim of NewArrayExpression.get_Expressions()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.TypeGet">
            <summary>Sets the shim of NewArrayExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.UpdateIEnumerableOfExpression">
            <summary>Sets the shim of NewArrayExpression.Update(IEnumerable`1&lt;Expression&gt; expressions)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimNewArrayExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of NewArrayExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.AllInstances.Constructor">
            <summary>Sets the shim of NewArrayExpression.NewArrayExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.AllInstances.ExpressionsGet">
            <summary>Sets the shim of NewArrayExpression.get_Expressions()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.AllInstances.TypeGet">
            <summary>Sets the shim of NewArrayExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewArrayExpression.AllInstances.UpdateIEnumerableOfExpression">
            <summary>Sets the shim of NewArrayExpression.Update(IEnumerable`1&lt;Expression&gt; expressions)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimNewExpression">
            <summary>Shim type of System.Linq.Expressions.NewExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimNewExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimNewExpression.#ctor(System.Linq.Expressions.NewExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimNewExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimNewExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of NewExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.ArgumentsGet">
            <summary>Sets the shim of NewExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.Constructor">
            <summary>Sets the shim of NewExpression.NewExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.ConstructorGet">
            <summary>Sets the shim of NewExpression.get_Constructor()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.MembersGet">
            <summary>Sets the shim of NewExpression.get_Members()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.NodeTypeGet">
            <summary>Sets the shim of NewExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.TypeGet">
            <summary>Sets the shim of NewExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.UpdateIEnumerableOfExpression">
            <summary>Sets the shim of NewExpression.Update(IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimNewExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of NewExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of NewExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.AllInstances.Constructor">
            <summary>Sets the shim of NewExpression.NewExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.AllInstances.ConstructorGet">
            <summary>Sets the shim of NewExpression.get_Constructor()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.AllInstances.MembersGet">
            <summary>Sets the shim of NewExpression.get_Members()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of NewExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.AllInstances.TypeGet">
            <summary>Sets the shim of NewExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimNewExpression.AllInstances.UpdateIEnumerableOfExpression">
            <summary>Sets the shim of NewExpression.Update(IEnumerable`1&lt;Expression&gt; arguments)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimParameterExpression">
            <summary>Shim type of System.Linq.Expressions.ParameterExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimParameterExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimParameterExpression.#ctor(System.Linq.Expressions.ParameterExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimParameterExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimParameterExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of ParameterExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.Constructor">
            <summary>Sets the shim of ParameterExpression.ParameterExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.IsByRefGet">
            <summary>Sets the shim of ParameterExpression.get_IsByRef()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.NameGet">
            <summary>Sets the shim of ParameterExpression.get_Name()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.NodeTypeGet">
            <summary>Sets the shim of ParameterExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.TypeGet">
            <summary>Sets the shim of ParameterExpression.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimParameterExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of ParameterExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.AllInstances.Constructor">
            <summary>Sets the shim of ParameterExpression.ParameterExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.AllInstances.IsByRefGet">
            <summary>Sets the shim of ParameterExpression.get_IsByRef()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.AllInstances.NameGet">
            <summary>Sets the shim of ParameterExpression.get_Name()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of ParameterExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimParameterExpression.AllInstances.TypeGet">
            <summary>Sets the shim of ParameterExpression.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression">
            <summary>Shim type of System.Linq.Expressions.RuntimeVariablesExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.#ctor(System.Linq.Expressions.RuntimeVariablesExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of RuntimeVariablesExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.Constructor">
            <summary>Sets the shim of RuntimeVariablesExpression.RuntimeVariablesExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.NodeTypeGet">
            <summary>Sets the shim of RuntimeVariablesExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.TypeGet">
            <summary>Sets the shim of RuntimeVariablesExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.UpdateIEnumerableOfParameterExpression">
            <summary>Sets the shim of RuntimeVariablesExpression.Update(IEnumerable`1&lt;ParameterExpression&gt; variables)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.VariablesGet">
            <summary>Sets the shim of RuntimeVariablesExpression.get_Variables()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of RuntimeVariablesExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.AllInstances.Constructor">
            <summary>Sets the shim of RuntimeVariablesExpression.RuntimeVariablesExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of RuntimeVariablesExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.AllInstances.TypeGet">
            <summary>Sets the shim of RuntimeVariablesExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.AllInstances.UpdateIEnumerableOfParameterExpression">
            <summary>Sets the shim of RuntimeVariablesExpression.Update(IEnumerable`1&lt;ParameterExpression&gt; variables)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimRuntimeVariablesExpression.AllInstances.VariablesGet">
            <summary>Sets the shim of RuntimeVariablesExpression.get_Variables()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimSwitchCase">
            <summary>Shim type of System.Linq.Expressions.SwitchCase</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSwitchCase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSwitchCase.#ctor(System.Linq.Expressions.SwitchCase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSwitchCase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSwitchCase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.BodyGet">
            <summary>Sets the shim of SwitchCase.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.Constructor">
            <summary>Sets the shim of SwitchCase.SwitchCase()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.TestValuesGet">
            <summary>Sets the shim of SwitchCase.get_TestValues()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.ToString">
            <summary>Sets the shim of SwitchCase.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.UpdateIEnumerableOfExpressionExpression">
            <summary>Sets the shim of SwitchCase.Update(IEnumerable`1&lt;Expression&gt; testValues, Expression body)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimSwitchCase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.AllInstances.BodyGet">
            <summary>Sets the shim of SwitchCase.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.AllInstances.Constructor">
            <summary>Sets the shim of SwitchCase.SwitchCase()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.AllInstances.TestValuesGet">
            <summary>Sets the shim of SwitchCase.get_TestValues()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.AllInstances.ToString01">
            <summary>Sets the shim of SwitchCase.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchCase.AllInstances.UpdateIEnumerableOfExpressionExpression">
            <summary>Sets the shim of SwitchCase.Update(IEnumerable`1&lt;Expression&gt; testValues, Expression body)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimSwitchExpression">
            <summary>Shim type of System.Linq.Expressions.SwitchExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSwitchExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSwitchExpression.#ctor(System.Linq.Expressions.SwitchExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSwitchExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSwitchExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of SwitchExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.CasesGet">
            <summary>Sets the shim of SwitchExpression.get_Cases()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.ComparisonGet">
            <summary>Sets the shim of SwitchExpression.get_Comparison()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.Constructor">
            <summary>Sets the shim of SwitchExpression.SwitchExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.DefaultBodyGet">
            <summary>Sets the shim of SwitchExpression.get_DefaultBody()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.NodeTypeGet">
            <summary>Sets the shim of SwitchExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.SwitchValueGet">
            <summary>Sets the shim of SwitchExpression.get_SwitchValue()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.TypeGet">
            <summary>Sets the shim of SwitchExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.UpdateExpressionIEnumerableOfSwitchCaseExpression">
            <summary>Sets the shim of SwitchExpression.Update(Expression switchValue, IEnumerable`1&lt;SwitchCase&gt; cases, Expression defaultBody)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of SwitchExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances.CasesGet">
            <summary>Sets the shim of SwitchExpression.get_Cases()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances.ComparisonGet">
            <summary>Sets the shim of SwitchExpression.get_Comparison()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances.Constructor">
            <summary>Sets the shim of SwitchExpression.SwitchExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances.DefaultBodyGet">
            <summary>Sets the shim of SwitchExpression.get_DefaultBody()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of SwitchExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances.SwitchValueGet">
            <summary>Sets the shim of SwitchExpression.get_SwitchValue()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances.TypeGet">
            <summary>Sets the shim of SwitchExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSwitchExpression.AllInstances.UpdateExpressionIEnumerableOfSwitchCaseExpression">
            <summary>Sets the shim of SwitchExpression.Update(Expression switchValue, IEnumerable`1&lt;SwitchCase&gt; cases, Expression defaultBody)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo">
            <summary>Shim type of System.Linq.Expressions.SymbolDocumentInfo</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.#ctor(System.Linq.Expressions.SymbolDocumentInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.Constructor">
            <summary>Sets the shim of SymbolDocumentInfo.SymbolDocumentInfo()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.DocumentTypeGet">
            <summary>Sets the shim of SymbolDocumentInfo.get_DocumentType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.FileNameGet">
            <summary>Sets the shim of SymbolDocumentInfo.get_FileName()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.LanguageGet">
            <summary>Sets the shim of SymbolDocumentInfo.get_Language()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.LanguageVendorGet">
            <summary>Sets the shim of SymbolDocumentInfo.get_LanguageVendor()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.AllInstances.Constructor">
            <summary>Sets the shim of SymbolDocumentInfo.SymbolDocumentInfo()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.AllInstances.DocumentTypeGet">
            <summary>Sets the shim of SymbolDocumentInfo.get_DocumentType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.AllInstances.FileNameGet">
            <summary>Sets the shim of SymbolDocumentInfo.get_FileName()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.AllInstances.LanguageGet">
            <summary>Sets the shim of SymbolDocumentInfo.get_Language()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimSymbolDocumentInfo.AllInstances.LanguageVendorGet">
            <summary>Sets the shim of SymbolDocumentInfo.get_LanguageVendor()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimTryExpression">
            <summary>Shim type of System.Linq.Expressions.TryExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimTryExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimTryExpression.#ctor(System.Linq.Expressions.TryExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimTryExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimTryExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of TryExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.BodyGet">
            <summary>Sets the shim of TryExpression.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.Constructor">
            <summary>Sets the shim of TryExpression.TryExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.FaultGet">
            <summary>Sets the shim of TryExpression.get_Fault()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.FinallyGet">
            <summary>Sets the shim of TryExpression.get_Finally()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.HandlersGet">
            <summary>Sets the shim of TryExpression.get_Handlers()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.NodeTypeGet">
            <summary>Sets the shim of TryExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.TypeGet">
            <summary>Sets the shim of TryExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.UpdateExpressionIEnumerableOfCatchBlockExpressionExpression">
            <summary>Sets the shim of TryExpression.Update(Expression body, IEnumerable`1&lt;CatchBlock&gt; handlers, Expression finally, Expression fault)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of TryExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances.BodyGet">
            <summary>Sets the shim of TryExpression.get_Body()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances.Constructor">
            <summary>Sets the shim of TryExpression.TryExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances.FaultGet">
            <summary>Sets the shim of TryExpression.get_Fault()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances.FinallyGet">
            <summary>Sets the shim of TryExpression.get_Finally()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances.HandlersGet">
            <summary>Sets the shim of TryExpression.get_Handlers()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of TryExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances.TypeGet">
            <summary>Sets the shim of TryExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTryExpression.AllInstances.UpdateExpressionIEnumerableOfCatchBlockExpressionExpression">
            <summary>Sets the shim of TryExpression.Update(Expression body, IEnumerable`1&lt;CatchBlock&gt; handlers, Expression finally, Expression fault)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression">
            <summary>Shim type of System.Linq.Expressions.TypeBinaryExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.#ctor(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of TypeBinaryExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.Constructor">
            <summary>Sets the shim of TypeBinaryExpression.TypeBinaryExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.ExpressionGet">
            <summary>Sets the shim of TypeBinaryExpression.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.NodeTypeGet">
            <summary>Sets the shim of TypeBinaryExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.TypeGet">
            <summary>Sets the shim of TypeBinaryExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.TypeOperandGet">
            <summary>Sets the shim of TypeBinaryExpression.get_TypeOperand()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.UpdateExpression">
            <summary>Sets the shim of TypeBinaryExpression.Update(Expression expression)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of TypeBinaryExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.AllInstances.Constructor">
            <summary>Sets the shim of TypeBinaryExpression.TypeBinaryExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.AllInstances.ExpressionGet">
            <summary>Sets the shim of TypeBinaryExpression.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of TypeBinaryExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.AllInstances.TypeGet">
            <summary>Sets the shim of TypeBinaryExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.AllInstances.TypeOperandGet">
            <summary>Sets the shim of TypeBinaryExpression.get_TypeOperand()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimTypeBinaryExpression.AllInstances.UpdateExpression">
            <summary>Sets the shim of TypeBinaryExpression.Update(Expression expression)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimUnaryExpression">
            <summary>Shim type of System.Linq.Expressions.UnaryExpression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimUnaryExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimUnaryExpression.#ctor(System.Linq.Expressions.UnaryExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimUnaryExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.ShimUnaryExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AcceptExpressionVisitor">
            <summary>Sets the shim of UnaryExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.CanReduceGet">
            <summary>Sets the shim of UnaryExpression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.Constructor">
            <summary>Sets the shim of UnaryExpression.UnaryExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.IsLiftedGet">
            <summary>Sets the shim of UnaryExpression.get_IsLifted()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.IsLiftedToNullGet">
            <summary>Sets the shim of UnaryExpression.get_IsLiftedToNull()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.MethodGet">
            <summary>Sets the shim of UnaryExpression.get_Method()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.NodeTypeGet">
            <summary>Sets the shim of UnaryExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.OperandGet">
            <summary>Sets the shim of UnaryExpression.get_Operand()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.Reduce">
            <summary>Sets the shim of UnaryExpression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.TypeGet">
            <summary>Sets the shim of UnaryExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.UpdateExpression">
            <summary>Sets the shim of UnaryExpression.Update(Expression operand)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.AcceptExpressionVisitor">
            <summary>Sets the shim of UnaryExpression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.CanReduceGet">
            <summary>Sets the shim of UnaryExpression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.Constructor">
            <summary>Sets the shim of UnaryExpression.UnaryExpression()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.IsLiftedGet">
            <summary>Sets the shim of UnaryExpression.get_IsLifted()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.IsLiftedToNullGet">
            <summary>Sets the shim of UnaryExpression.get_IsLiftedToNull()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.MethodGet">
            <summary>Sets the shim of UnaryExpression.get_Method()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.NodeTypeGet">
            <summary>Sets the shim of UnaryExpression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.OperandGet">
            <summary>Sets the shim of UnaryExpression.get_Operand()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.Reduce">
            <summary>Sets the shim of UnaryExpression.Reduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.TypeGet">
            <summary>Sets the shim of UnaryExpression.get_Type()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.ShimUnaryExpression.AllInstances.UpdateExpression">
            <summary>Sets the shim of UnaryExpression.Update(Expression operand)</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.StubExpression">
            <summary>Stub type of System.Linq.Expressions.Expression</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpression.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>Sets the stub of Expression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpression.AcceptExpressionVisitor">
            <summary>Sets the stub of Expression.Accept(ExpressionVisitor visitor)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpression.CanReduceGet">
            <summary>Sets the stub of Expression.get_CanReduce()</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpression.InitializeStub">
            <summary>Initializes a new instance of type StubExpression</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpression.NodeTypeGet">
            <summary>Sets the stub of Expression.get_NodeType()</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpression.Reduce">
            <summary>Sets the stub of Expression.Reduce()</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpression.Reduce01">
            <summary>Sets the stub of Expression.Reduce()</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpression.ToString">
            <summary>Sets the stub of Expression.ToString()</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpression.ToString01">
            <summary>Sets the stub of Expression.ToString()</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpression.TypeGet">
            <summary>Sets the stub of Expression.get_Type()</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>Sets the stub of Expression.VisitChildren(ExpressionVisitor visitor)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpression.VisitChildrenExpressionVisitor">
            <summary>Sets the stub of Expression.VisitChildren(ExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubExpression.CanReduce">
            <summary>Sets the stub of Expression.get_CanReduce()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubExpression.NodeType">
            <summary>Sets the stub of Expression.get_NodeType()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubExpression.Type">
            <summary>Sets the stub of Expression.get_Type()</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.StubExpressionVisitor">
            <summary>Stub type of System.Linq.Expressions.ExpressionVisitor</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubExpressionVisitor</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitBinaryBinaryExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitBlockBlockExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
            <summary>Sets the stub of ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitCatchBlockCatchBlock">
            <summary>Sets the stub of ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitConditionalConditionalExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitConstantConstantExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitDebugInfoDebugInfoExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitDefaultDefaultExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitDynamicDynamicExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>Sets the stub of ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitElementInitElementInit">
            <summary>Sets the stub of ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitExtensionExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitGotoGotoExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitIndexIndexExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitInvocationInvocationExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitLabelLabelExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)">
            <summary>Sets the stub of ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitLabelTargetLabelTarget">
            <summary>Sets the stub of ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>Sets the stub of ExpressionVisitor.VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitLambdaOf1ExpressionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression})">
            <summary>Sets stubs of VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitListInitListInitExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitLoopLoopExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberAssignmentMemberAssignment">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberBindingMemberBinding">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberInitMemberInitExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberListBindingMemberListBinding">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMemberMemberExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitMethodCallMethodCallExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitNewArrayNewArrayExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitNewNewExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitParameterParameterExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitRuntimeVariablesRuntimeVariablesExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)">
            <summary>Sets the stub of ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitSwitchCaseSwitchCase">
            <summary>Sets the stub of ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitSwitchSwitchExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitTryTryExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitTypeBinaryTypeBinaryExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubExpressionVisitor.VisitUnaryUnaryExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubExpressionVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubExpressionVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubExpressionVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Linq.Expressions.Fakes.StubMemberBinding">
            <summary>Stub type of System.Linq.Expressions.MemberBinding</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubMemberBinding.#ctor(System.Linq.Expressions.MemberBindingType,System.Reflection.MemberInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubMemberBinding.InitializeStub">
            <summary>Initializes a new instance of type StubMemberBinding</summary>
        </member>
        <member name="M:System.Linq.Expressions.Fakes.StubMemberBinding.ToString">
            <summary>Sets the stub of MemberBinding.ToString()</summary>
        </member>
        <member name="F:System.Linq.Expressions.Fakes.StubMemberBinding.ToString01">
            <summary>Sets the stub of MemberBinding.ToString()</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubMemberBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubMemberBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Linq.Expressions.Fakes.StubMemberBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimEnumerable">
            <summary>Shim type of System.Linq.Enumerable</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AggregateOf1IEnumerableOfM0FuncOfM0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0},``0})">
            <summary>Sets the shim of Enumerable.Aggregate(IEnumerable`1&lt;!!0&gt; source, Func`3&lt;!!0,!!0,!!0&gt; func)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AggregateOf2IEnumerableOfM0M1FuncOfM1M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},``1})">
            <summary>Sets the shim of Enumerable.Aggregate(IEnumerable`1&lt;!!0&gt; source, !!1 seed, Func`3&lt;!!1,!!0,!!1&gt; func)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AggregateOf3IEnumerableOfM0M1FuncOfM1M0M1FuncOfM1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2},``2})">
            <summary>Sets the shim of Enumerable.Aggregate(IEnumerable`1&lt;!!0&gt; source, !!1 seed, Func`3&lt;!!1,!!0,!!1&gt; func, Func`2&lt;!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AllOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean})">
            <summary>Sets the shim of Enumerable.All(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AnyOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of Enumerable.Any(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AnyOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean})">
            <summary>Sets the shim of Enumerable.Any(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AsEnumerableOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.AsEnumerable(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal},System.Decimal})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Decimal&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Double&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32},System.Double})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Int32&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64},System.Double})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Int64&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}},System.Nullable{System.Single}})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.AverageOf1IEnumerableOfM0FuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single},System.Single})">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Single&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.CastOf1IEnumerable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IEnumerable,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Cast(IEnumerable source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ConcatOf1IEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Concat(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ContainsOf1IEnumerableOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,System.Boolean})">
            <summary>Sets the shim of Enumerable.Contains(IEnumerable`1&lt;!!0&gt; source, !!0 value)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ContainsOf1IEnumerableOfM0M0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the shim of Enumerable.Contains(IEnumerable`1&lt;!!0&gt; source, !!0 value, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.CountOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Int32})">
            <summary>Sets the shim of Enumerable.Count(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.CountOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32})">
            <summary>Sets the shim of Enumerable.Count(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.DefaultIfEmptyOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.DefaultIfEmpty(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.DefaultIfEmptyOf1IEnumerableOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.DefaultIfEmpty(IEnumerable`1&lt;!!0&gt; source, !!0 defaultValue)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.DistinctOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Distinct(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.DistinctOf1IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Distinct(IEnumerable`1&lt;!!0&gt; source, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ElementAtOf1IEnumerableOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Int32,``0})">
            <summary>Sets the shim of Enumerable.ElementAt(IEnumerable`1&lt;!!0&gt; source, Int32 index)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ElementAtOrDefaultOf1IEnumerableOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Int32,``0})">
            <summary>Sets the shim of Enumerable.ElementAtOrDefault(IEnumerable`1&lt;!!0&gt; source, Int32 index)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.EmptyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Empty()</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ExceptOf1IEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Except(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ExceptOf1IEnumerableOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Except(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.FirstOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the shim of Enumerable.First(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.FirstOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of Enumerable.First(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.FirstOrDefaultOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the shim of Enumerable.FirstOrDefault(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.FirstOrDefaultOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of Enumerable.FirstOrDefault(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupByOf2IEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``0}}})">
            <summary>Sets the shim of Enumerable.GroupBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupByOf2IEnumerableOfM0FuncOfM0M1IEqualityComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``0}}})">
            <summary>Sets the shim of Enumerable.GroupBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupByOf3IEnumerableOfM0FuncOfM0M1FuncOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``2}}})">
            <summary>Sets the shim of Enumerable.GroupBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupByOf3IEnumerableOfM0FuncOfM0M1FuncOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``2}}})">
            <summary>Sets the shim of Enumerable.GroupBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupByOf3IEnumerableOfM0FuncOfM0M1FuncOfM1IEnumerableOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEnumerable{``2}})">
            <summary>Sets the shim of Enumerable.GroupBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`3&lt;!!1,IEnumerable`1&lt;!!0&gt;,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupByOf3IEnumerableOfM0FuncOfM0M1FuncOfM1IEnumerableOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{``2}})">
            <summary>Sets the shim of Enumerable.GroupBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`3&lt;!!1,IEnumerable`1&lt;!!0&gt;,!!2&gt; resultSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupByOf4IEnumerableOfM0FuncOfM0M1FuncOfM0M2FuncOfM1IEnumerableOfM2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEnumerable{``3}})">
            <summary>Sets the shim of Enumerable.GroupBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, Func`3&lt;!!1,IEnumerable`1&lt;!!2&gt;,!!3&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupByOf4IEnumerableOfM0FuncOfM0M1FuncOfM0M2FuncOfM1IEnumerableOfM2M3IEqualityComparerOfM1``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{``3}})">
            <summary>Sets the shim of Enumerable.GroupBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, Func`3&lt;!!1,IEnumerable`1&lt;!!2&gt;,!!3&gt; resultSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupJoinOf4IEnumerableOfM0IEnumerableOfM1FuncOfM0M2FuncOfM1M2FuncOfM0IEnumerableOfM1M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEnumerable{``3}})">
            <summary>Sets the shim of Enumerable.GroupJoin(IEnumerable`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,IEnumerable`1&lt;!!1&gt;,!!3&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.GroupJoinOf4IEnumerableOfM0IEnumerableOfM1FuncOfM0M2FuncOfM1M2FuncOfM0IEnumerableOfM1M3IEqualityComparerOfM2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2},System.Collections.Generic.IEnumerable{``3}})">
            <summary>Sets the shim of Enumerable.GroupJoin(IEnumerable`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,IEnumerable`1&lt;!!1&gt;,!!3&gt; resultSelector, IEqualityComparer`1&lt;!!2&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.IntersectOf1IEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Intersect(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.IntersectOf1IEnumerableOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Intersect(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.JoinOf4IEnumerableOfM0IEnumerableOfM1FuncOfM0M2FuncOfM1M2FuncOfM0M1M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEnumerable{``3}})">
            <summary>Sets the shim of Enumerable.Join(IEnumerable`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,!!1,!!3&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.JoinOf4IEnumerableOfM0IEnumerableOfM1FuncOfM0M2FuncOfM1M2FuncOfM0M1M3IEqualityComparerOfM2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2},System.Collections.Generic.IEnumerable{``3}})">
            <summary>Sets the shim of Enumerable.Join(IEnumerable`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,!!1,!!3&gt; resultSelector, IEqualityComparer`1&lt;!!2&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.LastOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the shim of Enumerable.Last(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.LastOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of Enumerable.Last(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.LastOrDefaultOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the shim of Enumerable.LastOrDefault(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.LastOrDefaultOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of Enumerable.LastOrDefault(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.LongCountOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Int64})">
            <summary>Sets the shim of Enumerable.LongCount(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.LongCountOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int64})">
            <summary>Sets the shim of Enumerable.LongCount(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal},System.Decimal})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Decimal&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Double&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32},System.Int32})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Int32&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64},System.Int64})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Int64&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}},System.Nullable{System.Int32}})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}},System.Nullable{System.Int64}})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}},System.Nullable{System.Single}})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf1IEnumerableOfM0FuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single},System.Single})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Single&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MaxOf2IEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``1})">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal},System.Decimal})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Decimal&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Double&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32},System.Int32})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Int32&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64},System.Int64})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Int64&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}},System.Nullable{System.Int32}})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}},System.Nullable{System.Int64}})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}},System.Nullable{System.Single}})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf1IEnumerableOfM0FuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single},System.Single})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Single&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.MinOf2IEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``1})">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.OfTypeOf1IEnumerable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IEnumerable,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.OfType(IEnumerable source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.OrderByDescendingOf2IEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.OrderByDescending(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.OrderByDescendingOf2IEnumerableOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.OrderByDescending(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.OrderByOf2IEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.OrderBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.OrderByOf2IEnumerableOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.OrderBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.RepeatOf1M0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Repeat(!!0 element, Int32 count)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ReverseOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Reverse(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SelectManyOf2IEnumerableOfM0FuncOfM0IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the shim of Enumerable.SelectMany(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,IEnumerable`1&lt;!!1&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SelectManyOf2IEnumerableOfM0FuncOfM0Int32IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the shim of Enumerable.SelectMany(IEnumerable`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,IEnumerable`1&lt;!!1&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SelectManyOf3IEnumerableOfM0FuncOfM0IEnumerableOfM1FuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2},System.Collections.Generic.IEnumerable{``2}})">
            <summary>Sets the shim of Enumerable.SelectMany(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,IEnumerable`1&lt;!!1&gt;&gt; collectionSelector, Func`3&lt;!!0,!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SelectManyOf3IEnumerableOfM0FuncOfM0Int32IEnumerableOfM1FuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2},System.Collections.Generic.IEnumerable{``2}})">
            <summary>Sets the shim of Enumerable.SelectMany(IEnumerable`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,IEnumerable`1&lt;!!1&gt;&gt; collectionSelector, Func`3&lt;!!0,!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SelectOf2IEnumerableOfM0FuncOfM0Int32M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the shim of Enumerable.Select(IEnumerable`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,!!1&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SelectOf2IEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the shim of Enumerable.Select(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SequenceEqualOf1IEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of Enumerable.SequenceEqual(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SequenceEqualOf1IEnumerableOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the shim of Enumerable.SequenceEqual(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SingleOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the shim of Enumerable.Single(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SingleOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of Enumerable.Single(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SingleOrDefaultOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the shim of Enumerable.SingleOrDefault(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SingleOrDefaultOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of Enumerable.SingleOrDefault(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SkipOf1IEnumerableOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Int32,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Skip(IEnumerable`1&lt;!!0&gt; source, Int32 count)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SkipWhileOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.SkipWhile(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SkipWhileOf1IEnumerableOfM0FuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.SkipWhile(IEnumerable`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal},System.Decimal})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Decimal&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Double&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32},System.Int32})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Int32&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64},System.Int64})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Int64&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}},System.Nullable{System.Int32}})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}},System.Nullable{System.Int64}})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}},System.Nullable{System.Single}})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.SumOf1IEnumerableOfM0FuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single},System.Single})">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Single&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.TakeOf1IEnumerableOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Int32,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Take(IEnumerable`1&lt;!!0&gt; source, Int32 count)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.TakeWhileOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.TakeWhile(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.TakeWhileOf1IEnumerableOfM0FuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.TakeWhile(IEnumerable`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ThenByDescendingOf2IOrderedEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.ThenByDescending(IOrderedEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ThenByDescendingOf2IOrderedEnumerableOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.ThenByDescending(IOrderedEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ThenByOf2IOrderedEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.ThenBy(IOrderedEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ThenByOf2IOrderedEnumerableOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.ThenBy(IOrderedEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToArrayOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0[]})">
            <summary>Sets the shim of Enumerable.ToArray(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToDictionaryOf2IEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.Dictionary{``1,``0}})">
            <summary>Sets the shim of Enumerable.ToDictionary(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToDictionaryOf2IEnumerableOfM0FuncOfM0M1IEqualityComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.Dictionary{``1,``0}})">
            <summary>Sets the shim of Enumerable.ToDictionary(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToDictionaryOf3IEnumerableOfM0FuncOfM0M1FuncOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.Dictionary{``1,``2}})">
            <summary>Sets the shim of Enumerable.ToDictionary(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToDictionaryOf3IEnumerableOfM0FuncOfM0M1FuncOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.Dictionary{``1,``2}})">
            <summary>Sets the shim of Enumerable.ToDictionary(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToListOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{``0}})">
            <summary>Sets the shim of Enumerable.ToList(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToLookupOf2IEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.ILookup{``1,``0}})">
            <summary>Sets the shim of Enumerable.ToLookup(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToLookupOf2IEnumerableOfM0FuncOfM0M1IEqualityComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Linq.ILookup{``1,``0}})">
            <summary>Sets the shim of Enumerable.ToLookup(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToLookupOf3IEnumerableOfM0FuncOfM0M1FuncOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Linq.ILookup{``1,``2}})">
            <summary>Sets the shim of Enumerable.ToLookup(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ToLookupOf3IEnumerableOfM0FuncOfM0M1FuncOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Linq.ILookup{``1,``2}})">
            <summary>Sets the shim of Enumerable.ToLookup(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.UnionOf1IEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Union(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.UnionOf1IEnumerableOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Union(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.WhereOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Where(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.WhereOf1IEnumerableOfM0FuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Enumerable.Where(IEnumerable`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerable.ZipOf3IEnumerableOfM0IEnumerableOfM1FuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2},System.Collections.Generic.IEnumerable{``2}})">
            <summary>Sets the shim of Enumerable.Zip(IEnumerable`1&lt;!!0&gt; first, IEnumerable`1&lt;!!1&gt; second, Func`3&lt;!!0,!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfDecimal">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfDouble">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfInt32">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfInt64">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfNullableOfSingle">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.AverageIEnumerableOfSingle">
            <summary>Sets the shim of Enumerable.Average(IEnumerable`1&lt;Single&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfDecimal">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfDouble">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfInt32">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfInt64">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfNullableOfSingle">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MaxIEnumerableOfSingle">
            <summary>Sets the shim of Enumerable.Max(IEnumerable`1&lt;Single&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfDecimal">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfDouble">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfInt32">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfInt64">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfNullableOfSingle">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.MinIEnumerableOfSingle">
            <summary>Sets the shim of Enumerable.Min(IEnumerable`1&lt;Single&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.RangeInt32Int32">
            <summary>Sets the shim of Enumerable.Range(Int32 start, Int32 count)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfDecimal">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfDouble">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfInt32">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfInt64">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfNullableOfSingle">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerable.SumIEnumerableOfSingle">
            <summary>Sets the shim of Enumerable.Sum(IEnumerable`1&lt;Single&gt; source)</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimEnumerableExecutor">
            <summary>Shim type of System.Linq.EnumerableExecutor</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableExecutor.#ctor(System.Linq.EnumerableExecutor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableExecutor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableExecutor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableExecutor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableExecutor.Constructor">
            <summary>Sets the shim of EnumerableExecutor.EnumerableExecutor()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimEnumerableExecutor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimEnumerableExecutor`1">
            <summary>Shim type of System.Linq.EnumerableExecutor`1</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableExecutor`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableExecutor`1.#ctor(System.Linq.EnumerableExecutor{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableExecutor`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableExecutor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableExecutor`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableExecutor`1.ConstructorExpression">
            <summary>Sets the shim of EnumerableExecutor`1.EnumerableExecutor`1(Expression expression)</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimEnumerableExecutor`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimEnumerableQuery">
            <summary>Shim type of System.Linq.EnumerableQuery</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery.#ctor(System.Linq.EnumerableQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery.Constructor">
            <summary>Sets the shim of EnumerableQuery.EnumerableQuery()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimEnumerableQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimEnumerableQuery`1">
            <summary>Shim type of System.Linq.EnumerableQuery`1</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.#ctor(System.Linq.EnumerableQuery{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.Bind(System.Linq.IQueryProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.Bind(System.Linq.IOrderedQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.SystemLinqIQueryProviderCreateQueryOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.SystemLinqIQueryProviderExecuteOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,``0})">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.ConstructorExpression">
            <summary>Sets the shim of EnumerableQuery`1.EnumerableQuery`1(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.ConstructorIEnumerableOfT0">
            <summary>Sets the shim of EnumerableQuery`1.EnumerableQuery`1(IEnumerable`1&lt;!0&gt; enumerable)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.ExpressionGet">
            <summary>Sets the shim of EnumerableQuery`1.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.GetEnumerator">
            <summary>Sets the shim of EnumerableQuery`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of EnumerableQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EnumerableQuery`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.SystemLinqIQueryProviderCreateQueryExpression">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.SystemLinqIQueryProviderExecuteExpression">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.ToString">
            <summary>Sets the shim of EnumerableQuery`1.ToString()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.SystemLinqIQueryProviderCreateQueryOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.EnumerableQuery{`0},System.Linq.Expressions.Expression,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.SystemLinqIQueryProviderExecuteOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.EnumerableQuery{`0},System.Linq.Expressions.Expression,``0})">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.ExpressionGet">
            <summary>Sets the shim of EnumerableQuery`1.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of EnumerableQuery`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of EnumerableQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EnumerableQuery`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.SystemLinqIQueryProviderCreateQueryExpression">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.SystemLinqIQueryProviderExecuteExpression">
            <summary>Sets the shim of EnumerableQuery`1.System.Linq.IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimEnumerableQuery`1.AllInstances.ToString01">
            <summary>Sets the shim of EnumerableQuery`1.ToString()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimLookup`2">
            <summary>Shim type of System.Linq.Lookup`2</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimLookup`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimLookup`2.#ctor(System.Linq.Lookup{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimLookup`2.ApplyResultSelectorOf1FuncOfT0IEnumerableOfT1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Lookup`2.ApplyResultSelector(Func`3&lt;!0,IEnumerable`1&lt;!1&gt;,!!0&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimLookup`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimLookup`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimLookup`2.Bind(System.Linq.ILookup{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimLookup`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimLookup`2.Bind(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.Constructor">
            <summary>Sets the shim of Lookup`2.Lookup`2()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.ContainsT0">
            <summary>Sets the shim of Lookup`2.Contains(!0 key)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.CountGet">
            <summary>Sets the shim of Lookup`2.get_Count()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.GetEnumerator">
            <summary>Sets the shim of Lookup`2.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.ItemGetT0">
            <summary>Sets the shim of Lookup`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Lookup`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimLookup`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimLookup`2.AllInstances.ApplyResultSelectorOf1FuncOfT0IEnumerableOfT1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Lookup{`0,`1},System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Lookup`2.ApplyResultSelector(Func`3&lt;!0,IEnumerable`1&lt;!1&gt;,!!0&gt; resultSelector)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.AllInstances.Constructor">
            <summary>Sets the shim of Lookup`2.Lookup`2()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.AllInstances.ContainsT0">
            <summary>Sets the shim of Lookup`2.Contains(!0 key)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.AllInstances.CountGet">
            <summary>Sets the shim of Lookup`2.get_Count()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.AllInstances.GetEnumerator">
            <summary>Sets the shim of Lookup`2.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.AllInstances.ItemGetT0">
            <summary>Sets the shim of Lookup`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimLookup`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Lookup`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimOrderedParallelQuery`1">
            <summary>Shim type of System.Linq.OrderedParallelQuery`1</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimOrderedParallelQuery`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimOrderedParallelQuery`1.#ctor(System.Linq.OrderedParallelQuery{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimOrderedParallelQuery`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimOrderedParallelQuery`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimOrderedParallelQuery`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimOrderedParallelQuery`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimOrderedParallelQuery`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimOrderedParallelQuery`1.Constructor">
            <summary>Sets the shim of OrderedParallelQuery`1.OrderedParallelQuery`1()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimOrderedParallelQuery`1.GetEnumerator">
            <summary>Sets the shim of OrderedParallelQuery`1.GetEnumerator()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimOrderedParallelQuery`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimOrderedParallelQuery`1.AllInstances.Constructor">
            <summary>Sets the shim of OrderedParallelQuery`1.OrderedParallelQuery`1()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimOrderedParallelQuery`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of OrderedParallelQuery`1.GetEnumerator()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimParallelEnumerable">
            <summary>Shim type of System.Linq.ParallelEnumerable</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AggregateOf1ParallelQueryOfM0FuncOfM0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0},``0})">
            <summary>Sets the shim of ParallelEnumerable.Aggregate(ParallelQuery`1&lt;!!0&gt; source, Func`3&lt;!!0,!!0,!!0&gt; func)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AggregateOf2ParallelQueryOfM0M1FuncOfM1M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},``1})">
            <summary>Sets the shim of ParallelEnumerable.Aggregate(ParallelQuery`1&lt;!!0&gt; source, !!1 seed, Func`3&lt;!!1,!!0,!!1&gt; func)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AggregateOf3ParallelQueryOfM0FuncOfM1FuncOfM1M0M1FuncOfM1M1M1FuncOfM1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2},``2})">
            <summary>Sets the shim of ParallelEnumerable.Aggregate(ParallelQuery`1&lt;!!0&gt; source, Func`1&lt;!!1&gt; seedFactory, Func`3&lt;!!1,!!0,!!1&gt; updateAccumulatorFunc, Func`3&lt;!!1,!!1,!!1&gt; combineAccumulatorsFunc, Func`2&lt;!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AggregateOf3ParallelQueryOfM0M1FuncOfM1M0M1FuncOfM1M1M1FuncOfM1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2},``2})">
            <summary>Sets the shim of ParallelEnumerable.Aggregate(ParallelQuery`1&lt;!!0&gt; source, !!1 seed, Func`3&lt;!!1,!!0,!!1&gt; updateAccumulatorFunc, Func`3&lt;!!1,!!1,!!1&gt; combineAccumulatorsFunc, Func`2&lt;!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AggregateOf3ParallelQueryOfM0M1FuncOfM1M0M1FuncOfM1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2},``2})">
            <summary>Sets the shim of ParallelEnumerable.Aggregate(ParallelQuery`1&lt;!!0&gt; source, !!1 seed, Func`3&lt;!!1,!!0,!!1&gt; func, Func`2&lt;!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AllOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},System.Boolean})">
            <summary>Sets the shim of ParallelEnumerable.All(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AnyOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Boolean})">
            <summary>Sets the shim of ParallelEnumerable.Any(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AnyOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},System.Boolean})">
            <summary>Sets the shim of ParallelEnumerable.Any(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AsEnumerableOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ParallelEnumerable.AsEnumerable(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AsOrderedOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.AsOrdered(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AsParallelOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.AsParallel(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AsParallelOf1PartitionerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Concurrent.Partitioner{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.AsParallel(Partitioner`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AsSequentialOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ParallelEnumerable.AsSequential(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AsUnorderedOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.AsUnordered(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal},System.Decimal})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Decimal&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Double},System.Double})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Double&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32},System.Double})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Int32&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64},System.Double})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Int64&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}},System.Nullable{System.Double}})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}},System.Nullable{System.Double}})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}},System.Nullable{System.Double}})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}},System.Nullable{System.Single}})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.AverageOf1ParallelQueryOfM0FuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Single},System.Single})">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Single&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.CastOf1ParallelQuery``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Cast(ParallelQuery source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ConcatOf1ParallelQueryOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Concat(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ConcatOf1ParallelQueryOfM0ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Concat(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ContainsOf1ParallelQueryOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0,System.Boolean})">
            <summary>Sets the shim of ParallelEnumerable.Contains(ParallelQuery`1&lt;!!0&gt; source, !!0 value)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ContainsOf1ParallelQueryOfM0M0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the shim of ParallelEnumerable.Contains(ParallelQuery`1&lt;!!0&gt; source, !!0 value, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.CountOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Int32})">
            <summary>Sets the shim of ParallelEnumerable.Count(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.CountOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},System.Int32})">
            <summary>Sets the shim of ParallelEnumerable.Count(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.DefaultIfEmptyOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.DefaultIfEmpty(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.DefaultIfEmptyOf1ParallelQueryOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.DefaultIfEmpty(ParallelQuery`1&lt;!!0&gt; source, !!0 defaultValue)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.DistinctOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Distinct(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.DistinctOf1ParallelQueryOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Distinct(ParallelQuery`1&lt;!!0&gt; source, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ElementAtOf1ParallelQueryOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Int32,``0})">
            <summary>Sets the shim of ParallelEnumerable.ElementAt(ParallelQuery`1&lt;!!0&gt; source, Int32 index)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ElementAtOrDefaultOf1ParallelQueryOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Int32,``0})">
            <summary>Sets the shim of ParallelEnumerable.ElementAtOrDefault(ParallelQuery`1&lt;!!0&gt; source, Int32 index)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.EmptyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Empty()</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ExceptOf1ParallelQueryOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Except(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ExceptOf1ParallelQueryOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Except(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ExceptOf1ParallelQueryOfM0ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Except(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ExceptOf1ParallelQueryOfM0ParallelQueryOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Except(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.FirstOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0})">
            <summary>Sets the shim of ParallelEnumerable.First(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.FirstOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of ParallelEnumerable.First(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.FirstOrDefaultOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0})">
            <summary>Sets the shim of ParallelEnumerable.FirstOrDefault(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.FirstOrDefaultOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of ParallelEnumerable.FirstOrDefault(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ForAllOf1ParallelQueryOfM0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.ParallelQuery{``0},System.Action{``0}})">
            <summary>Sets the shim of ParallelEnumerable.ForAll(ParallelQuery`1&lt;!!0&gt; source, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupByOf2ParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Linq.ParallelQuery{System.Linq.IGrouping{``1,``0}}})">
            <summary>Sets the shim of ParallelEnumerable.GroupBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupByOf2ParallelQueryOfM0FuncOfM0M1IEqualityComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Linq.ParallelQuery{System.Linq.IGrouping{``1,``0}}})">
            <summary>Sets the shim of ParallelEnumerable.GroupBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupByOf3ParallelQueryOfM0FuncOfM0M1FuncOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Linq.ParallelQuery{System.Linq.IGrouping{``1,``2}}})">
            <summary>Sets the shim of ParallelEnumerable.GroupBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupByOf3ParallelQueryOfM0FuncOfM0M1FuncOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Linq.ParallelQuery{System.Linq.IGrouping{``1,``2}}})">
            <summary>Sets the shim of ParallelEnumerable.GroupBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupByOf3ParallelQueryOfM0FuncOfM0M1FuncOfM1IEnumerableOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Linq.ParallelQuery{``2}})">
            <summary>Sets the shim of ParallelEnumerable.GroupBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`3&lt;!!1,IEnumerable`1&lt;!!0&gt;,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupByOf3ParallelQueryOfM0FuncOfM0M1FuncOfM1IEnumerableOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1},System.Linq.ParallelQuery{``2}})">
            <summary>Sets the shim of ParallelEnumerable.GroupBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`3&lt;!!1,IEnumerable`1&lt;!!0&gt;,!!2&gt; resultSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupByOf4ParallelQueryOfM0FuncOfM0M1FuncOfM0M2FuncOfM1IEnumerableOfM2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.GroupBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, Func`3&lt;!!1,IEnumerable`1&lt;!!2&gt;,!!3&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupByOf4ParallelQueryOfM0FuncOfM0M1FuncOfM0M2FuncOfM1IEnumerableOfM2M3IEqualityComparerOfM1``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.GroupBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, Func`3&lt;!!1,IEnumerable`1&lt;!!2&gt;,!!3&gt; resultSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupJoinOf4ParallelQueryOfM0IEnumerableOfM1FuncOfM0M2FuncOfM1M2FuncOfM0IEnumerableOfM1M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.GroupJoin(ParallelQuery`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,IEnumerable`1&lt;!!1&gt;,!!3&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupJoinOf4ParallelQueryOfM0IEnumerableOfM1FuncOfM0M2FuncOfM1M2FuncOfM0IEnumerableOfM1M3IEqualityComparerOfM2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.GroupJoin(ParallelQuery`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,IEnumerable`1&lt;!!1&gt;,!!3&gt; resultSelector, IEqualityComparer`1&lt;!!2&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupJoinOf4ParallelQueryOfM0ParallelQueryOfM1FuncOfM0M2FuncOfM1M2FuncOfM0IEnumerableOfM1M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.GroupJoin(ParallelQuery`1&lt;!!0&gt; outer, ParallelQuery`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,IEnumerable`1&lt;!!1&gt;,!!3&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.GroupJoinOf4ParallelQueryOfM0ParallelQueryOfM1FuncOfM0M2FuncOfM1M2FuncOfM0IEnumerableOfM1M3IEqualityComparerOfM2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.GroupJoin(ParallelQuery`1&lt;!!0&gt; outer, ParallelQuery`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,IEnumerable`1&lt;!!1&gt;,!!3&gt; resultSelector, IEqualityComparer`1&lt;!!2&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.IntersectOf1ParallelQueryOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Intersect(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.IntersectOf1ParallelQueryOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Intersect(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.IntersectOf1ParallelQueryOfM0ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Intersect(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.IntersectOf1ParallelQueryOfM0ParallelQueryOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Intersect(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.JoinOf4ParallelQueryOfM0IEnumerableOfM1FuncOfM0M2FuncOfM1M2FuncOfM0M1M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.Join(ParallelQuery`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,!!1,!!3&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.JoinOf4ParallelQueryOfM0IEnumerableOfM1FuncOfM0M2FuncOfM1M2FuncOfM0M1M3IEqualityComparerOfM2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.Join(ParallelQuery`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,!!1,!!3&gt; resultSelector, IEqualityComparer`1&lt;!!2&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.JoinOf4ParallelQueryOfM0ParallelQueryOfM1FuncOfM0M2FuncOfM1M2FuncOfM0M1M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.Join(ParallelQuery`1&lt;!!0&gt; outer, ParallelQuery`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,!!1,!!3&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.JoinOf4ParallelQueryOfM0ParallelQueryOfM1FuncOfM0M2FuncOfM1M2FuncOfM0M1M3IEqualityComparerOfM2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2},System.Linq.ParallelQuery{``3}})">
            <summary>Sets the shim of ParallelEnumerable.Join(ParallelQuery`1&lt;!!0&gt; outer, ParallelQuery`1&lt;!!1&gt; inner, Func`2&lt;!!0,!!2&gt; outerKeySelector, Func`2&lt;!!1,!!2&gt; innerKeySelector, Func`3&lt;!!0,!!1,!!3&gt; resultSelector, IEqualityComparer`1&lt;!!2&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.LastOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0})">
            <summary>Sets the shim of ParallelEnumerable.Last(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.LastOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of ParallelEnumerable.Last(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.LastOrDefaultOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0})">
            <summary>Sets the shim of ParallelEnumerable.LastOrDefault(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.LastOrDefaultOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of ParallelEnumerable.LastOrDefault(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.LongCountOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Int64})">
            <summary>Sets the shim of ParallelEnumerable.LongCount(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.LongCountOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},System.Int64})">
            <summary>Sets the shim of ParallelEnumerable.LongCount(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal},System.Decimal})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Decimal&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Double},System.Double})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Double&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32},System.Int32})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Int32&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64},System.Int64})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Int64&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}},System.Nullable{System.Double}})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}},System.Nullable{System.Int32}})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}},System.Nullable{System.Int64}})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}},System.Nullable{System.Single}})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf1ParallelQueryOfM0FuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Single},System.Single})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Single&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MaxOf2ParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},``1})">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal},System.Decimal})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Decimal&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Double},System.Double})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Double&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32},System.Int32})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Int32&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64},System.Int64})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Int64&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}},System.Nullable{System.Double}})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}},System.Nullable{System.Int32}})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}},System.Nullable{System.Int64}})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}},System.Nullable{System.Single}})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf1ParallelQueryOfM0FuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Single},System.Single})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Single&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.MinOf2ParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},``1})">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.OfTypeOf1ParallelQuery``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.OfType(ParallelQuery source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.OrderByDescendingOf2ParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Linq.OrderedParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.OrderByDescending(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.OrderByDescendingOf2ParallelQueryOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Linq.OrderedParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.OrderByDescending(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.OrderByOf2ParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Linq.OrderedParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.OrderBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.OrderByOf2ParallelQueryOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Linq.OrderedParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.OrderBy(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.RepeatOf1M0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Int32,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Repeat(!!0 element, Int32 count)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ReverseOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Reverse(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SelectManyOf2ParallelQueryOfM0FuncOfM0IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.ParallelQuery{``1}})">
            <summary>Sets the shim of ParallelEnumerable.SelectMany(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,IEnumerable`1&lt;!!1&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SelectManyOf2ParallelQueryOfM0FuncOfM0Int32IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Linq.ParallelQuery{``1}})">
            <summary>Sets the shim of ParallelEnumerable.SelectMany(ParallelQuery`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,IEnumerable`1&lt;!!1&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SelectManyOf3ParallelQueryOfM0FuncOfM0IEnumerableOfM1FuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2},System.Linq.ParallelQuery{``2}})">
            <summary>Sets the shim of ParallelEnumerable.SelectMany(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,IEnumerable`1&lt;!!1&gt;&gt; collectionSelector, Func`3&lt;!!0,!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SelectManyOf3ParallelQueryOfM0FuncOfM0Int32IEnumerableOfM1FuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2},System.Linq.ParallelQuery{``2}})">
            <summary>Sets the shim of ParallelEnumerable.SelectMany(ParallelQuery`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,IEnumerable`1&lt;!!1&gt;&gt; collectionSelector, Func`3&lt;!!0,!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SelectOf2ParallelQueryOfM0FuncOfM0Int32M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1},System.Linq.ParallelQuery{``1}})">
            <summary>Sets the shim of ParallelEnumerable.Select(ParallelQuery`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,!!1&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SelectOf2ParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Linq.ParallelQuery{``1}})">
            <summary>Sets the shim of ParallelEnumerable.Select(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SequenceEqualOf1ParallelQueryOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of ParallelEnumerable.SequenceEqual(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SequenceEqualOf1ParallelQueryOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the shim of ParallelEnumerable.SequenceEqual(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SequenceEqualOf1ParallelQueryOfM0ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Boolean})">
            <summary>Sets the shim of ParallelEnumerable.SequenceEqual(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SequenceEqualOf1ParallelQueryOfM0ParallelQueryOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the shim of ParallelEnumerable.SequenceEqual(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SingleOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0})">
            <summary>Sets the shim of ParallelEnumerable.Single(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SingleOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of ParallelEnumerable.Single(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SingleOrDefaultOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0})">
            <summary>Sets the shim of ParallelEnumerable.SingleOrDefault(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SingleOrDefaultOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the shim of ParallelEnumerable.SingleOrDefault(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SkipOf1ParallelQueryOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Int32,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Skip(ParallelQuery`1&lt;!!0&gt; source, Int32 count)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SkipWhileOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.SkipWhile(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SkipWhileOf1ParallelQueryOfM0FuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.SkipWhile(ParallelQuery`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal},System.Decimal})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Decimal&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Double},System.Double})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Double&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32},System.Int32})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Int32&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64},System.Int64})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Int64&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}},System.Nullable{System.Double}})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}},System.Nullable{System.Int32}})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}},System.Nullable{System.Int64}})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}},System.Nullable{System.Single}})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.SumOf1ParallelQueryOfM0FuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Single},System.Single})">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Single&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.TakeOf1ParallelQueryOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Int32,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Take(ParallelQuery`1&lt;!!0&gt; source, Int32 count)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.TakeWhileOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.TakeWhile(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.TakeWhileOf1ParallelQueryOfM0FuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.TakeWhile(ParallelQuery`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ThenByDescendingOf2OrderedParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Linq.OrderedParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.ThenByDescending(OrderedParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ThenByDescendingOf2OrderedParallelQueryOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Linq.OrderedParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.ThenByDescending(OrderedParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ThenByOf2OrderedParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Linq.OrderedParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.ThenBy(OrderedParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ThenByOf2OrderedParallelQueryOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Linq.OrderedParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.ThenBy(OrderedParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToArrayOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},``0[]})">
            <summary>Sets the shim of ParallelEnumerable.ToArray(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToDictionaryOf2ParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.Dictionary{``1,``0}})">
            <summary>Sets the shim of ParallelEnumerable.ToDictionary(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToDictionaryOf2ParallelQueryOfM0FuncOfM0M1IEqualityComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.Dictionary{``1,``0}})">
            <summary>Sets the shim of ParallelEnumerable.ToDictionary(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToDictionaryOf3ParallelQueryOfM0FuncOfM0M1FuncOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.Dictionary{``1,``2}})">
            <summary>Sets the shim of ParallelEnumerable.ToDictionary(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToDictionaryOf3ParallelQueryOfM0FuncOfM0M1FuncOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.Dictionary{``1,``2}})">
            <summary>Sets the shim of ParallelEnumerable.ToDictionary(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToListOf1ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.List{``0}})">
            <summary>Sets the shim of ParallelEnumerable.ToList(ParallelQuery`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToLookupOf2ParallelQueryOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Linq.ILookup{``1,``0}})">
            <summary>Sets the shim of ParallelEnumerable.ToLookup(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToLookupOf2ParallelQueryOfM0FuncOfM0M1IEqualityComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Linq.ILookup{``1,``0}})">
            <summary>Sets the shim of ParallelEnumerable.ToLookup(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToLookupOf3ParallelQueryOfM0FuncOfM0M1FuncOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Linq.ILookup{``1,``2}})">
            <summary>Sets the shim of ParallelEnumerable.ToLookup(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ToLookupOf3ParallelQueryOfM0FuncOfM0M1FuncOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Linq.ILookup{``1,``2}})">
            <summary>Sets the shim of ParallelEnumerable.ToLookup(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.UnionOf1ParallelQueryOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Union(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.UnionOf1ParallelQueryOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Union(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.UnionOf1ParallelQueryOfM0ParallelQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Union(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.UnionOf1ParallelQueryOfM0ParallelQueryOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Union(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!0&gt; second, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.WhereOf1ParallelQueryOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Where(ParallelQuery`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.WhereOf1ParallelQueryOfM0FuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean},System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.Where(ParallelQuery`1&lt;!!0&gt; source, Func`3&lt;!!0,Int32,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.WithCancellationOf1ParallelQueryOfM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Threading.CancellationToken,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.WithCancellation(ParallelQuery`1&lt;!!0&gt; source, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.WithDegreeOfParallelismOf1ParallelQueryOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Int32,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.WithDegreeOfParallelism(ParallelQuery`1&lt;!!0&gt; source, Int32 degreeOfParallelism)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.WithExecutionModeOf1ParallelQueryOfM0ParallelExecutionMode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.WithExecutionMode(ParallelQuery`1&lt;!!0&gt; source, ParallelExecutionMode executionMode)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.WithMergeOptionsOf1ParallelQueryOfM0ParallelMergeOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions,System.Linq.ParallelQuery{``0}})">
            <summary>Sets the shim of ParallelEnumerable.WithMergeOptions(ParallelQuery`1&lt;!!0&gt; source, ParallelMergeOptions mergeOptions)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ZipOf3ParallelQueryOfM0IEnumerableOfM1FuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2},System.Linq.ParallelQuery{``2}})">
            <summary>Sets the shim of ParallelEnumerable.Zip(ParallelQuery`1&lt;!!0&gt; first, IEnumerable`1&lt;!!1&gt; second, Func`3&lt;!!0,!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelEnumerable.ZipOf3ParallelQueryOfM0ParallelQueryOfM1FuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2},System.Linq.ParallelQuery{``2}})">
            <summary>Sets the shim of ParallelEnumerable.Zip(ParallelQuery`1&lt;!!0&gt; first, ParallelQuery`1&lt;!!1&gt; second, Func`3&lt;!!0,!!1,!!2&gt; resultSelector)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AsOrderedParallelQuery">
            <summary>Sets the shim of ParallelEnumerable.AsOrdered(ParallelQuery source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AsParallelIEnumerable">
            <summary>Sets the shim of ParallelEnumerable.AsParallel(IEnumerable source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfDecimal">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfDouble">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfInt32">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfInt64">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfNullableOfDecimal">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfNullableOfDouble">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfNullableOfInt32">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfNullableOfInt64">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfNullableOfSingle">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.AverageParallelQueryOfSingle">
            <summary>Sets the shim of ParallelEnumerable.Average(ParallelQuery`1&lt;Single&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfDecimal">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfDouble">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfInt32">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfInt64">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfNullableOfDecimal">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfNullableOfDouble">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfNullableOfInt32">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfNullableOfInt64">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfNullableOfSingle">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MaxParallelQueryOfSingle">
            <summary>Sets the shim of ParallelEnumerable.Max(ParallelQuery`1&lt;Single&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfDecimal">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfDouble">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfInt32">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfInt64">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfNullableOfDecimal">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfNullableOfDouble">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfNullableOfInt32">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfNullableOfInt64">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfNullableOfSingle">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.MinParallelQueryOfSingle">
            <summary>Sets the shim of ParallelEnumerable.Min(ParallelQuery`1&lt;Single&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.RangeInt32Int32">
            <summary>Sets the shim of ParallelEnumerable.Range(Int32 start, Int32 count)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfDecimal">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfDouble">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfInt32">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfInt64">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfNullableOfDecimal">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfNullableOfDouble">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfNullableOfInt32">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfNullableOfInt64">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfNullableOfSingle">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelEnumerable.SumParallelQueryOfSingle">
            <summary>Sets the shim of ParallelEnumerable.Sum(ParallelQuery`1&lt;Single&gt; source)</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimParallelQuery">
            <summary>Shim type of System.Linq.ParallelQuery</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery.#ctor(System.Linq.ParallelQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery.Constructor">
            <summary>Sets the shim of ParallelQuery.ParallelQuery()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ParallelQuery.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimParallelQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery.AllInstances.Constructor">
            <summary>Sets the shim of ParallelQuery.ParallelQuery()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ParallelQuery.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimParallelQuery`1">
            <summary>Shim type of System.Linq.ParallelQuery`1</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery`1.#ctor(System.Linq.ParallelQuery{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimParallelQuery`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery`1.Constructor">
            <summary>Sets the shim of ParallelQuery`1.ParallelQuery`1()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery`1.GetEnumerator">
            <summary>Sets the shim of ParallelQuery`1.GetEnumerator()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimParallelQuery`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery`1.AllInstances.Constructor">
            <summary>Sets the shim of ParallelQuery`1.ParallelQuery`1()</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimParallelQuery`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ParallelQuery`1.GetEnumerator()</summary>
        </member>
        <member name="T:System.Linq.Fakes.ShimQueryable">
            <summary>Shim type of System.Linq.Queryable</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AggregateOf1IQueryableOfM0ExpressionOfFuncOfM0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}},``0})">
            <summary>Sets the shim of Queryable.Aggregate(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`3&lt;!!0,!!0,!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AggregateOf2IQueryableOfM0M1ExpressionOfFuncOfM1M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},``1})">
            <summary>Sets the shim of Queryable.Aggregate(IQueryable`1&lt;!!0&gt; source, !!1 seed, Expression`1&lt;Func`3&lt;!!1,!!0,!!1&gt;&gt; func)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AggregateOf3IQueryableOfM0M1ExpressionOfFuncOfM1M0M1ExpressionOfFuncOfM1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}},``2})">
            <summary>Sets the shim of Queryable.Aggregate(IQueryable`1&lt;!!0&gt; source, !!1 seed, Expression`1&lt;Func`3&lt;!!1,!!0,!!1&gt;&gt; func, Expression`1&lt;Func`2&lt;!!1,!!2&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AllOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean})">
            <summary>Sets the shim of Queryable.All(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AnyOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Boolean})">
            <summary>Sets the shim of Queryable.Any(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AnyOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean})">
            <summary>Sets the shim of Queryable.Any(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AsQueryableOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.AsQueryable(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Decimal})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Double})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Double})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Double})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Nullable{System.Single}})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.AverageOf1IQueryableOfM0ExpressionOfFuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Single})">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.CastOf1IQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Cast(IQueryable source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ConcatOf1IQueryableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Concat(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!0&gt; source2)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ContainsOf1IQueryableOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0,System.Boolean})">
            <summary>Sets the shim of Queryable.Contains(IQueryable`1&lt;!!0&gt; source, !!0 item)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ContainsOf1IQueryableOfM0M0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the shim of Queryable.Contains(IQueryable`1&lt;!!0&gt; source, !!0 item, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.CountOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Int32})">
            <summary>Sets the shim of Queryable.Count(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.CountOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32})">
            <summary>Sets the shim of Queryable.Count(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.DefaultIfEmptyOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.DefaultIfEmpty(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.DefaultIfEmptyOf1IQueryableOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.DefaultIfEmpty(IQueryable`1&lt;!!0&gt; source, !!0 defaultValue)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.DistinctOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Distinct(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.DistinctOf1IQueryableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Distinct(IQueryable`1&lt;!!0&gt; source, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ElementAtOf1IQueryableOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Int32,``0})">
            <summary>Sets the shim of Queryable.ElementAt(IQueryable`1&lt;!!0&gt; source, Int32 index)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ElementAtOrDefaultOf1IQueryableOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Int32,``0})">
            <summary>Sets the shim of Queryable.ElementAtOrDefault(IQueryable`1&lt;!!0&gt; source, Int32 index)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ExceptOf1IQueryableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Except(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!0&gt; source2)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ExceptOf1IQueryableOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Except(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!0&gt; source2, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.FirstOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0})">
            <summary>Sets the shim of Queryable.First(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.FirstOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0})">
            <summary>Sets the shim of Queryable.First(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.FirstOrDefaultOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0})">
            <summary>Sets the shim of Queryable.FirstOrDefault(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.FirstOrDefaultOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0})">
            <summary>Sets the shim of Queryable.FirstOrDefault(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupByOf2IQueryableOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.IQueryable{System.Linq.IGrouping{``1,``0}}})">
            <summary>Sets the shim of Queryable.GroupBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupByOf2IQueryableOfM0ExpressionOfFuncOfM0M1IEqualityComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1},System.Linq.IQueryable{System.Linq.IGrouping{``1,``0}}})">
            <summary>Sets the shim of Queryable.GroupBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupByOf3IQueryableOfM0ExpressionOfFuncOfM0M1ExpressionOfFuncOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.IQueryable{System.Linq.IGrouping{``1,``2}}})">
            <summary>Sets the shim of Queryable.GroupBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; elementSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupByOf3IQueryableOfM0ExpressionOfFuncOfM0M1ExpressionOfFuncOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1},System.Linq.IQueryable{System.Linq.IGrouping{``1,``2}}})">
            <summary>Sets the shim of Queryable.GroupBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; elementSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupByOf3IQueryableOfM0ExpressionOfFuncOfM0M1ExpressionOfFuncOfM1IEnumerableOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Linq.IQueryable{``2}})">
            <summary>Sets the shim of Queryable.GroupBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, Expression`1&lt;Func`3&lt;!!1,IEnumerable`1&lt;!!0&gt;,!!2&gt;&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupByOf3IQueryableOfM0ExpressionOfFuncOfM0M1ExpressionOfFuncOfM1IEnumerableOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1},System.Linq.IQueryable{``2}})">
            <summary>Sets the shim of Queryable.GroupBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, Expression`1&lt;Func`3&lt;!!1,IEnumerable`1&lt;!!0&gt;,!!2&gt;&gt; resultSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupByOf4IQueryableOfM0ExpressionOfFuncOfM0M1ExpressionOfFuncOfM0M2ExpressionOfFuncOfM1IEnumerableOfM2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Linq.IQueryable{``3}})">
            <summary>Sets the shim of Queryable.GroupBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; elementSelector, Expression`1&lt;Func`3&lt;!!1,IEnumerable`1&lt;!!2&gt;,!!3&gt;&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupByOf4IQueryableOfM0ExpressionOfFuncOfM0M1ExpressionOfFuncOfM0M2ExpressionOfFuncOfM1IEnumerableOfM2M3IEqualityComparerOfM1``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1},System.Linq.IQueryable{``3}})">
            <summary>Sets the shim of Queryable.GroupBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; elementSelector, Expression`1&lt;Func`3&lt;!!1,IEnumerable`1&lt;!!2&gt;,!!3&gt;&gt; resultSelector, IEqualityComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupJoinOf4IQueryableOfM0IEnumerableOfM1ExpressionOfFuncOfM0M2ExpressionOfFuncOfM1M2ExpressionOfFuncOfM0IEnumerableOfM1M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Linq.IQueryable{``3}})">
            <summary>Sets the shim of Queryable.GroupJoin(IQueryable`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; outerKeySelector, Expression`1&lt;Func`2&lt;!!1,!!2&gt;&gt; innerKeySelector, Expression`1&lt;Func`3&lt;!!0,IEnumerable`1&lt;!!1&gt;,!!3&gt;&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.GroupJoinOf4IQueryableOfM0IEnumerableOfM1ExpressionOfFuncOfM0M2ExpressionOfFuncOfM1M2ExpressionOfFuncOfM0IEnumerableOfM1M3IEqualityComparerOfM2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2},System.Linq.IQueryable{``3}})">
            <summary>Sets the shim of Queryable.GroupJoin(IQueryable`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; outerKeySelector, Expression`1&lt;Func`2&lt;!!1,!!2&gt;&gt; innerKeySelector, Expression`1&lt;Func`3&lt;!!0,IEnumerable`1&lt;!!1&gt;,!!3&gt;&gt; resultSelector, IEqualityComparer`1&lt;!!2&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.IntersectOf1IQueryableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Intersect(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!0&gt; source2)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.IntersectOf1IQueryableOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Intersect(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!0&gt; source2, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.JoinOf4IQueryableOfM0IEnumerableOfM1ExpressionOfFuncOfM0M2ExpressionOfFuncOfM1M2ExpressionOfFuncOfM0M1M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Linq.IQueryable{``3}})">
            <summary>Sets the shim of Queryable.Join(IQueryable`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; outerKeySelector, Expression`1&lt;Func`2&lt;!!1,!!2&gt;&gt; innerKeySelector, Expression`1&lt;Func`3&lt;!!0,!!1,!!3&gt;&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.JoinOf4IQueryableOfM0IEnumerableOfM1ExpressionOfFuncOfM0M2ExpressionOfFuncOfM1M2ExpressionOfFuncOfM0M1M3IEqualityComparerOfM2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2},System.Linq.IQueryable{``3}})">
            <summary>Sets the shim of Queryable.Join(IQueryable`1&lt;!!0&gt; outer, IEnumerable`1&lt;!!1&gt; inner, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; outerKeySelector, Expression`1&lt;Func`2&lt;!!1,!!2&gt;&gt; innerKeySelector, Expression`1&lt;Func`3&lt;!!0,!!1,!!3&gt;&gt; resultSelector, IEqualityComparer`1&lt;!!2&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.LastOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0})">
            <summary>Sets the shim of Queryable.Last(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.LastOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0})">
            <summary>Sets the shim of Queryable.Last(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.LastOrDefaultOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0})">
            <summary>Sets the shim of Queryable.LastOrDefault(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.LastOrDefaultOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0})">
            <summary>Sets the shim of Queryable.LastOrDefault(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.LongCountOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Int64})">
            <summary>Sets the shim of Queryable.LongCount(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.LongCountOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int64})">
            <summary>Sets the shim of Queryable.LongCount(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.MaxOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0})">
            <summary>Sets the shim of Queryable.Max(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.MaxOf2IQueryableOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1})">
            <summary>Sets the shim of Queryable.Max(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.MinOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0})">
            <summary>Sets the shim of Queryable.Min(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.MinOf2IQueryableOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1})">
            <summary>Sets the shim of Queryable.Min(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.OfTypeOf1IQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.OfType(IQueryable source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.OrderByDescendingOf2IQueryableOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.IOrderedQueryable{``0}})">
            <summary>Sets the shim of Queryable.OrderByDescending(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.OrderByDescendingOf2IQueryableOfM0ExpressionOfFuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1},System.Linq.IOrderedQueryable{``0}})">
            <summary>Sets the shim of Queryable.OrderByDescending(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.OrderByOf2IQueryableOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.IOrderedQueryable{``0}})">
            <summary>Sets the shim of Queryable.OrderBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.OrderByOf2IQueryableOfM0ExpressionOfFuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1},System.Linq.IOrderedQueryable{``0}})">
            <summary>Sets the shim of Queryable.OrderBy(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ReverseOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Reverse(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SelectManyOf2IQueryableOfM0ExpressionOfFuncOfM0IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.IQueryable{``1}})">
            <summary>Sets the shim of Queryable.SelectMany(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,IEnumerable`1&lt;!!1&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SelectManyOf2IQueryableOfM0ExpressionOfFuncOfM0Int32IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.IQueryable{``1}})">
            <summary>Sets the shim of Queryable.SelectMany(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`3&lt;!!0,Int32,IEnumerable`1&lt;!!1&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SelectManyOf3IQueryableOfM0ExpressionOfFuncOfM0IEnumerableOfM1ExpressionOfFuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}},System.Linq.IQueryable{``2}})">
            <summary>Sets the shim of Queryable.SelectMany(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,IEnumerable`1&lt;!!1&gt;&gt;&gt; collectionSelector, Expression`1&lt;Func`3&lt;!!0,!!1,!!2&gt;&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SelectManyOf3IQueryableOfM0ExpressionOfFuncOfM0Int32IEnumerableOfM1ExpressionOfFuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}},System.Linq.IQueryable{``2}})">
            <summary>Sets the shim of Queryable.SelectMany(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`3&lt;!!0,Int32,IEnumerable`1&lt;!!1&gt;&gt;&gt; collectionSelector, Expression`1&lt;Func`3&lt;!!0,!!1,!!2&gt;&gt; resultSelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SelectOf2IQueryableOfM0ExpressionOfFuncOfM0Int32M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}},System.Linq.IQueryable{``1}})">
            <summary>Sets the shim of Queryable.Select(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`3&lt;!!0,Int32,!!1&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SelectOf2IQueryableOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.IQueryable{``1}})">
            <summary>Sets the shim of Queryable.Select(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SequenceEqualOf1IQueryableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of Queryable.SequenceEqual(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!0&gt; source2)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SequenceEqualOf1IQueryableOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the shim of Queryable.SequenceEqual(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!0&gt; source2, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SingleOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0})">
            <summary>Sets the shim of Queryable.Single(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SingleOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0})">
            <summary>Sets the shim of Queryable.Single(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SingleOrDefaultOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},``0})">
            <summary>Sets the shim of Queryable.SingleOrDefault(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SingleOrDefaultOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0})">
            <summary>Sets the shim of Queryable.SingleOrDefault(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SkipOf1IQueryableOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Int32,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Skip(IQueryable`1&lt;!!0&gt; source, Int32 count)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SkipWhileOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.SkipWhile(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SkipWhileOf1IQueryableOfM0ExpressionOfFuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.SkipWhile(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`3&lt;!!0,Int32,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0Decimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Decimal})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Decimal&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Double})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Double&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Int32})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Int32&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Int64})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Int64&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfDecimal``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Nullable{System.Decimal}})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Decimal&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Nullable{System.Double}})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Double&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Nullable{System.Int32}})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Int32&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Nullable{System.Int64}})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Int64&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0NullableOfSingle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Nullable{System.Single}})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Nullable`1&lt;Single&gt;&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.SumOf1IQueryableOfM0ExpressionOfFuncOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Single})">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Single&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.TakeOf1IQueryableOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Int32,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Take(IQueryable`1&lt;!!0&gt; source, Int32 count)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.TakeWhileOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.TakeWhile(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.TakeWhileOf1IQueryableOfM0ExpressionOfFuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.TakeWhile(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`3&lt;!!0,Int32,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ThenByDescendingOf2IOrderedQueryableOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.IOrderedQueryable{``0}})">
            <summary>Sets the shim of Queryable.ThenByDescending(IOrderedQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ThenByDescendingOf2IOrderedQueryableOfM0ExpressionOfFuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1},System.Linq.IOrderedQueryable{``0}})">
            <summary>Sets the shim of Queryable.ThenByDescending(IOrderedQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ThenByOf2IOrderedQueryableOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.IOrderedQueryable{``0}})">
            <summary>Sets the shim of Queryable.ThenBy(IOrderedQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ThenByOf2IOrderedQueryableOfM0ExpressionOfFuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1},System.Linq.IOrderedQueryable{``0}})">
            <summary>Sets the shim of Queryable.ThenBy(IOrderedQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; keySelector, IComparer`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.UnionOf1IQueryableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Union(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!0&gt; source2)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.UnionOf1IQueryableOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Union(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!0&gt; source2, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.WhereOf1IQueryableOfM0ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Where(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.WhereOf1IQueryableOfM0ExpressionOfFuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Queryable.Where(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`3&lt;!!0,Int32,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:System.Linq.Fakes.ShimQueryable.ZipOf3IQueryableOfM0IEnumerableOfM1ExpressionOfFuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}},System.Linq.IQueryable{``2}})">
            <summary>Sets the shim of Queryable.Zip(IQueryable`1&lt;!!0&gt; source1, IEnumerable`1&lt;!!1&gt; source2, Expression`1&lt;Func`3&lt;!!0,!!1,!!2&gt;&gt; resultSelector)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AsQueryableIEnumerable">
            <summary>Sets the shim of Queryable.AsQueryable(IEnumerable source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfDecimal">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfDouble">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfInt32">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfInt64">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfNullableOfDecimal">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfNullableOfDouble">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfNullableOfInt32">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfNullableOfInt64">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfNullableOfSingle">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.AverageIQueryableOfSingle">
            <summary>Sets the shim of Queryable.Average(IQueryable`1&lt;Single&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfDecimal">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Decimal&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfDouble">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Double&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfInt32">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Int32&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfInt64">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Int64&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfNullableOfDecimal">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Nullable`1&lt;Decimal&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfNullableOfDouble">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Nullable`1&lt;Double&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfNullableOfInt32">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Nullable`1&lt;Int32&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfNullableOfInt64">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Nullable`1&lt;Int64&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfNullableOfSingle">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Nullable`1&lt;Single&gt;&gt; source)</summary>
        </member>
        <member name="P:System.Linq.Fakes.ShimQueryable.SumIQueryableOfSingle">
            <summary>Sets the shim of Queryable.Sum(IQueryable`1&lt;Single&gt; source)</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubEnumerableExecutor">
            <summary>Stub type of System.Linq.EnumerableExecutor</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubEnumerableExecutor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubEnumerableExecutor.InitializeStub">
            <summary>Initializes a new instance of type StubEnumerableExecutor</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubEnumerableExecutor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubEnumerableExecutor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubEnumerableExecutor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubEnumerableExecutor`1">
            <summary>Stub type of System.Linq.EnumerableExecutor`1</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubEnumerableExecutor`1.#ctor(System.Linq.Expressions.Expression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubEnumerableExecutor`1.InitializeStub">
            <summary>Initializes a new instance of type StubEnumerableExecutor</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubEnumerableExecutor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubEnumerableExecutor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubEnumerableExecutor`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubIGrouping`2">
            <summary>Stub type of System.Linq.IGrouping`2</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIGrouping`2.#ctor">
            <summary>Initializes a new instance of type StubIGrouping</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIGrouping`2.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIGrouping`2.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIGrouping`2.KeyGet">
            <summary>Sets the stub of IGrouping`2.get_Key()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIGrouping`2.global::System#Collections#Generic#IEnumerable{TElement}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIGrouping`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIGrouping`2.global::System#Linq#IGrouping{TKey@TElement}#Key">
            <summary>Sets the stub of IGrouping`2.get_Key()</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubILookup`2">
            <summary>Stub type of System.Linq.ILookup`2</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubILookup`2.#ctor">
            <summary>Initializes a new instance of type StubILookup</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubILookup`2.ContainsT0">
            <summary>Sets the stub of ILookup`2.Contains(!0 key)</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubILookup`2.CountGet">
            <summary>Sets the stub of ILookup`2.get_Count()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubILookup`2.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubILookup`2.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubILookup`2.ItemGetT0">
            <summary>Sets the stub of ILookup`2.get_Item(!0 key)</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubILookup`2.global::System#Collections#Generic#IEnumerable{System#Linq#IGrouping{TKey@TElement}}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubILookup`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubILookup`2.global::System#Linq#ILookup{TKey@TElement}#Contains(`0)">
            <summary>Sets the stub of ILookup`2.Contains(!0 key)</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubILookup`2.global::System#Linq#ILookup{TKey@TElement}#Count">
            <summary>Sets the stub of ILookup`2.get_Count()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubILookup`2.System#Linq#ILookup{TKey@TElement}#Item(`0)">
            <summary>Sets the stub of ILookup`2.get_Item(!0 key)</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubIOrderedEnumerable`1">
            <summary>Stub type of System.Linq.IOrderedEnumerable`1</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedEnumerable`1.#ctor">
            <summary>Initializes a new instance of type StubIOrderedEnumerable</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedEnumerable`1.CreateOrderedEnumerableOf1FuncOfT0M0IComparerOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean,System.Linq.IOrderedEnumerable{`0}})">
            <summary>Sets stubs of CreateOrderedEnumerable(Func`2&lt;!0,!!0&gt; keySelector, IComparer`1&lt;!!0&gt; comparer, Boolean descending)</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedEnumerable`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedEnumerable`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedEnumerable`1.global::System#Collections#Generic#IEnumerable{TElement}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedEnumerable`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedEnumerable`1.global::System#Linq#IOrderedEnumerable{TElement}#CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
            <summary>Sets the stub of IOrderedEnumerable`1.CreateOrderedEnumerable(Func`2&lt;!0,!!0&gt; keySelector, IComparer`1&lt;!!0&gt; comparer, Boolean descending)</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubIOrderedQueryable">
            <summary>Stub type of System.Linq.IOrderedQueryable</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedQueryable.#ctor">
            <summary>Initializes a new instance of type StubIOrderedQueryable</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedQueryable.ElementTypeGet">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedQueryable.ExpressionGet">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedQueryable.GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedQueryable.ProviderGet">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedQueryable.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIOrderedQueryable.global::System#Linq#IQueryable#ElementType">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIOrderedQueryable.global::System#Linq#IQueryable#Expression">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIOrderedQueryable.global::System#Linq#IQueryable#Provider">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubIOrderedQueryable`1">
            <summary>Stub type of System.Linq.IOrderedQueryable`1</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedQueryable`1.#ctor">
            <summary>Initializes a new instance of type StubIOrderedQueryable</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedQueryable`1.ElementTypeGet">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedQueryable`1.ExpressionGet">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedQueryable`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedQueryable`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIOrderedQueryable`1.ProviderGet">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedQueryable`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIOrderedQueryable`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIOrderedQueryable`1.global::System#Linq#IQueryable#ElementType">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIOrderedQueryable`1.global::System#Linq#IQueryable#Expression">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIOrderedQueryable`1.global::System#Linq#IQueryable#Provider">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubIQueryProvider">
            <summary>Stub type of System.Linq.IQueryProvider</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryProvider.#ctor">
            <summary>Initializes a new instance of type StubIQueryProvider</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryProvider.CreateQueryExpression">
            <summary>Sets the stub of IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryProvider.CreateQueryOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.Linq.IQueryable{``0}})">
            <summary>Sets stubs of CreateQuery(Expression expression)</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryProvider.ExecuteExpression">
            <summary>Sets the stub of IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryProvider.ExecuteOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,``0})">
            <summary>Sets stubs of Execute(Expression expression)</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryProvider.global::System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryProvider.global::System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryProvider.global::System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryProvider.global::System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubIQueryable">
            <summary>Stub type of System.Linq.IQueryable</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryable.#ctor">
            <summary>Initializes a new instance of type StubIQueryable</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryable.ElementTypeGet">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryable.ExpressionGet">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryable.GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryable.ProviderGet">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryable.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIQueryable.global::System#Linq#IQueryable#ElementType">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIQueryable.global::System#Linq#IQueryable#Expression">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIQueryable.global::System#Linq#IQueryable#Provider">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="T:System.Linq.Fakes.StubIQueryable`1">
            <summary>Stub type of System.Linq.IQueryable`1</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryable`1.#ctor">
            <summary>Initializes a new instance of type StubIQueryable</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryable`1.ElementTypeGet">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryable`1.ExpressionGet">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryable`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryable`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Linq.Fakes.StubIQueryable`1.ProviderGet">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryable`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Linq.Fakes.StubIQueryable`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIQueryable`1.global::System#Linq#IQueryable#ElementType">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIQueryable`1.global::System#Linq#IQueryable#Expression">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Linq.Fakes.StubIQueryable`1.global::System#Linq#IQueryable#Provider">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException">
            <summary>Shim type of System.Management.Instrumentation.InstanceNotFoundException</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.#ctor(System.Management.Instrumentation.InstanceNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.Constructor">
            <summary>Sets the shim of InstanceNotFoundException.InstanceNotFoundException()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InstanceNotFoundException.InstanceNotFoundException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.ConstructorString">
            <summary>Sets the shim of InstanceNotFoundException.InstanceNotFoundException(String message)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.ConstructorStringException">
            <summary>Sets the shim of InstanceNotFoundException.InstanceNotFoundException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimInstanceNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException">
            <summary>Shim type of System.Management.Instrumentation.InstrumentationBaseException</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.#ctor(System.Management.Instrumentation.InstrumentationBaseException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.Constructor">
            <summary>Sets the shim of InstrumentationBaseException.InstrumentationBaseException()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InstrumentationBaseException.InstrumentationBaseException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.ConstructorString">
            <summary>Sets the shim of InstrumentationBaseException.InstrumentationBaseException(String message)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.ConstructorStringException">
            <summary>Sets the shim of InstrumentationBaseException.InstrumentationBaseException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimInstrumentationBaseException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimInstrumentationException">
            <summary>Shim type of System.Management.Instrumentation.InstrumentationException</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationException.#ctor(System.Management.Instrumentation.InstrumentationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimInstrumentationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationException.Constructor">
            <summary>Sets the shim of InstrumentationException.InstrumentationException()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationException.ConstructorException">
            <summary>Sets the shim of InstrumentationException.InstrumentationException(Exception innerException)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InstrumentationException.InstrumentationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationException.ConstructorString">
            <summary>Sets the shim of InstrumentationException.InstrumentationException(String message)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimInstrumentationException.ConstructorStringException">
            <summary>Sets the shim of InstrumentationException.InstrumentationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimInstrumentationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementBindAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.#ctor(System.Management.Instrumentation.ManagementBindAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.Constructor">
            <summary>Sets the shim of ManagementBindAttribute.ManagementBindAttribute()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.SchemaGet">
            <summary>Sets the shim of ManagementBindAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.SchemaSetType">
            <summary>Sets the shim of ManagementBindAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.AllInstances.SchemaGet">
            <summary>Sets the shim of ManagementBindAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementBindAttribute.AllInstances.SchemaSetType">
            <summary>Sets the shim of ManagementBindAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementCommitAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementCommitAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementCommitAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementCommitAttribute.#ctor(System.Management.Instrumentation.ManagementCommitAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementCommitAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementCommitAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementCommitAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementCommitAttribute.Constructor">
            <summary>Sets the shim of ManagementCommitAttribute.ManagementCommitAttribute()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementCommitAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementConfigurationAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.#ctor(System.Management.Instrumentation.ManagementConfigurationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.Constructor">
            <summary>Sets the shim of ManagementConfigurationAttribute.ManagementConfigurationAttribute()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.ModeGet">
            <summary>Sets the shim of ManagementConfigurationAttribute.get_Mode()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.ModeSetManagementConfigurationType">
            <summary>Sets the shim of ManagementConfigurationAttribute.set_Mode(ManagementConfigurationType value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.SchemaGet">
            <summary>Sets the shim of ManagementConfigurationAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.SchemaSetType">
            <summary>Sets the shim of ManagementConfigurationAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.AllInstances.ModeGet">
            <summary>Sets the shim of ManagementConfigurationAttribute.get_Mode()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.AllInstances.ModeSetManagementConfigurationType">
            <summary>Sets the shim of ManagementConfigurationAttribute.set_Mode(ManagementConfigurationType value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.AllInstances.SchemaGet">
            <summary>Sets the shim of ManagementConfigurationAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementConfigurationAttribute.AllInstances.SchemaSetType">
            <summary>Sets the shim of ManagementConfigurationAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementCreateAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementCreateAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementCreateAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementCreateAttribute.#ctor(System.Management.Instrumentation.ManagementCreateAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementCreateAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementCreateAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementCreateAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementCreateAttribute.Constructor">
            <summary>Sets the shim of ManagementCreateAttribute.ManagementCreateAttribute()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementCreateAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementEntityAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.#ctor(System.Management.Instrumentation.ManagementEntityAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.Constructor">
            <summary>Sets the shim of ManagementEntityAttribute.ManagementEntityAttribute()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.ExternalGet">
            <summary>Sets the shim of ManagementEntityAttribute.get_External()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.ExternalSetBoolean">
            <summary>Sets the shim of ManagementEntityAttribute.set_External(Boolean value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.NameGet">
            <summary>Sets the shim of ManagementEntityAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.NameSetString">
            <summary>Sets the shim of ManagementEntityAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.SingletonGet">
            <summary>Sets the shim of ManagementEntityAttribute.get_Singleton()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.SingletonSetBoolean">
            <summary>Sets the shim of ManagementEntityAttribute.set_Singleton(Boolean value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.AllInstances.ExternalGet">
            <summary>Sets the shim of ManagementEntityAttribute.get_External()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.AllInstances.ExternalSetBoolean">
            <summary>Sets the shim of ManagementEntityAttribute.set_External(Boolean value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ManagementEntityAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of ManagementEntityAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.AllInstances.SingletonGet">
            <summary>Sets the shim of ManagementEntityAttribute.get_Singleton()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEntityAttribute.AllInstances.SingletonSetBoolean">
            <summary>Sets the shim of ManagementEntityAttribute.set_Singleton(Boolean value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementEnumeratorAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.#ctor(System.Management.Instrumentation.ManagementEnumeratorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.Constructor">
            <summary>Sets the shim of ManagementEnumeratorAttribute.ManagementEnumeratorAttribute()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.SchemaGet">
            <summary>Sets the shim of ManagementEnumeratorAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.SchemaSetType">
            <summary>Sets the shim of ManagementEnumeratorAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.AllInstances.SchemaGet">
            <summary>Sets the shim of ManagementEnumeratorAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementEnumeratorAttribute.AllInstances.SchemaSetType">
            <summary>Sets the shim of ManagementEnumeratorAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementKeyAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementKeyAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementKeyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementKeyAttribute.#ctor(System.Management.Instrumentation.ManagementKeyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementKeyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementKeyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementKeyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementKeyAttribute.Constructor">
            <summary>Sets the shim of ManagementKeyAttribute.ManagementKeyAttribute()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementKeyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementMemberAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.#ctor(System.Management.Instrumentation.ManagementMemberAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.Constructor">
            <summary>Sets the shim of ManagementMemberAttribute.ManagementMemberAttribute()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.NameGet">
            <summary>Sets the shim of ManagementMemberAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.NameSetString">
            <summary>Sets the shim of ManagementMemberAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ManagementMemberAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementMemberAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of ManagementMemberAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementNameAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute.#ctor(System.Management.Instrumentation.ManagementNameAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute.ConstructorString">
            <summary>Sets the shim of ManagementNameAttribute.ManagementNameAttribute(String name)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute.NameGet">
            <summary>Sets the shim of ManagementNameAttribute.get_Name()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementNameAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ManagementNameAttribute.get_Name()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementNewInstanceAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementNewInstanceAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementNewInstanceAttribute.#ctor(System.Management.Instrumentation.ManagementNewInstanceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementNewInstanceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementNewInstanceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementNewInstanceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementNewInstanceAttribute.Constructor">
            <summary>Sets the shim of ManagementNewInstanceAttribute.ManagementNewInstanceAttribute()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementNewInstanceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementProbeAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.#ctor(System.Management.Instrumentation.ManagementProbeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.Constructor">
            <summary>Sets the shim of ManagementProbeAttribute.ManagementProbeAttribute()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.SchemaGet">
            <summary>Sets the shim of ManagementProbeAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.SchemaSetType">
            <summary>Sets the shim of ManagementProbeAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.AllInstances.SchemaGet">
            <summary>Sets the shim of ManagementProbeAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementProbeAttribute.AllInstances.SchemaSetType">
            <summary>Sets the shim of ManagementProbeAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementReferenceAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.#ctor(System.Management.Instrumentation.ManagementReferenceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.Constructor">
            <summary>Sets the shim of ManagementReferenceAttribute.ManagementReferenceAttribute()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.TypeGet">
            <summary>Sets the shim of ManagementReferenceAttribute.get_Type()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.TypeSetString">
            <summary>Sets the shim of ManagementReferenceAttribute.set_Type(String value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.AllInstances.TypeGet">
            <summary>Sets the shim of ManagementReferenceAttribute.get_Type()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementReferenceAttribute.AllInstances.TypeSetString">
            <summary>Sets the shim of ManagementReferenceAttribute.set_Type(String value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementRemoveAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.#ctor(System.Management.Instrumentation.ManagementRemoveAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.Constructor">
            <summary>Sets the shim of ManagementRemoveAttribute.ManagementRemoveAttribute()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.SchemaGet">
            <summary>Sets the shim of ManagementRemoveAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.SchemaSetType">
            <summary>Sets the shim of ManagementRemoveAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.AllInstances.SchemaGet">
            <summary>Sets the shim of ManagementRemoveAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementRemoveAttribute.AllInstances.SchemaSetType">
            <summary>Sets the shim of ManagementRemoveAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute">
            <summary>Shim type of System.Management.Instrumentation.ManagementTaskAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.#ctor(System.Management.Instrumentation.ManagementTaskAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.Constructor">
            <summary>Sets the shim of ManagementTaskAttribute.ManagementTaskAttribute()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.SchemaGet">
            <summary>Sets the shim of ManagementTaskAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.SchemaSetType">
            <summary>Sets the shim of ManagementTaskAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.AllInstances.SchemaGet">
            <summary>Sets the shim of ManagementTaskAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimManagementTaskAttribute.AllInstances.SchemaSetType">
            <summary>Sets the shim of ManagementTaskAttribute.set_Schema(Type value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute">
            <summary>Shim type of System.Management.Instrumentation.WmiConfigurationAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.#ctor(System.Management.Instrumentation.WmiConfigurationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.ConstructorString">
            <summary>Sets the shim of WmiConfigurationAttribute.WmiConfigurationAttribute(String scope)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.HostingGroupGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_HostingGroup()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.HostingGroupSetString">
            <summary>Sets the shim of WmiConfigurationAttribute.set_HostingGroup(String value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.HostingModelGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_HostingModel()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.HostingModelSetManagementHostingModel">
            <summary>Sets the shim of WmiConfigurationAttribute.set_HostingModel(ManagementHostingModel value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.IdentifyLevelGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_IdentifyLevel()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.IdentifyLevelSetBoolean">
            <summary>Sets the shim of WmiConfigurationAttribute.set_IdentifyLevel(Boolean value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.NamespaceSecurityGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_NamespaceSecurity()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.NamespaceSecuritySetString">
            <summary>Sets the shim of WmiConfigurationAttribute.set_NamespaceSecurity(String value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.ScopeGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_Scope()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.SecurityRestrictionGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_SecurityRestriction()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.SecurityRestrictionSetString">
            <summary>Sets the shim of WmiConfigurationAttribute.set_SecurityRestriction(String value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.HostingGroupGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_HostingGroup()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.HostingGroupSetString">
            <summary>Sets the shim of WmiConfigurationAttribute.set_HostingGroup(String value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.HostingModelGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_HostingModel()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.HostingModelSetManagementHostingModel">
            <summary>Sets the shim of WmiConfigurationAttribute.set_HostingModel(ManagementHostingModel value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.IdentifyLevelGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_IdentifyLevel()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.IdentifyLevelSetBoolean">
            <summary>Sets the shim of WmiConfigurationAttribute.set_IdentifyLevel(Boolean value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.NamespaceSecurityGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_NamespaceSecurity()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.NamespaceSecuritySetString">
            <summary>Sets the shim of WmiConfigurationAttribute.set_NamespaceSecurity(String value)</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.ScopeGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_Scope()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.SecurityRestrictionGet">
            <summary>Sets the shim of WmiConfigurationAttribute.get_SecurityRestriction()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.ShimWmiConfigurationAttribute.AllInstances.SecurityRestrictionSetString">
            <summary>Sets the shim of WmiConfigurationAttribute.set_SecurityRestriction(String value)</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException">
            <summary>Stub type of System.Management.Instrumentation.InstanceNotFoundException</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInstanceNotFoundException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInstanceNotFoundException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.InitializeStub">
            <summary>Initializes a new instance of type StubInstanceNotFoundException</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstanceNotFoundException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException">
            <summary>Stub type of System.Management.Instrumentation.InstrumentationBaseException</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInstrumentationBaseException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInstrumentationBaseException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.InitializeStub">
            <summary>Initializes a new instance of type StubInstrumentationBaseException</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationBaseException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.StubInstrumentationException">
            <summary>Stub type of System.Management.Instrumentation.InstrumentationException</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInstrumentationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInstrumentationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.InitializeStub">
            <summary>Initializes a new instance of type StubInstrumentationException</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubInstrumentationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubInstrumentationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubInstrumentationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute">
            <summary>Stub type of System.Management.Instrumentation.ManagementMemberAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubManagementMemberAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubManagementMemberAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute">
            <summary>Stub type of System.Management.Instrumentation.ManagementNewInstanceAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubManagementNewInstanceAttribute</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Management.Instrumentation.Fakes.StubManagementNewInstanceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder">
            <summary>Stub type of System.Runtime.CompilerServices.CallSiteBinder</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)">
            <summary>Sets the stub of CallSiteBinder.Bind(Object[] args, ReadOnlyCollection`1&lt;ParameterExpression&gt; parameters, LabelTarget returnLabel)</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])">
            <summary>Sets the stub of CallSiteBinder.BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder.BindDelegateOf1CallSiteOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.CompilerServices.CallSite{``0},System.Object[],``0})">
            <summary>Sets stubs of BindDelegate(CallSite`1&lt;!!0&gt; site, Object[] args)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder.BindObjectArrayReadOnlyCollectionOfParameterExpressionLabelTarget">
            <summary>Sets the stub of CallSiteBinder.Bind(Object[] args, ReadOnlyCollection`1&lt;ParameterExpression&gt; parameters, LabelTarget returnLabel)</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder.InitializeStub">
            <summary>Initializes a new instance of type StubCallSiteBinder</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallSiteBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubDebugInfoGenerator">
            <summary>Stub type of System.Runtime.CompilerServices.DebugInfoGenerator</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubDebugInfoGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubDebugInfoGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubDebugInfoGenerator</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubDebugInfoGenerator.MarkSequencePoint(System.Linq.Expressions.LambdaExpression,System.Int32,System.Linq.Expressions.DebugInfoExpression)">
            <summary>Sets the stub of DebugInfoGenerator.MarkSequencePoint(LambdaExpression method, Int32 ilOffset, DebugInfoExpression sequencePoint)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubDebugInfoGenerator.MarkSequencePointLambdaExpressionInt32DebugInfoExpression">
            <summary>Sets the stub of DebugInfoGenerator.MarkSequencePoint(LambdaExpression method, Int32 ilOffset, DebugInfoExpression sequencePoint)</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubDebugInfoGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubDebugInfoGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubDebugInfoGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubIRuntimeVariables">
            <summary>Stub type of System.Runtime.CompilerServices.IRuntimeVariables</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubIRuntimeVariables.#ctor">
            <summary>Initializes a new instance of type StubIRuntimeVariables</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubIRuntimeVariables.CountGet">
            <summary>Sets the stub of IRuntimeVariables.get_Count()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubIRuntimeVariables.ItemGetInt32">
            <summary>Sets the stub of IRuntimeVariables.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubIRuntimeVariables.ItemSetInt32Object">
            <summary>Sets the stub of IRuntimeVariables.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubIRuntimeVariables.global::System#Runtime#CompilerServices#IRuntimeVariables#Count">
            <summary>Sets the stub of IRuntimeVariables.get_Count()</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubIRuntimeVariables.System#Runtime#CompilerServices#IRuntimeVariables#Item(System.Int32)">
            <summary>Sets the stub of IRuntimeVariables.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubIStrongBox">
            <summary>Stub type of System.Runtime.CompilerServices.IStrongBox</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubIStrongBox.#ctor">
            <summary>Initializes a new instance of type StubIStrongBox</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubIStrongBox.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubIStrongBox.Value as a property with a backing field.</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubIStrongBox.ValueGet">
            <summary>Sets the stub of IStrongBox.get_Value()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubIStrongBox.ValueSetObject">
            <summary>Sets the stub of IStrongBox.set_Value(Object value)</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubIStrongBox.global::System#Runtime#CompilerServices#IStrongBox#Value">
            <summary>Sets the stub of IStrongBox.get_Value()</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubStrongBox`1">
            <summary>Stub type of System.Runtime.CompilerServices.StrongBox`1</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubStrongBox`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubStrongBox`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubStrongBox`1.InitializeStub">
            <summary>Initializes a new instance of type StubStrongBox</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubStrongBox`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubStrongBox`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubStrongBox`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo">
            <summary>Stub type of System.Runtime.InteropServices.ComAwareEventInfo</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
            <summary>Sets the stub of ComAwareEventInfo.AddEventHandler(Object target, Delegate handler)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.AddEventHandlerObjectDelegate">
            <summary>Sets the stub of ComAwareEventInfo.AddEventHandler(Object target, Delegate handler)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.AddMethodGet">
            <summary>Sets the stub of EventInfo.get_AddMethod()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.AttributesGet">
            <summary>Sets the stub of ComAwareEventInfo.get_Attributes()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.CustomAttributesGet">
            <summary>Sets the stub of MemberInfo.get_CustomAttributes()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.DeclaringTypeGet">
            <summary>Sets the stub of ComAwareEventInfo.get_DeclaringType()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.Equals(System.Object)">
            <summary>Sets the stub of EventInfo.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.EqualsObject">
            <summary>Sets the stub of EventInfo.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.EventHandlerTypeGet">
            <summary>Sets the stub of EventInfo.get_EventHandlerType()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetAddMethod(System.Boolean)">
            <summary>Sets the stub of ComAwareEventInfo.GetAddMethod(Boolean nonPublic)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetAddMethodBoolean">
            <summary>Sets the stub of ComAwareEventInfo.GetAddMethod(Boolean nonPublic)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetCustomAttributes(System.Boolean)">
            <summary>Sets the stub of ComAwareEventInfo.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Sets the stub of ComAwareEventInfo.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetCustomAttributesBoolean">
            <summary>Sets the stub of ComAwareEventInfo.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetCustomAttributesData">
            <summary>Sets the stub of MemberInfo.GetCustomAttributesData()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetCustomAttributesData01">
            <summary>Sets the stub of MemberInfo.GetCustomAttributesData()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetCustomAttributesTypeBoolean">
            <summary>Sets the stub of ComAwareEventInfo.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetHashCode">
            <summary>Sets the stub of EventInfo.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetHashCode01">
            <summary>Sets the stub of EventInfo.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetOtherMethods(System.Boolean)">
            <summary>Sets the stub of EventInfo.GetOtherMethods(Boolean nonPublic)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetOtherMethodsBoolean">
            <summary>Sets the stub of EventInfo.GetOtherMethods(Boolean nonPublic)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetRaiseMethod(System.Boolean)">
            <summary>Sets the stub of ComAwareEventInfo.GetRaiseMethod(Boolean nonPublic)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetRaiseMethodBoolean">
            <summary>Sets the stub of ComAwareEventInfo.GetRaiseMethod(Boolean nonPublic)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetRemoveMethod(System.Boolean)">
            <summary>Sets the stub of ComAwareEventInfo.GetRemoveMethod(Boolean nonPublic)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.GetRemoveMethodBoolean">
            <summary>Sets the stub of ComAwareEventInfo.GetRemoveMethod(Boolean nonPublic)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.InitializeStub">
            <summary>Initializes a new instance of type StubComAwareEventInfo</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
            <summary>Sets the stub of ComAwareEventInfo.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.IsDefinedTypeBoolean">
            <summary>Sets the stub of ComAwareEventInfo.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.IsMulticastGet">
            <summary>Sets the stub of EventInfo.get_IsMulticast()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.MemberTypeGet">
            <summary>Sets the stub of EventInfo.get_MemberType()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.MetadataTokenGet">
            <summary>Sets the stub of MemberInfo.get_MetadataToken()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.ModuleGet">
            <summary>Sets the stub of MemberInfo.get_Module()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.NameGet">
            <summary>Sets the stub of ComAwareEventInfo.get_Name()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.RaiseMethodGet">
            <summary>Sets the stub of EventInfo.get_RaiseMethod()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.ReflectedTypeGet">
            <summary>Sets the stub of ComAwareEventInfo.get_ReflectedType()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
            <summary>Sets the stub of ComAwareEventInfo.RemoveEventHandler(Object target, Delegate handler)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.RemoveEventHandlerObjectDelegate">
            <summary>Sets the stub of ComAwareEventInfo.RemoveEventHandler(Object target, Delegate handler)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.RemoveMethodGet">
            <summary>Sets the stub of EventInfo.get_RemoveMethod()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.AddMethod">
            <summary>Sets the stub of EventInfo.get_AddMethod()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.Attributes">
            <summary>Sets the stub of ComAwareEventInfo.get_Attributes()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.CustomAttributes">
            <summary>Sets the stub of MemberInfo.get_CustomAttributes()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.DeclaringType">
            <summary>Sets the stub of ComAwareEventInfo.get_DeclaringType()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.EventHandlerType">
            <summary>Sets the stub of EventInfo.get_EventHandlerType()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.IsMulticast">
            <summary>Sets the stub of EventInfo.get_IsMulticast()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.MemberType">
            <summary>Sets the stub of EventInfo.get_MemberType()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.MetadataToken">
            <summary>Sets the stub of MemberInfo.get_MetadataToken()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.Module">
            <summary>Sets the stub of MemberInfo.get_Module()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.Name">
            <summary>Sets the stub of ComAwareEventInfo.get_Name()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.RaiseMethod">
            <summary>Sets the stub of EventInfo.get_RaiseMethod()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.ReflectedType">
            <summary>Sets the stub of ComAwareEventInfo.get_ReflectedType()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubComAwareEventInfo.RemoveMethod">
            <summary>Sets the stub of EventInfo.get_RemoveMethod()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider">
            <summary>Shim type of System.Security.Cryptography.AesCryptoServiceProvider</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.#ctor(System.Security.Cryptography.AesCryptoServiceProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.Constructor">
            <summary>Sets the shim of AesCryptoServiceProvider.AesCryptoServiceProvider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.CreateDecryptor">
            <summary>Sets the shim of AesCryptoServiceProvider.CreateDecryptor()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.CreateDecryptorByteArrayByteArray">
            <summary>Sets the shim of AesCryptoServiceProvider.CreateDecryptor(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.CreateEncryptor">
            <summary>Sets the shim of AesCryptoServiceProvider.CreateEncryptor()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.CreateEncryptorByteArrayByteArray">
            <summary>Sets the shim of AesCryptoServiceProvider.CreateEncryptor(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.DisposeBoolean">
            <summary>Sets the shim of AesCryptoServiceProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.GenerateIV">
            <summary>Sets the shim of AesCryptoServiceProvider.GenerateIV()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.GenerateKey">
            <summary>Sets the shim of AesCryptoServiceProvider.GenerateKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.KeyGet">
            <summary>Sets the shim of AesCryptoServiceProvider.get_Key()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.KeySetByteArray">
            <summary>Sets the shim of AesCryptoServiceProvider.set_Key(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.KeySizeGet">
            <summary>Sets the shim of AesCryptoServiceProvider.get_KeySize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.KeySizeSetInt32">
            <summary>Sets the shim of AesCryptoServiceProvider.set_KeySize(Int32 value)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.CreateDecryptor">
            <summary>Sets the shim of AesCryptoServiceProvider.CreateDecryptor()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.CreateDecryptorByteArrayByteArray">
            <summary>Sets the shim of AesCryptoServiceProvider.CreateDecryptor(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.CreateEncryptor">
            <summary>Sets the shim of AesCryptoServiceProvider.CreateEncryptor()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.CreateEncryptorByteArrayByteArray">
            <summary>Sets the shim of AesCryptoServiceProvider.CreateEncryptor(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AesCryptoServiceProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.GenerateIV">
            <summary>Sets the shim of AesCryptoServiceProvider.GenerateIV()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.GenerateKey">
            <summary>Sets the shim of AesCryptoServiceProvider.GenerateKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.KeyGet">
            <summary>Sets the shim of AesCryptoServiceProvider.get_Key()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.KeySetByteArray">
            <summary>Sets the shim of AesCryptoServiceProvider.set_Key(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.KeySizeGet">
            <summary>Sets the shim of AesCryptoServiceProvider.get_KeySize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesCryptoServiceProvider.AllInstances.KeySizeSetInt32">
            <summary>Sets the shim of AesCryptoServiceProvider.set_KeySize(Int32 value)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimAesManaged">
            <summary>Shim type of System.Security.Cryptography.AesManaged</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesManaged.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesManaged.#ctor(System.Security.Cryptography.AesManaged)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesManaged.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesManaged.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimAesManaged.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.Constructor">
            <summary>Sets the shim of AesManaged.AesManaged()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.CreateDecryptor">
            <summary>Sets the shim of AesManaged.CreateDecryptor()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.CreateDecryptorByteArrayByteArray">
            <summary>Sets the shim of AesManaged.CreateDecryptor(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.CreateEncryptor">
            <summary>Sets the shim of AesManaged.CreateEncryptor()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.CreateEncryptorByteArrayByteArray">
            <summary>Sets the shim of AesManaged.CreateEncryptor(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.DisposeBoolean">
            <summary>Sets the shim of AesManaged.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.FeedbackSizeGet">
            <summary>Sets the shim of AesManaged.get_FeedbackSize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.FeedbackSizeSetInt32">
            <summary>Sets the shim of AesManaged.set_FeedbackSize(Int32 value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.GenerateIV">
            <summary>Sets the shim of AesManaged.GenerateIV()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.GenerateKey">
            <summary>Sets the shim of AesManaged.GenerateKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.IVGet">
            <summary>Sets the shim of AesManaged.get_IV()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.IVSetByteArray">
            <summary>Sets the shim of AesManaged.set_IV(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.KeyGet">
            <summary>Sets the shim of AesManaged.get_Key()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.KeySetByteArray">
            <summary>Sets the shim of AesManaged.set_Key(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.KeySizeGet">
            <summary>Sets the shim of AesManaged.get_KeySize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.KeySizeSetInt32">
            <summary>Sets the shim of AesManaged.set_KeySize(Int32 value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.ModeGet">
            <summary>Sets the shim of AesManaged.get_Mode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.ModeSetCipherMode">
            <summary>Sets the shim of AesManaged.set_Mode(CipherMode value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.PaddingGet">
            <summary>Sets the shim of AesManaged.get_Padding()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.PaddingSetPaddingMode">
            <summary>Sets the shim of AesManaged.set_Padding(PaddingMode value)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.CreateDecryptor">
            <summary>Sets the shim of AesManaged.CreateDecryptor()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.CreateDecryptorByteArrayByteArray">
            <summary>Sets the shim of AesManaged.CreateDecryptor(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.CreateEncryptor">
            <summary>Sets the shim of AesManaged.CreateEncryptor()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.CreateEncryptorByteArrayByteArray">
            <summary>Sets the shim of AesManaged.CreateEncryptor(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AesManaged.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.FeedbackSizeGet">
            <summary>Sets the shim of AesManaged.get_FeedbackSize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.FeedbackSizeSetInt32">
            <summary>Sets the shim of AesManaged.set_FeedbackSize(Int32 value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.GenerateIV">
            <summary>Sets the shim of AesManaged.GenerateIV()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.GenerateKey">
            <summary>Sets the shim of AesManaged.GenerateKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.IVGet">
            <summary>Sets the shim of AesManaged.get_IV()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.IVSetByteArray">
            <summary>Sets the shim of AesManaged.set_IV(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.KeyGet">
            <summary>Sets the shim of AesManaged.get_Key()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.KeySetByteArray">
            <summary>Sets the shim of AesManaged.set_Key(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.KeySizeGet">
            <summary>Sets the shim of AesManaged.get_KeySize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.KeySizeSetInt32">
            <summary>Sets the shim of AesManaged.set_KeySize(Int32 value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.ModeGet">
            <summary>Sets the shim of AesManaged.get_Mode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.ModeSetCipherMode">
            <summary>Sets the shim of AesManaged.set_Mode(CipherMode value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.PaddingGet">
            <summary>Sets the shim of AesManaged.get_Padding()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimAesManaged.AllInstances.PaddingSetPaddingMode">
            <summary>Sets the shim of AesManaged.set_Padding(PaddingMode value)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngAlgorithm">
            <summary>Shim type of System.Security.Cryptography.CngAlgorithm</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithm.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithm.#ctor(System.Security.Cryptography.CngAlgorithm)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithm.Bind(System.IEquatable{System.Security.Cryptography.CngAlgorithm})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.AlgorithmGet">
            <summary>Sets the shim of CngAlgorithm.get_Algorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.ConstructorString">
            <summary>Sets the shim of CngAlgorithm.CngAlgorithm(String algorithm)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.ECDiffieHellmanP256Get">
            <summary>Sets the shim of CngAlgorithm.get_ECDiffieHellmanP256()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.ECDiffieHellmanP384Get">
            <summary>Sets the shim of CngAlgorithm.get_ECDiffieHellmanP384()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.ECDiffieHellmanP521Get">
            <summary>Sets the shim of CngAlgorithm.get_ECDiffieHellmanP521()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.ECDsaP256Get">
            <summary>Sets the shim of CngAlgorithm.get_ECDsaP256()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.ECDsaP384Get">
            <summary>Sets the shim of CngAlgorithm.get_ECDsaP384()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.ECDsaP521Get">
            <summary>Sets the shim of CngAlgorithm.get_ECDsaP521()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.EqualityOpCngAlgorithmCngAlgorithm">
            <summary>Sets the shim of CngAlgorithm.op_Equality(CngAlgorithm left, CngAlgorithm right)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.EqualsCngAlgorithm">
            <summary>Sets the shim of CngAlgorithm.Equals(CngAlgorithm other)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.EqualsObject">
            <summary>Sets the shim of CngAlgorithm.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.GetHashCode">
            <summary>Sets the shim of CngAlgorithm.GetHashCode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.InequalityOpCngAlgorithmCngAlgorithm">
            <summary>Sets the shim of CngAlgorithm.op_Inequality(CngAlgorithm left, CngAlgorithm right)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.MD5Get">
            <summary>Sets the shim of CngAlgorithm.get_MD5()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.Sha1Get">
            <summary>Sets the shim of CngAlgorithm.get_Sha1()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.Sha256Get">
            <summary>Sets the shim of CngAlgorithm.get_Sha256()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.Sha384Get">
            <summary>Sets the shim of CngAlgorithm.get_Sha384()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.Sha512Get">
            <summary>Sets the shim of CngAlgorithm.get_Sha512()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.ToString">
            <summary>Sets the shim of CngAlgorithm.ToString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngAlgorithm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.AllInstances.AlgorithmGet">
            <summary>Sets the shim of CngAlgorithm.get_Algorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.AllInstances.EqualsCngAlgorithm">
            <summary>Sets the shim of CngAlgorithm.Equals(CngAlgorithm other)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.AllInstances.EqualsObject">
            <summary>Sets the shim of CngAlgorithm.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.AllInstances.GetHashCode01">
            <summary>Sets the shim of CngAlgorithm.GetHashCode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithm.AllInstances.ToString01">
            <summary>Sets the shim of CngAlgorithm.ToString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup">
            <summary>Shim type of System.Security.Cryptography.CngAlgorithmGroup</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.#ctor(System.Security.Cryptography.CngAlgorithmGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.Bind(System.IEquatable{System.Security.Cryptography.CngAlgorithmGroup})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.AlgorithmGroupGet">
            <summary>Sets the shim of CngAlgorithmGroup.get_AlgorithmGroup()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.ConstructorString">
            <summary>Sets the shim of CngAlgorithmGroup.CngAlgorithmGroup(String algorithmGroup)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.DiffieHellmanGet">
            <summary>Sets the shim of CngAlgorithmGroup.get_DiffieHellman()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.DsaGet">
            <summary>Sets the shim of CngAlgorithmGroup.get_Dsa()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.ECDiffieHellmanGet">
            <summary>Sets the shim of CngAlgorithmGroup.get_ECDiffieHellman()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.ECDsaGet">
            <summary>Sets the shim of CngAlgorithmGroup.get_ECDsa()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.EqualityOpCngAlgorithmGroupCngAlgorithmGroup">
            <summary>Sets the shim of CngAlgorithmGroup.op_Equality(CngAlgorithmGroup left, CngAlgorithmGroup right)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.EqualsCngAlgorithmGroup">
            <summary>Sets the shim of CngAlgorithmGroup.Equals(CngAlgorithmGroup other)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.EqualsObject">
            <summary>Sets the shim of CngAlgorithmGroup.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.GetHashCode">
            <summary>Sets the shim of CngAlgorithmGroup.GetHashCode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.InequalityOpCngAlgorithmGroupCngAlgorithmGroup">
            <summary>Sets the shim of CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup left, CngAlgorithmGroup right)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.RsaGet">
            <summary>Sets the shim of CngAlgorithmGroup.get_Rsa()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.ToString">
            <summary>Sets the shim of CngAlgorithmGroup.ToString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.AllInstances.AlgorithmGroupGet">
            <summary>Sets the shim of CngAlgorithmGroup.get_AlgorithmGroup()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.AllInstances.EqualsCngAlgorithmGroup">
            <summary>Sets the shim of CngAlgorithmGroup.Equals(CngAlgorithmGroup other)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.AllInstances.EqualsObject">
            <summary>Sets the shim of CngAlgorithmGroup.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.AllInstances.GetHashCode01">
            <summary>Sets the shim of CngAlgorithmGroup.GetHashCode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngAlgorithmGroup.AllInstances.ToString01">
            <summary>Sets the shim of CngAlgorithmGroup.ToString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngKey">
            <summary>Shim type of System.Security.Cryptography.CngKey</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKey.#ctor(System.Security.Cryptography.CngKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKey.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AlgorithmGet">
            <summary>Sets the shim of CngKey.get_Algorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AlgorithmGroupGet">
            <summary>Sets the shim of CngKey.get_AlgorithmGroup()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.Constructor">
            <summary>Sets the shim of CngKey.CngKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.CreateCngAlgorithm">
            <summary>Sets the shim of CngKey.Create(CngAlgorithm algorithm)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.CreateCngAlgorithmString">
            <summary>Sets the shim of CngKey.Create(CngAlgorithm algorithm, String keyName)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.CreateCngAlgorithmStringCngKeyCreationParameters">
            <summary>Sets the shim of CngKey.Create(CngAlgorithm algorithm, String keyName, CngKeyCreationParameters creationParameters)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.Delete">
            <summary>Sets the shim of CngKey.Delete()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.Dispose">
            <summary>Sets the shim of CngKey.Dispose()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ExistsString">
            <summary>Sets the shim of CngKey.Exists(String keyName)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ExistsStringCngProvider">
            <summary>Sets the shim of CngKey.Exists(String keyName, CngProvider provider)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ExistsStringCngProviderCngKeyOpenOptions">
            <summary>Sets the shim of CngKey.Exists(String keyName, CngProvider provider, CngKeyOpenOptions options)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ExportCngKeyBlobFormat">
            <summary>Sets the shim of CngKey.Export(CngKeyBlobFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ExportPolicyGet">
            <summary>Sets the shim of CngKey.get_ExportPolicy()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.GetPropertyStringCngPropertyOptions">
            <summary>Sets the shim of CngKey.GetProperty(String name, CngPropertyOptions options)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.HandleGet">
            <summary>Sets the shim of CngKey.get_Handle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.HasPropertyStringCngPropertyOptions">
            <summary>Sets the shim of CngKey.HasProperty(String name, CngPropertyOptions options)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ImportByteArrayCngKeyBlobFormat">
            <summary>Sets the shim of CngKey.Import(Byte[] keyBlob, CngKeyBlobFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ImportByteArrayCngKeyBlobFormatCngProvider">
            <summary>Sets the shim of CngKey.Import(Byte[] keyBlob, CngKeyBlobFormat format, CngProvider provider)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.IsEphemeralGet">
            <summary>Sets the shim of CngKey.get_IsEphemeral()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.IsEphemeralSetBoolean">
            <summary>Sets the shim of CngKey.set_IsEphemeral(Boolean value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.IsMachineKeyGet">
            <summary>Sets the shim of CngKey.get_IsMachineKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.KeyNameGet">
            <summary>Sets the shim of CngKey.get_KeyName()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.KeySizeGet">
            <summary>Sets the shim of CngKey.get_KeySize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.KeyUsageGet">
            <summary>Sets the shim of CngKey.get_KeyUsage()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.OpenSafeNCryptKeyHandleCngKeyHandleOpenOptions">
            <summary>Sets the shim of CngKey.Open(SafeNCryptKeyHandle keyHandle, CngKeyHandleOpenOptions keyHandleOpenOptions)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.OpenString">
            <summary>Sets the shim of CngKey.Open(String keyName)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.OpenStringCngProvider">
            <summary>Sets the shim of CngKey.Open(String keyName, CngProvider provider)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.OpenStringCngProviderCngKeyOpenOptions">
            <summary>Sets the shim of CngKey.Open(String keyName, CngProvider provider, CngKeyOpenOptions openOptions)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ParentWindowHandleGet">
            <summary>Sets the shim of CngKey.get_ParentWindowHandle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ParentWindowHandleSetIntPtr">
            <summary>Sets the shim of CngKey.set_ParentWindowHandle(IntPtr value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ProviderGet">
            <summary>Sets the shim of CngKey.get_Provider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.ProviderHandleGet">
            <summary>Sets the shim of CngKey.get_ProviderHandle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.SetPropertyCngProperty">
            <summary>Sets the shim of CngKey.SetProperty(CngProperty property)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.UIPolicyGet">
            <summary>Sets the shim of CngKey.get_UIPolicy()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.UniqueNameGet">
            <summary>Sets the shim of CngKey.get_UniqueName()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.AlgorithmGet">
            <summary>Sets the shim of CngKey.get_Algorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.AlgorithmGroupGet">
            <summary>Sets the shim of CngKey.get_AlgorithmGroup()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.Constructor">
            <summary>Sets the shim of CngKey.CngKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.Delete">
            <summary>Sets the shim of CngKey.Delete()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.Dispose">
            <summary>Sets the shim of CngKey.Dispose()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.ExportCngKeyBlobFormat">
            <summary>Sets the shim of CngKey.Export(CngKeyBlobFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.ExportPolicyGet">
            <summary>Sets the shim of CngKey.get_ExportPolicy()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.GetPropertyStringCngPropertyOptions">
            <summary>Sets the shim of CngKey.GetProperty(String name, CngPropertyOptions options)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.HandleGet">
            <summary>Sets the shim of CngKey.get_Handle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.HasPropertyStringCngPropertyOptions">
            <summary>Sets the shim of CngKey.HasProperty(String name, CngPropertyOptions options)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.IsEphemeralGet">
            <summary>Sets the shim of CngKey.get_IsEphemeral()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.IsEphemeralSetBoolean">
            <summary>Sets the shim of CngKey.set_IsEphemeral(Boolean value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.IsMachineKeyGet">
            <summary>Sets the shim of CngKey.get_IsMachineKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.KeyNameGet">
            <summary>Sets the shim of CngKey.get_KeyName()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.KeySizeGet">
            <summary>Sets the shim of CngKey.get_KeySize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.KeyUsageGet">
            <summary>Sets the shim of CngKey.get_KeyUsage()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.ParentWindowHandleGet">
            <summary>Sets the shim of CngKey.get_ParentWindowHandle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.ParentWindowHandleSetIntPtr">
            <summary>Sets the shim of CngKey.set_ParentWindowHandle(IntPtr value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.ProviderGet">
            <summary>Sets the shim of CngKey.get_Provider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.ProviderHandleGet">
            <summary>Sets the shim of CngKey.get_ProviderHandle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.SetPropertyCngProperty">
            <summary>Sets the shim of CngKey.SetProperty(CngProperty property)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.UIPolicyGet">
            <summary>Sets the shim of CngKey.get_UIPolicy()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKey.AllInstances.UniqueNameGet">
            <summary>Sets the shim of CngKey.get_UniqueName()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat">
            <summary>Shim type of System.Security.Cryptography.CngKeyBlobFormat</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.#ctor(System.Security.Cryptography.CngKeyBlobFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.Bind(System.IEquatable{System.Security.Cryptography.CngKeyBlobFormat})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.ConstructorString">
            <summary>Sets the shim of CngKeyBlobFormat.CngKeyBlobFormat(String format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.EccPrivateBlobGet">
            <summary>Sets the shim of CngKeyBlobFormat.get_EccPrivateBlob()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.EccPublicBlobGet">
            <summary>Sets the shim of CngKeyBlobFormat.get_EccPublicBlob()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.EqualityOpCngKeyBlobFormatCngKeyBlobFormat">
            <summary>Sets the shim of CngKeyBlobFormat.op_Equality(CngKeyBlobFormat left, CngKeyBlobFormat right)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.EqualsCngKeyBlobFormat">
            <summary>Sets the shim of CngKeyBlobFormat.Equals(CngKeyBlobFormat other)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.EqualsObject">
            <summary>Sets the shim of CngKeyBlobFormat.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.FormatGet">
            <summary>Sets the shim of CngKeyBlobFormat.get_Format()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.GenericPrivateBlobGet">
            <summary>Sets the shim of CngKeyBlobFormat.get_GenericPrivateBlob()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.GenericPublicBlobGet">
            <summary>Sets the shim of CngKeyBlobFormat.get_GenericPublicBlob()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.GetHashCode">
            <summary>Sets the shim of CngKeyBlobFormat.GetHashCode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.InequalityOpCngKeyBlobFormatCngKeyBlobFormat">
            <summary>Sets the shim of CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat left, CngKeyBlobFormat right)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.OpaqueTransportBlobGet">
            <summary>Sets the shim of CngKeyBlobFormat.get_OpaqueTransportBlob()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.Pkcs8PrivateBlobGet">
            <summary>Sets the shim of CngKeyBlobFormat.get_Pkcs8PrivateBlob()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.ToString">
            <summary>Sets the shim of CngKeyBlobFormat.ToString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.AllInstances.EqualsCngKeyBlobFormat">
            <summary>Sets the shim of CngKeyBlobFormat.Equals(CngKeyBlobFormat other)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.AllInstances.EqualsObject">
            <summary>Sets the shim of CngKeyBlobFormat.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.AllInstances.FormatGet">
            <summary>Sets the shim of CngKeyBlobFormat.get_Format()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.AllInstances.GetHashCode01">
            <summary>Sets the shim of CngKeyBlobFormat.GetHashCode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyBlobFormat.AllInstances.ToString01">
            <summary>Sets the shim of CngKeyBlobFormat.ToString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters">
            <summary>Shim type of System.Security.Cryptography.CngKeyCreationParameters</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.#ctor(System.Security.Cryptography.CngKeyCreationParameters)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.Constructor">
            <summary>Sets the shim of CngKeyCreationParameters.CngKeyCreationParameters()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.ExportPolicyGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_ExportPolicy()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.ExportPolicySetNullableOfCngExportPolicies">
            <summary>Sets the shim of CngKeyCreationParameters.set_ExportPolicy(Nullable`1&lt;CngExportPolicies&gt; value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.KeyCreationOptionsGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_KeyCreationOptions()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.KeyCreationOptionsSetCngKeyCreationOptions">
            <summary>Sets the shim of CngKeyCreationParameters.set_KeyCreationOptions(CngKeyCreationOptions value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.KeyUsageGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_KeyUsage()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.KeyUsageSetNullableOfCngKeyUsages">
            <summary>Sets the shim of CngKeyCreationParameters.set_KeyUsage(Nullable`1&lt;CngKeyUsages&gt; value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.ParametersGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_Parameters()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.ParentWindowHandleGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_ParentWindowHandle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.ParentWindowHandleSetIntPtr">
            <summary>Sets the shim of CngKeyCreationParameters.set_ParentWindowHandle(IntPtr value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.ProviderGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_Provider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.ProviderSetCngProvider">
            <summary>Sets the shim of CngKeyCreationParameters.set_Provider(CngProvider value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.UIPolicyGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_UIPolicy()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.UIPolicySetCngUIPolicy">
            <summary>Sets the shim of CngKeyCreationParameters.set_UIPolicy(CngUIPolicy value)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.ExportPolicyGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_ExportPolicy()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.ExportPolicySetNullableOfCngExportPolicies">
            <summary>Sets the shim of CngKeyCreationParameters.set_ExportPolicy(Nullable`1&lt;CngExportPolicies&gt; value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.KeyCreationOptionsGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_KeyCreationOptions()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.KeyCreationOptionsSetCngKeyCreationOptions">
            <summary>Sets the shim of CngKeyCreationParameters.set_KeyCreationOptions(CngKeyCreationOptions value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.KeyUsageGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_KeyUsage()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.KeyUsageSetNullableOfCngKeyUsages">
            <summary>Sets the shim of CngKeyCreationParameters.set_KeyUsage(Nullable`1&lt;CngKeyUsages&gt; value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.ParametersGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_Parameters()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.ParentWindowHandleGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_ParentWindowHandle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.ParentWindowHandleSetIntPtr">
            <summary>Sets the shim of CngKeyCreationParameters.set_ParentWindowHandle(IntPtr value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.ProviderGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_Provider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.ProviderSetCngProvider">
            <summary>Sets the shim of CngKeyCreationParameters.set_Provider(CngProvider value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.UIPolicyGet">
            <summary>Sets the shim of CngKeyCreationParameters.get_UIPolicy()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngKeyCreationParameters.AllInstances.UIPolicySetCngUIPolicy">
            <summary>Sets the shim of CngKeyCreationParameters.set_UIPolicy(CngUIPolicy value)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngProperty">
            <summary>Shim type of System.Security.Cryptography.CngProperty</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProperty.EqualityOpCngPropertyCngProperty">
            <summary>Sets the shim of CngProperty.op_Equality(CngProperty left, CngProperty right)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProperty.InequalityOpCngPropertyCngProperty">
            <summary>Sets the shim of CngProperty.op_Inequality(CngProperty left, CngProperty right)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngPropertyCollection">
            <summary>Shim type of System.Security.Cryptography.CngPropertyCollection</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.#ctor(System.Security.Cryptography.CngPropertyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Bind(System.Collections.Generic.ICollection{System.Security.Cryptography.CngProperty})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Bind(System.Collections.Generic.IEnumerable{System.Security.Cryptography.CngProperty})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Bind(System.Collections.Generic.IList{System.Security.Cryptography.CngProperty})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.Security.Cryptography.CngProperty})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Bind(System.Collections.Generic.IReadOnlyList{System.Security.Cryptography.CngProperty})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.Constructor">
            <summary>Sets the shim of CngPropertyCollection.CngPropertyCollection()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngPropertyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngProvider">
            <summary>Shim type of System.Security.Cryptography.CngProvider</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngProvider.#ctor(System.Security.Cryptography.CngProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngProvider.Bind(System.IEquatable{System.Security.Cryptography.CngProvider})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.ConstructorString">
            <summary>Sets the shim of CngProvider.CngProvider(String provider)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.EqualityOpCngProviderCngProvider">
            <summary>Sets the shim of CngProvider.op_Equality(CngProvider left, CngProvider right)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.EqualsCngProvider">
            <summary>Sets the shim of CngProvider.Equals(CngProvider other)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.EqualsObject">
            <summary>Sets the shim of CngProvider.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.GetHashCode">
            <summary>Sets the shim of CngProvider.GetHashCode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.InequalityOpCngProviderCngProvider">
            <summary>Sets the shim of CngProvider.op_Inequality(CngProvider left, CngProvider right)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.MicrosoftSmartCardKeyStorageProviderGet">
            <summary>Sets the shim of CngProvider.get_MicrosoftSmartCardKeyStorageProvider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.MicrosoftSoftwareKeyStorageProviderGet">
            <summary>Sets the shim of CngProvider.get_MicrosoftSoftwareKeyStorageProvider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.ProviderGet">
            <summary>Sets the shim of CngProvider.get_Provider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.ToString">
            <summary>Sets the shim of CngProvider.ToString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.AllInstances.EqualsCngProvider">
            <summary>Sets the shim of CngProvider.Equals(CngProvider other)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.AllInstances.EqualsObject">
            <summary>Sets the shim of CngProvider.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.AllInstances.GetHashCode01">
            <summary>Sets the shim of CngProvider.GetHashCode()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.AllInstances.ProviderGet">
            <summary>Sets the shim of CngProvider.get_Provider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngProvider.AllInstances.ToString01">
            <summary>Sets the shim of CngProvider.ToString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngUIPolicy">
            <summary>Shim type of System.Security.Cryptography.CngUIPolicy</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngUIPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngUIPolicy.#ctor(System.Security.Cryptography.CngUIPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngUIPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimCngUIPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.ConstructorCngUIProtectionLevels">
            <summary>Sets the shim of CngUIPolicy.CngUIPolicy(CngUIProtectionLevels protectionLevel)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.ConstructorCngUIProtectionLevelsString">
            <summary>Sets the shim of CngUIPolicy.CngUIPolicy(CngUIProtectionLevels protectionLevel, String friendlyName)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.ConstructorCngUIProtectionLevelsStringString">
            <summary>Sets the shim of CngUIPolicy.CngUIPolicy(CngUIProtectionLevels protectionLevel, String friendlyName, String description)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.ConstructorCngUIProtectionLevelsStringStringString">
            <summary>Sets the shim of CngUIPolicy.CngUIPolicy(CngUIProtectionLevels protectionLevel, String friendlyName, String description, String useContext)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.ConstructorCngUIProtectionLevelsStringStringStringString">
            <summary>Sets the shim of CngUIPolicy.CngUIPolicy(CngUIProtectionLevels protectionLevel, String friendlyName, String description, String useContext, String creationTitle)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.CreationTitleGet">
            <summary>Sets the shim of CngUIPolicy.get_CreationTitle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.DescriptionGet">
            <summary>Sets the shim of CngUIPolicy.get_Description()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.FriendlyNameGet">
            <summary>Sets the shim of CngUIPolicy.get_FriendlyName()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.ProtectionLevelGet">
            <summary>Sets the shim of CngUIPolicy.get_ProtectionLevel()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.UseContextGet">
            <summary>Sets the shim of CngUIPolicy.get_UseContext()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimCngUIPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.AllInstances.CreationTitleGet">
            <summary>Sets the shim of CngUIPolicy.get_CreationTitle()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.AllInstances.DescriptionGet">
            <summary>Sets the shim of CngUIPolicy.get_Description()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.AllInstances.FriendlyNameGet">
            <summary>Sets the shim of CngUIPolicy.get_FriendlyName()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.AllInstances.ProtectionLevelGet">
            <summary>Sets the shim of CngUIPolicy.get_ProtectionLevel()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimCngUIPolicy.AllInstances.UseContextGet">
            <summary>Sets the shim of CngUIPolicy.get_UseContext()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDiffieHellman">
            <summary>Shim type of System.Security.Cryptography.ECDiffieHellman</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellman.#ctor(System.Security.Cryptography.ECDiffieHellman)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellman.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellman.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellman.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellman.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellman.Constructor">
            <summary>Sets the shim of ECDiffieHellman.ECDiffieHellman()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellman.Create">
            <summary>Sets the shim of ECDiffieHellman.Create()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellman.CreateString">
            <summary>Sets the shim of ECDiffieHellman.Create(String algorithm)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellman.KeyExchangeAlgorithmGet">
            <summary>Sets the shim of ECDiffieHellman.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellman.SignatureAlgorithmGet">
            <summary>Sets the shim of ECDiffieHellman.get_SignatureAlgorithm()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDiffieHellman.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellman.AllInstances.KeyExchangeAlgorithmGet">
            <summary>Sets the shim of ECDiffieHellman.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellman.AllInstances.SignatureAlgorithmGet">
            <summary>Sets the shim of ECDiffieHellman.get_SignatureAlgorithm()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng">
            <summary>Shim type of System.Security.Cryptography.ECDiffieHellmanCng</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECDiffieHellmanCng)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.Constructor">
            <summary>Sets the shim of ECDiffieHellmanCng.ECDiffieHellmanCng()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.ConstructorCngKey">
            <summary>Sets the shim of ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey key)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.ConstructorInt32">
            <summary>Sets the shim of ECDiffieHellmanCng.ECDiffieHellmanCng(Int32 keySize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.DeriveKeyMaterialCngKey">
            <summary>Sets the shim of ECDiffieHellmanCng.DeriveKeyMaterial(CngKey otherPartyPublicKey)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.DeriveKeyMaterialECDiffieHellmanPublicKey">
            <summary>Sets the shim of ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey otherPartyPublicKey)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.DeriveSecretAgreementHandleCngKey">
            <summary>Sets the shim of ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey otherPartyPublicKey)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.DeriveSecretAgreementHandleECDiffieHellmanPublicKey">
            <summary>Sets the shim of ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey otherPartyPublicKey)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.DisposeBoolean">
            <summary>Sets the shim of ECDiffieHellmanCng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.FromXmlStringString">
            <summary>Sets the shim of ECDiffieHellmanCng.FromXmlString(String xmlString)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.FromXmlStringStringECKeyXmlFormat">
            <summary>Sets the shim of ECDiffieHellmanCng.FromXmlString(String xml, ECKeyXmlFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.HashAlgorithmGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.HashAlgorithmSetCngAlgorithm">
            <summary>Sets the shim of ECDiffieHellmanCng.set_HashAlgorithm(CngAlgorithm value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.HmacKeyGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_HmacKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.HmacKeySetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_HmacKey(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.KeyDerivationFunctionGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_KeyDerivationFunction()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.KeyDerivationFunctionSetECDiffieHellmanKeyDerivationFunction">
            <summary>Sets the shim of ECDiffieHellmanCng.set_KeyDerivationFunction(ECDiffieHellmanKeyDerivationFunction value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.KeyGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_Key()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.KeySetCngKey">
            <summary>Sets the shim of ECDiffieHellmanCng.set_Key(CngKey value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.LabelGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_Label()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.LabelSetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_Label(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.PublicKeyGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_PublicKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.SecretAppendGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_SecretAppend()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.SecretAppendSetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_SecretAppend(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.SecretPrependGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_SecretPrepend()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.SecretPrependSetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_SecretPrepend(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.SeedGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_Seed()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.SeedSetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_Seed(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.StaticConstructor">
            <summary>Sets the shim of ECDiffieHellmanCng.ECDiffieHellmanCng()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.ToXmlStringBoolean">
            <summary>Sets the shim of ECDiffieHellmanCng.ToXmlString(Boolean includePrivateParameters)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.ToXmlStringECKeyXmlFormat">
            <summary>Sets the shim of ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.UseSecretAgreementAsHmacKeyGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_UseSecretAgreementAsHmacKey()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.DeriveKeyMaterialCngKey">
            <summary>Sets the shim of ECDiffieHellmanCng.DeriveKeyMaterial(CngKey otherPartyPublicKey)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.DeriveKeyMaterialECDiffieHellmanPublicKey">
            <summary>Sets the shim of ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey otherPartyPublicKey)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.DeriveSecretAgreementHandleCngKey">
            <summary>Sets the shim of ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey otherPartyPublicKey)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.DeriveSecretAgreementHandleECDiffieHellmanPublicKey">
            <summary>Sets the shim of ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey otherPartyPublicKey)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ECDiffieHellmanCng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.FromXmlStringString">
            <summary>Sets the shim of ECDiffieHellmanCng.FromXmlString(String xmlString)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.FromXmlStringStringECKeyXmlFormat">
            <summary>Sets the shim of ECDiffieHellmanCng.FromXmlString(String xml, ECKeyXmlFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.HashAlgorithmGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.HashAlgorithmSetCngAlgorithm">
            <summary>Sets the shim of ECDiffieHellmanCng.set_HashAlgorithm(CngAlgorithm value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.HmacKeyGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_HmacKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.HmacKeySetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_HmacKey(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.KeyDerivationFunctionGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_KeyDerivationFunction()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.KeyDerivationFunctionSetECDiffieHellmanKeyDerivationFunction">
            <summary>Sets the shim of ECDiffieHellmanCng.set_KeyDerivationFunction(ECDiffieHellmanKeyDerivationFunction value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.KeyGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_Key()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.KeySetCngKey">
            <summary>Sets the shim of ECDiffieHellmanCng.set_Key(CngKey value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.LabelGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_Label()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.LabelSetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_Label(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.PublicKeyGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_PublicKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.SecretAppendGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_SecretAppend()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.SecretAppendSetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_SecretAppend(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.SecretPrependGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_SecretPrepend()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.SecretPrependSetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_SecretPrepend(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.SeedGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_Seed()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.SeedSetByteArray">
            <summary>Sets the shim of ECDiffieHellmanCng.set_Seed(Byte[] value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.ToXmlStringBoolean">
            <summary>Sets the shim of ECDiffieHellmanCng.ToXmlString(Boolean includePrivateParameters)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.ToXmlStringECKeyXmlFormat">
            <summary>Sets the shim of ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCng.AllInstances.UseSecretAgreementAsHmacKeyGet">
            <summary>Sets the shim of ECDiffieHellmanCng.get_UseSecretAgreementAsHmacKey()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey">
            <summary>Shim type of System.Security.Cryptography.ECDiffieHellmanCngPublicKey</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.#ctor(System.Security.Cryptography.ECDiffieHellmanCngPublicKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.BlobFormatGet">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.get_BlobFormat()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.Constructor">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.ECDiffieHellmanCngPublicKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.DisposeBoolean">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.FromByteArrayByteArrayCngKeyBlobFormat">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.FromByteArray(Byte[] publicKeyBlob, CngKeyBlobFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.FromXmlStringString">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.FromXmlString(String xml)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.Import">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.Import()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.ToXmlString">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.ToXmlString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.AllInstances.BlobFormatGet">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.get_BlobFormat()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.AllInstances.Constructor">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.ECDiffieHellmanCngPublicKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.AllInstances.Import">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.Import()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanCngPublicKey.AllInstances.ToXmlString">
            <summary>Sets the shim of ECDiffieHellmanCngPublicKey.ToXmlString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey">
            <summary>Shim type of System.Security.Cryptography.ECDiffieHellmanPublicKey</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.#ctor(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.ConstructorByteArray">
            <summary>Sets the shim of ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[] keyBlob)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.Dispose">
            <summary>Sets the shim of ECDiffieHellmanPublicKey.Dispose()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.DisposeBoolean">
            <summary>Sets the shim of ECDiffieHellmanPublicKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.ToByteArray">
            <summary>Sets the shim of ECDiffieHellmanPublicKey.ToByteArray()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.AllInstances.Dispose">
            <summary>Sets the shim of ECDiffieHellmanPublicKey.Dispose()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ECDiffieHellmanPublicKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDiffieHellmanPublicKey.AllInstances.ToByteArray">
            <summary>Sets the shim of ECDiffieHellmanPublicKey.ToByteArray()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDsa">
            <summary>Shim type of System.Security.Cryptography.ECDsa</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDsa.#ctor(System.Security.Cryptography.ECDsa)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDsa.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDsa.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDsa.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsa.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsa.Constructor">
            <summary>Sets the shim of ECDsa.ECDsa()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsa.Create">
            <summary>Sets the shim of ECDsa.Create()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsa.CreateString">
            <summary>Sets the shim of ECDsa.Create(String algorithm)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsa.KeyExchangeAlgorithmGet">
            <summary>Sets the shim of ECDsa.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsa.SignatureAlgorithmGet">
            <summary>Sets the shim of ECDsa.get_SignatureAlgorithm()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDsa.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsa.AllInstances.KeyExchangeAlgorithmGet">
            <summary>Sets the shim of ECDsa.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsa.AllInstances.SignatureAlgorithmGet">
            <summary>Sets the shim of ECDsa.get_SignatureAlgorithm()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDsaCng">
            <summary>Shim type of System.Security.Cryptography.ECDsaCng</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDsaCng.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDsaCng.#ctor(System.Security.Cryptography.ECDsaCng)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDsaCng.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDsaCng.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimECDsaCng.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.Constructor">
            <summary>Sets the shim of ECDsaCng.ECDsaCng()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.ConstructorCngKey">
            <summary>Sets the shim of ECDsaCng.ECDsaCng(CngKey key)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.ConstructorInt32">
            <summary>Sets the shim of ECDsaCng.ECDsaCng(Int32 keySize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.DisposeBoolean">
            <summary>Sets the shim of ECDsaCng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.FromXmlStringString">
            <summary>Sets the shim of ECDsaCng.FromXmlString(String xmlString)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.FromXmlStringStringECKeyXmlFormat">
            <summary>Sets the shim of ECDsaCng.FromXmlString(String xml, ECKeyXmlFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.HashAlgorithmGet">
            <summary>Sets the shim of ECDsaCng.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.HashAlgorithmSetCngAlgorithm">
            <summary>Sets the shim of ECDsaCng.set_HashAlgorithm(CngAlgorithm value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.KeyGet">
            <summary>Sets the shim of ECDsaCng.get_Key()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.KeySetCngKey">
            <summary>Sets the shim of ECDsaCng.set_Key(CngKey value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.SignDataByteArray">
            <summary>Sets the shim of ECDsaCng.SignData(Byte[] data)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.SignDataByteArrayInt32Int32">
            <summary>Sets the shim of ECDsaCng.SignData(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.SignDataStream">
            <summary>Sets the shim of ECDsaCng.SignData(Stream data)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.SignHashByteArray">
            <summary>Sets the shim of ECDsaCng.SignHash(Byte[] hash)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.StaticConstructor">
            <summary>Sets the shim of ECDsaCng.ECDsaCng()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.ToXmlStringBoolean">
            <summary>Sets the shim of ECDsaCng.ToXmlString(Boolean includePrivateParameters)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.ToXmlStringECKeyXmlFormat">
            <summary>Sets the shim of ECDsaCng.ToXmlString(ECKeyXmlFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.VerifyDataByteArrayByteArray">
            <summary>Sets the shim of ECDsaCng.VerifyData(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.VerifyDataByteArrayInt32Int32ByteArray">
            <summary>Sets the shim of ECDsaCng.VerifyData(Byte[] data, Int32 offset, Int32 count, Byte[] signature)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.VerifyDataStreamByteArray">
            <summary>Sets the shim of ECDsaCng.VerifyData(Stream data, Byte[] signature)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.VerifyHashByteArrayByteArray">
            <summary>Sets the shim of ECDsaCng.VerifyHash(Byte[] hash, Byte[] signature)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ECDsaCng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.FromXmlStringString">
            <summary>Sets the shim of ECDsaCng.FromXmlString(String xmlString)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.FromXmlStringStringECKeyXmlFormat">
            <summary>Sets the shim of ECDsaCng.FromXmlString(String xml, ECKeyXmlFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.HashAlgorithmGet">
            <summary>Sets the shim of ECDsaCng.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.HashAlgorithmSetCngAlgorithm">
            <summary>Sets the shim of ECDsaCng.set_HashAlgorithm(CngAlgorithm value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.KeyGet">
            <summary>Sets the shim of ECDsaCng.get_Key()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.KeySetCngKey">
            <summary>Sets the shim of ECDsaCng.set_Key(CngKey value)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.SignDataByteArray">
            <summary>Sets the shim of ECDsaCng.SignData(Byte[] data)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.SignDataByteArrayInt32Int32">
            <summary>Sets the shim of ECDsaCng.SignData(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.SignDataStream">
            <summary>Sets the shim of ECDsaCng.SignData(Stream data)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.SignHashByteArray">
            <summary>Sets the shim of ECDsaCng.SignHash(Byte[] hash)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.ToXmlStringBoolean">
            <summary>Sets the shim of ECDsaCng.ToXmlString(Boolean includePrivateParameters)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.ToXmlStringECKeyXmlFormat">
            <summary>Sets the shim of ECDsaCng.ToXmlString(ECKeyXmlFormat format)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.VerifyDataByteArrayByteArray">
            <summary>Sets the shim of ECDsaCng.VerifyData(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.VerifyDataByteArrayInt32Int32ByteArray">
            <summary>Sets the shim of ECDsaCng.VerifyData(Byte[] data, Int32 offset, Int32 count, Byte[] signature)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.VerifyDataStreamByteArray">
            <summary>Sets the shim of ECDsaCng.VerifyData(Stream data, Byte[] signature)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimECDsaCng.AllInstances.VerifyHashByteArrayByteArray">
            <summary>Sets the shim of ECDsaCng.VerifyHash(Byte[] hash, Byte[] signature)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimMD5Cng">
            <summary>Shim type of System.Security.Cryptography.MD5Cng</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimMD5Cng.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimMD5Cng.#ctor(System.Security.Cryptography.MD5Cng)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimMD5Cng.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimMD5Cng.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimMD5Cng.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimMD5Cng.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.Constructor">
            <summary>Sets the shim of MD5Cng.MD5Cng()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.DisposeBoolean">
            <summary>Sets the shim of MD5Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of MD5Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.HashFinal">
            <summary>Sets the shim of MD5Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.Initialize">
            <summary>Sets the shim of MD5Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimMD5Cng.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MD5Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of MD5Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.AllInstances.HashFinal">
            <summary>Sets the shim of MD5Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimMD5Cng.AllInstances.Initialize">
            <summary>Sets the shim of MD5Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation">
            <summary>Shim type of System.Security.Cryptography.ManifestSignatureInformation</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.#ctor(System.Security.Cryptography.ManifestSignatureInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.AuthenticodeSignatureGet">
            <summary>Sets the shim of ManifestSignatureInformation.get_AuthenticodeSignature()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.Constructor">
            <summary>Sets the shim of ManifestSignatureInformation.ManifestSignatureInformation()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.ManifestGet">
            <summary>Sets the shim of ManifestSignatureInformation.get_Manifest()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.StrongNameSignatureGet">
            <summary>Sets the shim of ManifestSignatureInformation.get_StrongNameSignature()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.VerifySignatureActivationContext">
            <summary>Sets the shim of ManifestSignatureInformation.VerifySignature(ActivationContext application)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.VerifySignatureActivationContextManifestKinds">
            <summary>Sets the shim of ManifestSignatureInformation.VerifySignature(ActivationContext application, ManifestKinds manifests)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.VerifySignatureActivationContextManifestKindsX509RevocationFlagX509RevocationMode">
            <summary>Sets the shim of ManifestSignatureInformation.VerifySignature(ActivationContext application, ManifestKinds manifests, X509RevocationFlag revocationFlag, X509RevocationMode revocationMode)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.AllInstances.AuthenticodeSignatureGet">
            <summary>Sets the shim of ManifestSignatureInformation.get_AuthenticodeSignature()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.AllInstances.Constructor">
            <summary>Sets the shim of ManifestSignatureInformation.ManifestSignatureInformation()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.AllInstances.ManifestGet">
            <summary>Sets the shim of ManifestSignatureInformation.get_Manifest()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformation.AllInstances.StrongNameSignatureGet">
            <summary>Sets the shim of ManifestSignatureInformation.get_StrongNameSignature()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection">
            <summary>Shim type of System.Security.Cryptography.ManifestSignatureInformationCollection</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.#ctor(System.Security.Cryptography.ManifestSignatureInformationCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.Bind(System.Collections.Generic.ICollection{System.Security.Cryptography.ManifestSignatureInformation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.Bind(System.Collections.Generic.IEnumerable{System.Security.Cryptography.ManifestSignatureInformation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.Bind(System.Collections.Generic.IList{System.Security.Cryptography.ManifestSignatureInformation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.Security.Cryptography.ManifestSignatureInformation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.Bind(System.Collections.Generic.IReadOnlyList{System.Security.Cryptography.ManifestSignatureInformation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.ConstructorIListOfManifestSignatureInformation">
            <summary>Sets the shim of ManifestSignatureInformationCollection.ManifestSignatureInformationCollection(IList`1&lt;ManifestSignatureInformation&gt; signatureInformation)</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimManifestSignatureInformationCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA1Cng">
            <summary>Shim type of System.Security.Cryptography.SHA1Cng</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA1Cng.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA1Cng.#ctor(System.Security.Cryptography.SHA1Cng)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA1Cng.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA1Cng.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA1Cng.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA1Cng.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.Constructor">
            <summary>Sets the shim of SHA1Cng.SHA1Cng()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.DisposeBoolean">
            <summary>Sets the shim of SHA1Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA1Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.HashFinal">
            <summary>Sets the shim of SHA1Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.Initialize">
            <summary>Sets the shim of SHA1Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA1Cng.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SHA1Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA1Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.AllInstances.HashFinal">
            <summary>Sets the shim of SHA1Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA1Cng.AllInstances.Initialize">
            <summary>Sets the shim of SHA1Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA256Cng">
            <summary>Shim type of System.Security.Cryptography.SHA256Cng</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256Cng.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256Cng.#ctor(System.Security.Cryptography.SHA256Cng)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256Cng.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256Cng.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256Cng.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256Cng.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.Constructor">
            <summary>Sets the shim of SHA256Cng.SHA256Cng()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.DisposeBoolean">
            <summary>Sets the shim of SHA256Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA256Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.HashFinal">
            <summary>Sets the shim of SHA256Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.Initialize">
            <summary>Sets the shim of SHA256Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA256Cng.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SHA256Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA256Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.AllInstances.HashFinal">
            <summary>Sets the shim of SHA256Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256Cng.AllInstances.Initialize">
            <summary>Sets the shim of SHA256Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider">
            <summary>Shim type of System.Security.Cryptography.SHA256CryptoServiceProvider</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.#ctor(System.Security.Cryptography.SHA256CryptoServiceProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.Constructor">
            <summary>Sets the shim of SHA256CryptoServiceProvider.SHA256CryptoServiceProvider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.DisposeBoolean">
            <summary>Sets the shim of SHA256CryptoServiceProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA256CryptoServiceProvider.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.HashFinal">
            <summary>Sets the shim of SHA256CryptoServiceProvider.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.Initialize">
            <summary>Sets the shim of SHA256CryptoServiceProvider.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SHA256CryptoServiceProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA256CryptoServiceProvider.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.AllInstances.HashFinal">
            <summary>Sets the shim of SHA256CryptoServiceProvider.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA256CryptoServiceProvider.AllInstances.Initialize">
            <summary>Sets the shim of SHA256CryptoServiceProvider.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA384Cng">
            <summary>Shim type of System.Security.Cryptography.SHA384Cng</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384Cng.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384Cng.#ctor(System.Security.Cryptography.SHA384Cng)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384Cng.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384Cng.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384Cng.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384Cng.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.Constructor">
            <summary>Sets the shim of SHA384Cng.SHA384Cng()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.DisposeBoolean">
            <summary>Sets the shim of SHA384Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA384Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.HashFinal">
            <summary>Sets the shim of SHA384Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.Initialize">
            <summary>Sets the shim of SHA384Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA384Cng.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SHA384Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA384Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.AllInstances.HashFinal">
            <summary>Sets the shim of SHA384Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384Cng.AllInstances.Initialize">
            <summary>Sets the shim of SHA384Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider">
            <summary>Shim type of System.Security.Cryptography.SHA384CryptoServiceProvider</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.#ctor(System.Security.Cryptography.SHA384CryptoServiceProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.Constructor">
            <summary>Sets the shim of SHA384CryptoServiceProvider.SHA384CryptoServiceProvider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.DisposeBoolean">
            <summary>Sets the shim of SHA384CryptoServiceProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA384CryptoServiceProvider.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.HashFinal">
            <summary>Sets the shim of SHA384CryptoServiceProvider.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.Initialize">
            <summary>Sets the shim of SHA384CryptoServiceProvider.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SHA384CryptoServiceProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA384CryptoServiceProvider.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.AllInstances.HashFinal">
            <summary>Sets the shim of SHA384CryptoServiceProvider.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA384CryptoServiceProvider.AllInstances.Initialize">
            <summary>Sets the shim of SHA384CryptoServiceProvider.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA512Cng">
            <summary>Shim type of System.Security.Cryptography.SHA512Cng</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512Cng.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512Cng.#ctor(System.Security.Cryptography.SHA512Cng)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512Cng.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512Cng.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512Cng.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512Cng.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.Constructor">
            <summary>Sets the shim of SHA512Cng.SHA512Cng()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.DisposeBoolean">
            <summary>Sets the shim of SHA512Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA512Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.HashFinal">
            <summary>Sets the shim of SHA512Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.Initialize">
            <summary>Sets the shim of SHA512Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA512Cng.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SHA512Cng.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA512Cng.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.AllInstances.HashFinal">
            <summary>Sets the shim of SHA512Cng.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512Cng.AllInstances.Initialize">
            <summary>Sets the shim of SHA512Cng.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider">
            <summary>Shim type of System.Security.Cryptography.SHA512CryptoServiceProvider</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.#ctor(System.Security.Cryptography.SHA512CryptoServiceProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.Constructor">
            <summary>Sets the shim of SHA512CryptoServiceProvider.SHA512CryptoServiceProvider()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.DisposeBoolean">
            <summary>Sets the shim of SHA512CryptoServiceProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA512CryptoServiceProvider.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.HashFinal">
            <summary>Sets the shim of SHA512CryptoServiceProvider.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.Initialize">
            <summary>Sets the shim of SHA512CryptoServiceProvider.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SHA512CryptoServiceProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA512CryptoServiceProvider.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.AllInstances.HashFinal">
            <summary>Sets the shim of SHA512CryptoServiceProvider.HashFinal()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimSHA512CryptoServiceProvider.AllInstances.Initialize">
            <summary>Sets the shim of SHA512CryptoServiceProvider.Initialize()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation">
            <summary>Shim type of System.Security.Cryptography.StrongNameSignatureInformation</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.#ctor(System.Security.Cryptography.StrongNameSignatureInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.Constructor">
            <summary>Sets the shim of StrongNameSignatureInformation.StrongNameSignatureInformation()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.HResultGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_HResult()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.HashAlgorithmGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.IsValidGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_IsValid()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.PublicKeyGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_PublicKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.StaticConstructor">
            <summary>Sets the shim of StrongNameSignatureInformation.StrongNameSignatureInformation()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.VerificationResultGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_VerificationResult()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.AllInstances.Constructor">
            <summary>Sets the shim of StrongNameSignatureInformation.StrongNameSignatureInformation()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.AllInstances.HResultGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_HResult()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.AllInstances.HashAlgorithmGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.AllInstances.IsValidGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_IsValid()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.AllInstances.PublicKeyGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_PublicKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.ShimStrongNameSignatureInformation.AllInstances.VerificationResultGet">
            <summary>Sets the shim of StrongNameSignatureInformation.get_VerificationResult()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.StubECDiffieHellman">
            <summary>Stub type of System.Security.Cryptography.ECDiffieHellman</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellman.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellman.AttachBackingFieldToKeySize">
            <summary>Attaches delegates to emulate StubECDiffieHellman.KeySize as a property with a backing field.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
            <summary>Sets the stub of ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey otherPartyPublicKey)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.DeriveKeyMaterialECDiffieHellmanPublicKey">
            <summary>Sets the stub of ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey otherPartyPublicKey)</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellman.Dispose(System.Boolean)">
            <summary>Sets the stub of AsymmetricAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.DisposeBoolean">
            <summary>Sets the stub of AsymmetricAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellman.FromXmlString(System.String)">
            <summary>Sets the stub of AsymmetricAlgorithm.FromXmlString(String xmlString)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.FromXmlStringString">
            <summary>Sets the stub of AsymmetricAlgorithm.FromXmlString(String xmlString)</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellman.InitializeStub">
            <summary>Initializes a new instance of type StubECDiffieHellman</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.KeyExchangeAlgorithmGet">
            <summary>Sets the stub of ECDiffieHellman.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.KeySizeGet">
            <summary>Sets the stub of AsymmetricAlgorithm.get_KeySize()</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.KeySizeSetInt32">
            <summary>Sets the stub of AsymmetricAlgorithm.set_KeySize(Int32 value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.LegalKeySizesGet">
            <summary>Sets the stub of AsymmetricAlgorithm.get_LegalKeySizes()</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.PublicKeyGet">
            <summary>Sets the stub of ECDiffieHellman.get_PublicKey()</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.SignatureAlgorithmGet">
            <summary>Sets the stub of ECDiffieHellman.get_SignatureAlgorithm()</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellman.ToXmlString(System.Boolean)">
            <summary>Sets the stub of AsymmetricAlgorithm.ToXmlString(Boolean includePrivateParameters)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellman.ToXmlStringBoolean">
            <summary>Sets the stub of AsymmetricAlgorithm.ToXmlString(Boolean includePrivateParameters)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellman.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellman.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellman.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellman.KeyExchangeAlgorithm">
            <summary>Sets the stub of ECDiffieHellman.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellman.KeySize">
            <summary>Sets the stub of AsymmetricAlgorithm.get_KeySize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellman.LegalKeySizes">
            <summary>Sets the stub of AsymmetricAlgorithm.get_LegalKeySizes()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellman.PublicKey">
            <summary>Sets the stub of ECDiffieHellman.get_PublicKey()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellman.SignatureAlgorithm">
            <summary>Sets the stub of ECDiffieHellman.get_SignatureAlgorithm()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey">
            <summary>Stub type of System.Security.Cryptography.ECDiffieHellmanPublicKey</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.Dispose(System.Boolean)">
            <summary>Sets the stub of ECDiffieHellmanPublicKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.DisposeBoolean">
            <summary>Sets the stub of ECDiffieHellmanPublicKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.InitializeStub">
            <summary>Initializes a new instance of type StubECDiffieHellmanPublicKey</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.ToByteArray">
            <summary>Sets the stub of ECDiffieHellmanPublicKey.ToByteArray()</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.ToByteArray01">
            <summary>Sets the stub of ECDiffieHellmanPublicKey.ToByteArray()</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.ToXmlString">
            <summary>Sets the stub of ECDiffieHellmanPublicKey.ToXmlString()</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.ToXmlString01">
            <summary>Sets the stub of ECDiffieHellmanPublicKey.ToXmlString()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDiffieHellmanPublicKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.StubECDsa">
            <summary>Stub type of System.Security.Cryptography.ECDsa</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDsa.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDsa.AttachBackingFieldToKeySize">
            <summary>Attaches delegates to emulate StubECDsa.KeySize as a property with a backing field.</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDsa.Dispose(System.Boolean)">
            <summary>Sets the stub of AsymmetricAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.DisposeBoolean">
            <summary>Sets the stub of AsymmetricAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDsa.FromXmlString(System.String)">
            <summary>Sets the stub of AsymmetricAlgorithm.FromXmlString(String xmlString)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.FromXmlStringString">
            <summary>Sets the stub of AsymmetricAlgorithm.FromXmlString(String xmlString)</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDsa.InitializeStub">
            <summary>Initializes a new instance of type StubECDsa</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.KeyExchangeAlgorithmGet">
            <summary>Sets the stub of ECDsa.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.KeySizeGet">
            <summary>Sets the stub of AsymmetricAlgorithm.get_KeySize()</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.KeySizeSetInt32">
            <summary>Sets the stub of AsymmetricAlgorithm.set_KeySize(Int32 value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.LegalKeySizesGet">
            <summary>Sets the stub of AsymmetricAlgorithm.get_LegalKeySizes()</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDsa.SignHash(System.Byte[])">
            <summary>Sets the stub of ECDsa.SignHash(Byte[] hash)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.SignHashByteArray">
            <summary>Sets the stub of ECDsa.SignHash(Byte[] hash)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.SignatureAlgorithmGet">
            <summary>Sets the stub of ECDsa.get_SignatureAlgorithm()</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDsa.ToXmlString(System.Boolean)">
            <summary>Sets the stub of AsymmetricAlgorithm.ToXmlString(Boolean includePrivateParameters)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.ToXmlStringBoolean">
            <summary>Sets the stub of AsymmetricAlgorithm.ToXmlString(Boolean includePrivateParameters)</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubECDsa.VerifyHash(System.Byte[],System.Byte[])">
            <summary>Sets the stub of ECDsa.VerifyHash(Byte[] hash, Byte[] signature)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubECDsa.VerifyHashByteArrayByteArray">
            <summary>Sets the stub of ECDsa.VerifyHash(Byte[] hash, Byte[] signature)</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDsa.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDsa.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDsa.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDsa.KeyExchangeAlgorithm">
            <summary>Sets the stub of ECDsa.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDsa.KeySize">
            <summary>Sets the stub of AsymmetricAlgorithm.get_KeySize()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDsa.LegalKeySizes">
            <summary>Sets the stub of AsymmetricAlgorithm.get_LegalKeySizes()</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubECDsa.SignatureAlgorithm">
            <summary>Sets the stub of ECDsa.get_SignatureAlgorithm()</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation">
            <summary>Shim type of System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.#ctor(System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.Constructor">
            <summary>Sets the shim of AuthenticodeSignatureInformation.AuthenticodeSignatureInformation()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.DescriptionGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_Description()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.DescriptionUrlGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_DescriptionUrl()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.HResultGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_HResult()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.HashAlgorithmGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.SignatureChainGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_SignatureChain()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.SigningCertificateGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_SigningCertificate()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.TimestampGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_Timestamp()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.TrustStatusGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_TrustStatus()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.VerificationResultGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_VerificationResult()</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.Constructor">
            <summary>Sets the shim of AuthenticodeSignatureInformation.AuthenticodeSignatureInformation()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.DescriptionGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_Description()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.DescriptionUrlGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_DescriptionUrl()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.HResultGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_HResult()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.HashAlgorithmGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.SignatureChainGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_SignatureChain()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.SigningCertificateGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_SigningCertificate()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.TimestampGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_Timestamp()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.TrustStatusGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_TrustStatus()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimAuthenticodeSignatureInformation.AllInstances.VerificationResultGet">
            <summary>Sets the shim of AuthenticodeSignatureInformation.get_VerificationResult()</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation">
            <summary>Shim type of System.Security.Cryptography.X509Certificates.TimestampInformation</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.#ctor(System.Security.Cryptography.X509Certificates.TimestampInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.Constructor">
            <summary>Sets the shim of TimestampInformation.TimestampInformation()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.HResultGet">
            <summary>Sets the shim of TimestampInformation.get_HResult()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.HashAlgorithmGet">
            <summary>Sets the shim of TimestampInformation.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.IsValidGet">
            <summary>Sets the shim of TimestampInformation.get_IsValid()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.SignatureChainGet">
            <summary>Sets the shim of TimestampInformation.get_SignatureChain()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.SigningCertificateGet">
            <summary>Sets the shim of TimestampInformation.get_SigningCertificate()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.TimestampGet">
            <summary>Sets the shim of TimestampInformation.get_Timestamp()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.VerificationResultGet">
            <summary>Sets the shim of TimestampInformation.get_VerificationResult()</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.AllInstances.Constructor">
            <summary>Sets the shim of TimestampInformation.TimestampInformation()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.AllInstances.HResultGet">
            <summary>Sets the shim of TimestampInformation.get_HResult()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.AllInstances.HashAlgorithmGet">
            <summary>Sets the shim of TimestampInformation.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.AllInstances.IsValidGet">
            <summary>Sets the shim of TimestampInformation.get_IsValid()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.AllInstances.SignatureChainGet">
            <summary>Sets the shim of TimestampInformation.get_SignatureChain()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.AllInstances.SigningCertificateGet">
            <summary>Sets the shim of TimestampInformation.get_SigningCertificate()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.AllInstances.TimestampGet">
            <summary>Sets the shim of TimestampInformation.get_Timestamp()</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.ShimTimestampInformation.AllInstances.VerificationResultGet">
            <summary>Sets the shim of TimestampInformation.get_VerificationResult()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimReaderWriterLockSlim">
            <summary>Shim type of System.Threading.ReaderWriterLockSlim</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimReaderWriterLockSlim.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimReaderWriterLockSlim.#ctor(System.Threading.ReaderWriterLockSlim)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimReaderWriterLockSlim.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimReaderWriterLockSlim.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimReaderWriterLockSlim.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.Constructor">
            <summary>Sets the shim of ReaderWriterLockSlim.ReaderWriterLockSlim()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.ConstructorLockRecursionPolicy">
            <summary>Sets the shim of ReaderWriterLockSlim.ReaderWriterLockSlim(LockRecursionPolicy recursionPolicy)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.CurrentReadCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_CurrentReadCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.Dispose">
            <summary>Sets the shim of ReaderWriterLockSlim.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.EnterReadLock">
            <summary>Sets the shim of ReaderWriterLockSlim.EnterReadLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.EnterUpgradeableReadLock">
            <summary>Sets the shim of ReaderWriterLockSlim.EnterUpgradeableReadLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.EnterWriteLock">
            <summary>Sets the shim of ReaderWriterLockSlim.EnterWriteLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.ExitReadLock">
            <summary>Sets the shim of ReaderWriterLockSlim.ExitReadLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.ExitUpgradeableReadLock">
            <summary>Sets the shim of ReaderWriterLockSlim.ExitUpgradeableReadLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.ExitWriteLock">
            <summary>Sets the shim of ReaderWriterLockSlim.ExitWriteLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.IsReadLockHeldGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_IsReadLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.IsUpgradeableReadLockHeldGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_IsUpgradeableReadLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.IsWriteLockHeldGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_IsWriteLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.RecursionPolicyGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_RecursionPolicy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.RecursiveReadCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_RecursiveReadCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.RecursiveUpgradeCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_RecursiveUpgradeCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.RecursiveWriteCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_RecursiveWriteCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.TryEnterReadLockInt32">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterReadLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.TryEnterReadLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterReadLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.TryEnterUpgradeableReadLockInt32">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterUpgradeableReadLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.TryEnterUpgradeableReadLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterUpgradeableReadLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.TryEnterWriteLockInt32">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterWriteLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.TryEnterWriteLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterWriteLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.WaitingReadCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_WaitingReadCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.WaitingUpgradeCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_WaitingUpgradeCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.WaitingWriteCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_WaitingWriteCount()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.CurrentReadCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_CurrentReadCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.Dispose">
            <summary>Sets the shim of ReaderWriterLockSlim.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.EnterReadLock">
            <summary>Sets the shim of ReaderWriterLockSlim.EnterReadLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.EnterUpgradeableReadLock">
            <summary>Sets the shim of ReaderWriterLockSlim.EnterUpgradeableReadLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.EnterWriteLock">
            <summary>Sets the shim of ReaderWriterLockSlim.EnterWriteLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.ExitReadLock">
            <summary>Sets the shim of ReaderWriterLockSlim.ExitReadLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.ExitUpgradeableReadLock">
            <summary>Sets the shim of ReaderWriterLockSlim.ExitUpgradeableReadLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.ExitWriteLock">
            <summary>Sets the shim of ReaderWriterLockSlim.ExitWriteLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.IsReadLockHeldGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_IsReadLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.IsUpgradeableReadLockHeldGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_IsUpgradeableReadLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.IsWriteLockHeldGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_IsWriteLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.RecursionPolicyGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_RecursionPolicy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.RecursiveReadCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_RecursiveReadCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.RecursiveUpgradeCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_RecursiveUpgradeCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.RecursiveWriteCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_RecursiveWriteCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.TryEnterReadLockInt32">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterReadLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.TryEnterReadLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterReadLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.TryEnterUpgradeableReadLockInt32">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterUpgradeableReadLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.TryEnterUpgradeableReadLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterUpgradeableReadLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.TryEnterWriteLockInt32">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterWriteLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.TryEnterWriteLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLockSlim.TryEnterWriteLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.WaitingReadCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_WaitingReadCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.WaitingUpgradeCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_WaitingUpgradeCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLockSlim.AllInstances.WaitingWriteCountGet">
            <summary>Sets the shim of ReaderWriterLockSlim.get_WaitingWriteCount()</summary>
        </member>
        <member name="T:System.Threading.Fakes.StubReaderWriterLockSlim">
            <summary>Stub type of System.Threading.ReaderWriterLockSlim</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubReaderWriterLockSlim.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubReaderWriterLockSlim.#ctor(System.Threading.LockRecursionPolicy)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubReaderWriterLockSlim.InitializeStub">
            <summary>Initializes a new instance of type StubReaderWriterLockSlim</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubReaderWriterLockSlim.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubReaderWriterLockSlim.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubReaderWriterLockSlim.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.ShimTaskExtensions">
            <summary>Shim type of System.Threading.Tasks.TaskExtensions</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.ShimTaskExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.ShimTaskExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.ShimTaskExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.ShimTaskExtensions.UnwrapOf1TaskOfTaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.Task{``0}})">
            <summary>Sets the shim of TaskExtensions.Unwrap(Task`1&lt;Task`1&lt;!!0&gt;&gt; task)</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.ShimTaskExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.ShimTaskExtensions.UnwrapTaskOfTask">
            <summary>Sets the shim of TaskExtensions.Unwrap(Task`1&lt;Task&gt; task)</summary>
        </member>
    </members>
</doc>
